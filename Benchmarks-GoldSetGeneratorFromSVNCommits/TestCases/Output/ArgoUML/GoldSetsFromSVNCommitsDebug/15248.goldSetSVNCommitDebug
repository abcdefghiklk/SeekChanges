SVN Commit: 15248
File Name and Type: M	trunk_src_argouml-app_src_org_argouml_profile_init_InitProfileSubsystem.java
Reading file: TestCases/Input/ArgoUML/SVNFilesSideBySide/15248/trunk_src_argouml-app_src_org_argouml_profile_init_InitProfileSubsystem.java.vPrevious
org.argouml.profile.init.InitProfileSubsystem.init	0	
List of methods:
org.argouml.profile.init.InitProfileSubsystem.init()
{
  ProfileFacade.setManager(new org.argouml.profile.internal.ProfileManagerImpl());
}


-------------------------------------
Reading file: TestCases/Input/ArgoUML/SVNFilesSideBySide/15248/trunk_src_argouml-app_src_org_argouml_profile_init_InitProfileSubsystem.java.v15248
org.argouml.profile.init.InitProfileSubsystem.init	0	
List of methods:
org.argouml.profile.init.InitProfileSubsystem.init()
{
  ProfileFacade.setManager(new org.argouml.profile.internal.ProfileManagerImpl());
  PropPanelFactory factory=new ProfilePropPanelFactory();
  PropPanelFactoryManager.addPropPanelFactory(factory);
}


-------------------------------------
ListOfCorpusMethodsPreviousVersion size: 1
ListOfCorpusMethodsCurrentVersion size: 1
Gold set methods: 
org.argouml.profile.init.InitProfileSubsystem.init()

##########################################################

File Name and Type: R	trunk_src_argouml-app_src_org_argouml_profile_internal_ocl_uml14_Bag.java
Reading file: TestCases/Input/ArgoUML/SVNFilesSideBySide/15248/trunk_src_argouml-app_src_org_argouml_profile_internal_ocl_uml14_Bag.java.vPrevious
List of methods:
-------------------------------------
Reading file: TestCases/Input/ArgoUML/SVNFilesSideBySide/15248/trunk_src_argouml-app_src_org_argouml_profile_internal_ocl_uml14_Bag.java.v15248
List of methods:
-------------------------------------
ListOfCorpusMethodsPreviousVersion size: 0
ListOfCorpusMethodsCurrentVersion size: 0
Gold set methods: 

##########################################################

File Name and Type: R	trunk_src_argouml-app_src_org_argouml_profile_internal_ocl_ContextApplicable.java
Reading file: TestCases/Input/ArgoUML/SVNFilesSideBySide/15248/trunk_src_argouml-app_src_org_argouml_profile_internal_ocl_ContextApplicable.java.vPrevious
org.argouml.profile.internal.ocl.ContextApplicable.ContextApplicable	1	Object	
org.argouml.profile.internal.ocl.ContextApplicable.isApplicable	0	
org.argouml.profile.internal.ocl.ContextApplicable.caseAClassifierContext	1	AClassifierContext	
org.argouml.profile.internal.ocl.ContextApplicable.inAPreStereotype	1	APreStereotype	
org.argouml.profile.internal.ocl.ContextApplicable.inAPostStereotype	1	APostStereotype	
List of methods:
org.argouml.profile.internal.ocl.ContextApplicable.ContextApplicable(Object)
{
  this.modelElement=modelElement;
}


org.argouml.profile.internal.ocl.ContextApplicable.isApplicable()
{
  return applicable;
}


org.argouml.profile.internal.ocl.ContextApplicable.caseAClassifierContext(AClassifierContext)
{
  String metaclass=("" + node.getPathTypeName()).trim();
  try {
    Method m=Facade.class.getDeclaredMethod("isA" + metaclass,new Class[]{Object.class});
    if (m != null) {
      applicable&=(Boolean)m.invoke(Model.getFacade(),new Object[]{modelElement});
    }
  }
 catch (  Exception e) {
    LOG.error("Exception",e);
  }
}


org.argouml.profile.internal.ocl.ContextApplicable.inAPreStereotype(APreStereotype)
{
  applicable=false;
}


org.argouml.profile.internal.ocl.ContextApplicable.inAPostStereotype(APostStereotype)
{
  applicable=false;
}


-------------------------------------
Reading file: TestCases/Input/ArgoUML/SVNFilesSideBySide/15248/trunk_src_argouml-app_src_org_argouml_profile_internal_ocl_ContextApplicable.java.v15248
org.argouml.profile.internal.ocl.ContextApplicable.ContextApplicable	1	Object	
org.argouml.profile.internal.ocl.ContextApplicable.isApplicable	0	
org.argouml.profile.internal.ocl.ContextApplicable.caseAClassifierContext	1	AClassifierContext	
org.argouml.profile.internal.ocl.ContextApplicable.inAPreStereotype	1	APreStereotype	
org.argouml.profile.internal.ocl.ContextApplicable.inAPostStereotype	1	APostStereotype	
List of methods:
org.argouml.profile.internal.ocl.ContextApplicable.ContextApplicable(Object)
{
  this.modelElement=modelElement;
}


org.argouml.profile.internal.ocl.ContextApplicable.isApplicable()
{
  return applicable;
}


org.argouml.profile.internal.ocl.ContextApplicable.caseAClassifierContext(AClassifierContext)
{
  String metaclass=("" + node.getPathTypeName()).trim();
  try {
    Method m=Facade.class.getDeclaredMethod("isA" + metaclass,new Class[]{Object.class});
    if (m != null) {
      applicable&=(Boolean)m.invoke(Model.getFacade(),new Object[]{modelElement});
    }
  }
 catch (  Exception e) {
    LOG.error("Exception",e);
  }
}


org.argouml.profile.internal.ocl.ContextApplicable.inAPreStereotype(APreStereotype)
{
  applicable=false;
}


org.argouml.profile.internal.ocl.ContextApplicable.inAPostStereotype(APostStereotype)
{
  applicable=false;
}


-------------------------------------
ListOfCorpusMethodsPreviousVersion size: 5
ListOfCorpusMethodsCurrentVersion size: 5
Gold set methods: 

##########################################################

File Name and Type: R	trunk_src_argouml-app_src_org_argouml_profile_internal_ocl_uml14_CollectionsModelInterpreter.java
Reading file: TestCases/Input/ArgoUML/SVNFilesSideBySide/15248/trunk_src_argouml-app_src_org_argouml_profile_internal_ocl_uml14_CollectionsModelInterpreter.java.vPrevious
org.argouml.profile.internal.ocl.uml14.CollectionsModelInterpreter.invokeFeature	5	HashMap<String,Object>	Object	String	String	Object[]	
org.argouml.profile.internal.ocl.uml14.CollectionsModelInterpreter.doForAll	5	HashMap<String,Object>	Collection	Vector<String>	Object	LambdaEvaluator	
org.argouml.profile.internal.ocl.uml14.CollectionsModelInterpreter.cloneCollection	1	Collection	
List of methods:
org.argouml.profile.internal.ocl.uml14.CollectionsModelInterpreter.invokeFeature(HashMap<String,Object>,Object,String,String,Object[])
{
  if (subject instanceof Collection) {
    if (type.equals("->")) {
      if (feature.toString().trim().equals("select")) {
        Vector<String> vars=(Vector<String>)parameters[0];
        Object exp=parameters[1];
        LambdaEvaluator eval=(LambdaEvaluator)parameters[2];
        Collection col=cloneCollection((Collection)subject);
        Vector<Object> remove=new Vector<Object>();
        String varName=vars.elementAt(0);
        Object oldVal=vt.get(varName);
        for (        Object object : col) {
          vt.put(varName,object);
          Object res=eval.evaluate(vt,exp);
          if (res instanceof Boolean && (Boolean)res) {
          }
 else {
            remove.add(object);
          }
        }
        col.removeAll(remove);
        vt.put(varName,oldVal);
        return col;
      }
 else       if (feature.toString().trim().equals("forAll")) {
        Vector<String> vars=(Vector<String>)parameters[0];
        Object exp=parameters[1];
        LambdaEvaluator eval=(LambdaEvaluator)parameters[2];
        return doForAll(vt,(Collection)subject,vars,exp,eval);
      }
    }
  }
  if (subject instanceof Set) {
    if (type.equals("->")) {
      if (feature.equals("size")) {
        return ((Set)subject).size();
      }
    }
  }
  return null;
}


org.argouml.profile.internal.ocl.uml14.CollectionsModelInterpreter.doForAll(HashMap<String,Object>,Collection,Vector<String>,Object,LambdaEvaluator)
{
  if (vars.isEmpty()) {
    return (Boolean)eval.evaluate(vt,exp);
  }
 else {
    String var=vars.firstElement();
    vars.removeElement(var);
    Object oldval=vt.get(var);
    for (    Object element : collection) {
      vt.put(var,element);
      boolean ret=doForAll(vt,collection,vars,exp,eval);
      if (!ret) {
        return false;
      }
    }
    vt.put(var,oldval);
  }
  return true;
}


org.argouml.profile.internal.ocl.uml14.CollectionsModelInterpreter.cloneCollection(Collection)
{
  if (col instanceof Set) {
    return new HashSet(col);
  }
 else   if (col instanceof List) {
    return new ArrayList(col);
  }
 else   if (col instanceof Bag) {
    return new HashBag(col);
  }
 else {
    throw new IllegalArgumentException();
  }
}


-------------------------------------
Reading file: TestCases/Input/ArgoUML/SVNFilesSideBySide/15248/trunk_src_argouml-app_src_org_argouml_profile_internal_ocl_uml14_CollectionsModelInterpreter.java.v15248
org.argouml.profile.internal.ocl.uml14.CollectionsModelInterpreter.invokeFeature	5	HashMap<String,Object>	Object	String	String	Object[]	
org.argouml.profile.internal.ocl.uml14.CollectionsModelInterpreter.doForAll	5	HashMap<String,Object>	Collection	Vector<String>	Object	LambdaEvaluator	
org.argouml.profile.internal.ocl.uml14.CollectionsModelInterpreter.cloneCollection	1	Collection	
List of methods:
org.argouml.profile.internal.ocl.uml14.CollectionsModelInterpreter.invokeFeature(HashMap<String,Object>,Object,String,String,Object[])
{
  if (subject instanceof Collection) {
    if (type.equals("->")) {
      if (feature.toString().trim().equals("select")) {
        Vector<String> vars=(Vector<String>)parameters[0];
        Object exp=parameters[1];
        LambdaEvaluator eval=(LambdaEvaluator)parameters[2];
        Collection col=cloneCollection((Collection)subject);
        Vector<Object> remove=new Vector<Object>();
        String varName=vars.elementAt(0);
        Object oldVal=vt.get(varName);
        for (        Object object : col) {
          vt.put(varName,object);
          Object res=eval.evaluate(vt,exp);
          if (res instanceof Boolean && (Boolean)res) {
          }
 else {
            remove.add(object);
          }
        }
        col.removeAll(remove);
        vt.put(varName,oldVal);
        return col;
      }
 else       if (feature.toString().trim().equals("forAll")) {
        Vector<String> vars=(Vector<String>)parameters[0];
        Object exp=parameters[1];
        LambdaEvaluator eval=(LambdaEvaluator)parameters[2];
        return doForAll(vt,(Collection)subject,vars,exp,eval);
      }
    }
  }
  if (subject instanceof Set) {
    if (type.equals("->")) {
      if (feature.equals("size")) {
        return ((Set)subject).size();
      }
    }
  }
  return null;
}


org.argouml.profile.internal.ocl.uml14.CollectionsModelInterpreter.doForAll(HashMap<String,Object>,Collection,Vector<String>,Object,LambdaEvaluator)
{
  if (vars.isEmpty()) {
    return (Boolean)eval.evaluate(vt,exp);
  }
 else {
    String var=vars.firstElement();
    vars.removeElement(var);
    Object oldval=vt.get(var);
    for (    Object element : collection) {
      vt.put(var,element);
      boolean ret=doForAll(vt,collection,vars,exp,eval);
      if (!ret) {
        return false;
      }
    }
    vt.put(var,oldval);
  }
  return true;
}


org.argouml.profile.internal.ocl.uml14.CollectionsModelInterpreter.cloneCollection(Collection)
{
  if (col instanceof Set) {
    return new HashSet(col);
  }
 else   if (col instanceof List) {
    return new ArrayList(col);
  }
 else   if (col instanceof Bag) {
    return new HashBag(col);
  }
 else {
    throw new IllegalArgumentException();
  }
}


-------------------------------------
ListOfCorpusMethodsPreviousVersion size: 3
ListOfCorpusMethodsCurrentVersion size: 3
Gold set methods: 

##########################################################

File Name and Type: M	trunk_src_argouml-app_src_org_argouml_profile_ProfileManager.java
Reading file: TestCases/Input/ArgoUML/SVNFilesSideBySide/15248/trunk_src_argouml-app_src_org_argouml_profile_ProfileManager.java.vPrevious
List of methods:
-------------------------------------
Reading file: TestCases/Input/ArgoUML/SVNFilesSideBySide/15248/trunk_src_argouml-app_src_org_argouml_profile_ProfileManager.java.v15248
List of methods:
-------------------------------------
ListOfCorpusMethodsPreviousVersion size: 0
ListOfCorpusMethodsCurrentVersion size: 0
Gold set methods: 

##########################################################

File Name and Type: M	trunk_src_argouml-app_src_org_argouml_ui_ProjectSettingsDialog.java
Reading file: TestCases/Input/ArgoUML/SVNFilesSideBySide/15248/trunk_src_argouml-app_src_org_argouml_ui_ProjectSettingsDialog.java.vPrevious
org.argouml.ui.ProjectSettingsDialog.ProjectSettingsDialog	0	
org.argouml.ui.ProjectSettingsDialog.showDialog	0	
org.argouml.ui.ProjectSettingsDialog.actionPerformed	1	ActionEvent	
org.argouml.ui.ProjectSettingsDialog.handleSave	0	
org.argouml.ui.ProjectSettingsDialog.handleCancel	0	
org.argouml.ui.ProjectSettingsDialog.handleRefresh	0	
org.argouml.ui.ProjectSettingsDialog.handleOpen	0	
org.argouml.ui.ProjectSettingsDialog.handleResetToDefault	0	
org.argouml.ui.ProjectSettingsDialog.windowActivated	1	WindowEvent	
org.argouml.ui.ProjectSettingsDialog.windowClosed	1	WindowEvent	
org.argouml.ui.ProjectSettingsDialog.windowDeactivated	1	WindowEvent	
org.argouml.ui.ProjectSettingsDialog.windowDeiconified	1	WindowEvent	
org.argouml.ui.ProjectSettingsDialog.windowIconified	1	WindowEvent	
org.argouml.ui.ProjectSettingsDialog.windowOpened	1	WindowEvent	
org.argouml.ui.ProjectSettingsDialog.windowClosing	1	WindowEvent	
List of methods:
org.argouml.ui.ProjectSettingsDialog.ProjectSettingsDialog()
{
  super(Translator.localize("dialog.file.properties"),ArgoDialog.OK_CANCEL_OPTION,true);
  tabs=new JTabbedPane();
  applyButton=new JButton(Translator.localize("button.apply"));
  String mnemonic=Translator.localize("button.apply.mnemonic");
  if (mnemonic != null && mnemonic.length() > 0) {
    applyButton.setMnemonic(mnemonic.charAt(0));
  }
  applyButton.addActionListener(new ActionListener(){
    public void actionPerformed(    ActionEvent e){
      handleSave();
    }
  }
);
  addButton(applyButton);
  resetToDefaultButton=new JButton(Translator.localize("button.reset-to-default"));
  mnemonic=Translator.localize("button.reset-to-default.mnemonic");
  if (mnemonic != null && mnemonic.length() > 0) {
    resetToDefaultButton.setMnemonic(mnemonic.charAt(0));
  }
  resetToDefaultButton.addActionListener(new ActionListener(){
    public void actionPerformed(    ActionEvent e){
      handleResetToDefault();
    }
  }
);
  addButton(resetToDefaultButton);
  Iterator iter=GUI.getInstance().getProjectSettingsTabs().iterator();
  while (iter.hasNext()) {
    GUISettingsTabInterface stp=(GUISettingsTabInterface)iter.next();
    tabs.addTab(Translator.localize(stp.getTabKey()),stp.getTabPanel());
  }
  final int minimumWidth=480;
  tabs.setPreferredSize(new Dimension(Math.max(tabs.getPreferredSize().width,minimumWidth),tabs.getPreferredSize().height));
  tabs.setTabPlacement(SwingConstants.LEFT);
  setContent(tabs);
  addWindowListener(this);
}


org.argouml.ui.ProjectSettingsDialog.showDialog()
{
  if (doingShow) {
    return;
  }
  doingShow=true;
  handleRefresh();
  setVisible(true);
  toFront();
  doingShow=false;
}


org.argouml.ui.ProjectSettingsDialog.actionPerformed(ActionEvent)
{
  super.actionPerformed(ev);
  if (ev.getSource() == getOkButton()) {
    handleSave();
  }
 else   if (ev.getSource() == getCancelButton()) {
    handleCancel();
  }
}


org.argouml.ui.ProjectSettingsDialog.handleSave()
{
  for (int i=0; i < tabs.getComponentCount(); i++) {
    Object o=tabs.getComponent(i);
    if (o instanceof GUISettingsTabInterface) {
      ((GUISettingsTabInterface)o).handleSettingsTabSave();
    }
  }
  windowOpen=false;
}


org.argouml.ui.ProjectSettingsDialog.handleCancel()
{
  for (int i=0; i < tabs.getComponentCount(); i++) {
    Object o=tabs.getComponent(i);
    if (o instanceof GUISettingsTabInterface) {
      ((GUISettingsTabInterface)o).handleSettingsTabCancel();
    }
  }
  windowOpen=false;
}


org.argouml.ui.ProjectSettingsDialog.handleRefresh()
{
  for (int i=0; i < tabs.getComponentCount(); i++) {
    Object o=tabs.getComponent(i);
    if (o instanceof GUISettingsTabInterface) {
      ((GUISettingsTabInterface)o).handleSettingsTabRefresh();
    }
  }
}


org.argouml.ui.ProjectSettingsDialog.handleOpen()
{
  if (!windowOpen) {
    getOkButton().requestFocusInWindow();
    windowOpen=true;
  }
}


org.argouml.ui.ProjectSettingsDialog.handleResetToDefault()
{
  for (int i=0; i < tabs.getComponentCount(); i++) {
    Object o=tabs.getComponent(i);
    if (o instanceof GUISettingsTabInterface) {
      ((GUISettingsTabInterface)o).handleResetToDefault();
    }
  }
}


org.argouml.ui.ProjectSettingsDialog.windowActivated(WindowEvent)
{
  handleOpen();
}


org.argouml.ui.ProjectSettingsDialog.windowClosed(WindowEvent)
{
}


org.argouml.ui.ProjectSettingsDialog.windowDeactivated(WindowEvent)
{
}


org.argouml.ui.ProjectSettingsDialog.windowDeiconified(WindowEvent)
{
}


org.argouml.ui.ProjectSettingsDialog.windowIconified(WindowEvent)
{
}


org.argouml.ui.ProjectSettingsDialog.windowOpened(WindowEvent)
{
  handleOpen();
}


org.argouml.ui.ProjectSettingsDialog.windowClosing(WindowEvent)
{
  handleCancel();
}


-------------------------------------
Reading file: TestCases/Input/ArgoUML/SVNFilesSideBySide/15248/trunk_src_argouml-app_src_org_argouml_ui_ProjectSettingsDialog.java.v15248
org.argouml.ui.ProjectSettingsDialog.ProjectSettingsDialog	0	
org.argouml.ui.ProjectSettingsDialog.showDialog	0	
org.argouml.ui.ProjectSettingsDialog.actionPerformed	1	ActionEvent	
org.argouml.ui.ProjectSettingsDialog.handleSave	0	
org.argouml.ui.ProjectSettingsDialog.handleCancel	0	
org.argouml.ui.ProjectSettingsDialog.handleRefresh	0	
org.argouml.ui.ProjectSettingsDialog.handleOpen	0	
org.argouml.ui.ProjectSettingsDialog.handleResetToDefault	0	
org.argouml.ui.ProjectSettingsDialog.windowActivated	1	WindowEvent	
org.argouml.ui.ProjectSettingsDialog.windowClosed	1	WindowEvent	
org.argouml.ui.ProjectSettingsDialog.windowDeactivated	1	WindowEvent	
org.argouml.ui.ProjectSettingsDialog.windowDeiconified	1	WindowEvent	
org.argouml.ui.ProjectSettingsDialog.windowIconified	1	WindowEvent	
org.argouml.ui.ProjectSettingsDialog.windowOpened	1	WindowEvent	
org.argouml.ui.ProjectSettingsDialog.windowClosing	1	WindowEvent	
org.argouml.ui.ProjectSettingsDialog.showDialog	1	ProjectSettingsTabProfile	
List of methods:
org.argouml.ui.ProjectSettingsDialog.ProjectSettingsDialog()
{
  super(Translator.localize("dialog.file.properties"),ArgoDialog.OK_CANCEL_OPTION,true);
  tabs=new JTabbedPane();
  applyButton=new JButton(Translator.localize("button.apply"));
  String mnemonic=Translator.localize("button.apply.mnemonic");
  if (mnemonic != null && mnemonic.length() > 0) {
    applyButton.setMnemonic(mnemonic.charAt(0));
  }
  applyButton.addActionListener(new ActionListener(){
    public void actionPerformed(    ActionEvent e){
      handleSave();
    }
  }
);
  addButton(applyButton);
  resetToDefaultButton=new JButton(Translator.localize("button.reset-to-default"));
  mnemonic=Translator.localize("button.reset-to-default.mnemonic");
  if (mnemonic != null && mnemonic.length() > 0) {
    resetToDefaultButton.setMnemonic(mnemonic.charAt(0));
  }
  resetToDefaultButton.addActionListener(new ActionListener(){
    public void actionPerformed(    ActionEvent e){
      handleResetToDefault();
    }
  }
);
  addButton(resetToDefaultButton);
  Iterator iter=GUI.getInstance().getProjectSettingsTabs().iterator();
  while (iter.hasNext()) {
    GUISettingsTabInterface stp=(GUISettingsTabInterface)iter.next();
    tabs.addTab(Translator.localize(stp.getTabKey()),stp.getTabPanel());
  }
  final int minimumWidth=480;
  tabs.setPreferredSize(new Dimension(Math.max(tabs.getPreferredSize().width,minimumWidth),tabs.getPreferredSize().height));
  tabs.setTabPlacement(SwingConstants.LEFT);
  setContent(tabs);
  addWindowListener(this);
}


org.argouml.ui.ProjectSettingsDialog.showDialog()
{
  if (doingShow) {
    return;
  }
  doingShow=true;
  handleRefresh();
  setVisible(true);
  toFront();
  doingShow=false;
}


org.argouml.ui.ProjectSettingsDialog.actionPerformed(ActionEvent)
{
  super.actionPerformed(ev);
  if (ev.getSource() == getOkButton()) {
    handleSave();
  }
 else   if (ev.getSource() == getCancelButton()) {
    handleCancel();
  }
}


org.argouml.ui.ProjectSettingsDialog.handleSave()
{
  for (int i=0; i < tabs.getComponentCount(); i++) {
    Object o=tabs.getComponent(i);
    if (o instanceof GUISettingsTabInterface) {
      ((GUISettingsTabInterface)o).handleSettingsTabSave();
    }
  }
  windowOpen=false;
}


org.argouml.ui.ProjectSettingsDialog.handleCancel()
{
  for (int i=0; i < tabs.getComponentCount(); i++) {
    Object o=tabs.getComponent(i);
    if (o instanceof GUISettingsTabInterface) {
      ((GUISettingsTabInterface)o).handleSettingsTabCancel();
    }
  }
  windowOpen=false;
}


org.argouml.ui.ProjectSettingsDialog.handleRefresh()
{
  for (int i=0; i < tabs.getComponentCount(); i++) {
    Object o=tabs.getComponent(i);
    if (o instanceof GUISettingsTabInterface) {
      ((GUISettingsTabInterface)o).handleSettingsTabRefresh();
    }
  }
}


org.argouml.ui.ProjectSettingsDialog.handleOpen()
{
  if (!windowOpen) {
    getOkButton().requestFocusInWindow();
    windowOpen=true;
  }
}


org.argouml.ui.ProjectSettingsDialog.handleResetToDefault()
{
  for (int i=0; i < tabs.getComponentCount(); i++) {
    Object o=tabs.getComponent(i);
    if (o instanceof GUISettingsTabInterface) {
      ((GUISettingsTabInterface)o).handleResetToDefault();
    }
  }
}


org.argouml.ui.ProjectSettingsDialog.windowActivated(WindowEvent)
{
  handleOpen();
}


org.argouml.ui.ProjectSettingsDialog.windowClosed(WindowEvent)
{
}


org.argouml.ui.ProjectSettingsDialog.windowDeactivated(WindowEvent)
{
}


org.argouml.ui.ProjectSettingsDialog.windowDeiconified(WindowEvent)
{
}


org.argouml.ui.ProjectSettingsDialog.windowIconified(WindowEvent)
{
}


org.argouml.ui.ProjectSettingsDialog.windowOpened(WindowEvent)
{
  handleOpen();
}


org.argouml.ui.ProjectSettingsDialog.windowClosing(WindowEvent)
{
  handleCancel();
}


org.argouml.ui.ProjectSettingsDialog.showDialog(ProjectSettingsTabProfile)
{
  try {
    tabs.setSelectedComponent(profilesTab);
  }
 catch (  Throwable t) {
  }
  showDialog();
}


-------------------------------------
ListOfCorpusMethodsPreviousVersion size: 15
ListOfCorpusMethodsCurrentVersion size: 16
Gold set methods: 
org.argouml.ui.ProjectSettingsDialog.showDialog(ProjectSettingsTabProfile)

##########################################################

File Name and Type: M	trunk_src_argouml-app_src_org_argouml_uml_cognitive_critics_CrUML.java
Reading file: TestCases/Input/ArgoUML/SVNFilesSideBySide/15248/trunk_src_argouml-app_src_org_argouml_uml_cognitive_critics_CrUML.java.vPrevious
org.argouml.uml.cognitive.critics.CrUML.CrUML	0	
org.argouml.uml.cognitive.critics.CrUML.setResource	1	String	
org.argouml.uml.cognitive.critics.CrUML.getLocalizedString	1	String	
org.argouml.uml.cognitive.critics.CrUML.getLocalizedString	2	String	String	
org.argouml.uml.cognitive.critics.CrUML.getInstructions	0	
org.argouml.uml.cognitive.critics.CrUML.getDefaultSuggestion	0	
org.argouml.uml.cognitive.critics.CrUML.setHeadline	1	String	
org.argouml.uml.cognitive.critics.CrUML.setupHeadAndDesc	0	
org.argouml.uml.cognitive.critics.CrUML.predicate	2	Object	Designer	
org.argouml.uml.cognitive.critics.CrUML.predicate2	2	Object	Designer	
org.argouml.uml.cognitive.critics.CrUML.expand	2	String	ListSet	
org.argouml.uml.cognitive.critics.CrUML.toDoItem	2	Object	Designer	
org.argouml.uml.cognitive.critics.CrUML.getClassSimpleName	0	
List of methods:
org.argouml.uml.cognitive.critics.CrUML.CrUML()
{
}


org.argouml.uml.cognitive.critics.CrUML.setResource(String)
{
  super.setHeadline(getLocalizedString(key,"-head"));
  super.setDescription(getLocalizedString(key,"-desc"));
}


org.argouml.uml.cognitive.critics.CrUML.getLocalizedString(String)
{
  return getLocalizedString(getClassSimpleName(),suffix);
}


org.argouml.uml.cognitive.critics.CrUML.getLocalizedString(String,String)
{
  return Translator.localize("critics." + key + suffix);
}


org.argouml.uml.cognitive.critics.CrUML.getInstructions()
{
  return getLocalizedString("-ins");
}


org.argouml.uml.cognitive.critics.CrUML.getDefaultSuggestion()
{
  return getLocalizedString("-sug");
}


org.argouml.uml.cognitive.critics.CrUML.setHeadline(String)
{
  setupHeadAndDesc();
}


org.argouml.uml.cognitive.critics.CrUML.setupHeadAndDesc()
{
  setResource(getClassSimpleName());
}


org.argouml.uml.cognitive.critics.CrUML.predicate(Object,Designer)
{
  Project p=ProjectManager.getManager().getCurrentProject();
  if (p.isInTrash(dm) || (Model.getFacade().isAModelElement(dm) && Model.getUmlFactory().isRemoved(dm))) {
    return NO_PROBLEM;
  }
 else {
    return predicate2(dm,dsgr);
  }
}


org.argouml.uml.cognitive.critics.CrUML.predicate2(Object,Designer)
{
  return super.predicate(dm,dsgr);
}


org.argouml.uml.cognitive.critics.CrUML.expand(String,ListSet)
{
  if (offs.size() == 0) {
    return res;
  }
  Object off1=offs.get(0);
  StringBuffer beginning=new StringBuffer("");
  int matchPos=res.indexOf(OCL_START);
  while (matchPos != -1) {
    int endExpr=res.indexOf(OCL_END,matchPos + 1);
    if (endExpr == -1) {
      break;
    }
    if (matchPos > 0) {
      beginning.append(res.substring(0,matchPos));
    }
    String expr=res.substring(matchPos + OCL_START.length(),endExpr);
    String evalStr=null;
    try {
      evalStr=CriticOclEvaluator.getInstance().evalToString(off1,expr);
    }
 catch (    ExpansionException e) {
      LOG.error("Failed to evaluate critic expression",e);
    }
    if (expr.endsWith("") && evalStr.equals("")) {
      evalStr=Translator.localize("misc.name.anon");
    }
    beginning.append(evalStr);
    res=res.substring(endExpr + OCL_END.length());
    matchPos=res.indexOf(OCL_START);
  }
  if (beginning.length() == 0) {
    return res;
  }
 else {
    return beginning.append(res).toString();
  }
}


org.argouml.uml.cognitive.critics.CrUML.toDoItem(Object,Designer)
{
  return new UMLToDoItem(this,dm,dsgr);
}


org.argouml.uml.cognitive.critics.CrUML.getClassSimpleName()
{
  String className=getClass().getName();
  return className.substring(className.lastIndexOf('.') + 1);
}


-------------------------------------
Reading file: TestCases/Input/ArgoUML/SVNFilesSideBySide/15248/trunk_src_argouml-app_src_org_argouml_uml_cognitive_critics_CrUML.java.v15248
org.argouml.uml.cognitive.critics.CrUML.CrUML	0	
org.argouml.uml.cognitive.critics.CrUML.CrUML	1	String	
org.argouml.uml.cognitive.critics.CrUML.setResource	1	String	
org.argouml.uml.cognitive.critics.CrUML.getLocalizedString	1	String	
org.argouml.uml.cognitive.critics.CrUML.getLocalizedString	2	String	String	
org.argouml.uml.cognitive.critics.CrUML.getInstructions	0	
org.argouml.uml.cognitive.critics.CrUML.getDefaultSuggestion	0	
org.argouml.uml.cognitive.critics.CrUML.setupHeadAndDesc	0	
org.argouml.uml.cognitive.critics.CrUML.predicate	2	Object	Designer	
org.argouml.uml.cognitive.critics.CrUML.predicate2	2	Object	Designer	
org.argouml.uml.cognitive.critics.CrUML.expand	2	String	ListSet	
org.argouml.uml.cognitive.critics.CrUML.toDoItem	2	Object	Designer	
org.argouml.uml.cognitive.critics.CrUML.getClassSimpleName	0	
org.argouml.uml.cognitive.critics.CrUML.getCriticizedMetatypes	0	
List of methods:
org.argouml.uml.cognitive.critics.CrUML.CrUML()
{
}


org.argouml.uml.cognitive.critics.CrUML.CrUML(String)
{
  if (localizationPrefix != null) {
    this.localizationPrefix=localizationPrefix;
    setupHeadAndDesc();
  }
}


org.argouml.uml.cognitive.critics.CrUML.setResource(String)
{
  super.setHeadline(getLocalizedString(key,"-head"));
  super.setDescription(getLocalizedString(key,"-desc"));
}


org.argouml.uml.cognitive.critics.CrUML.getLocalizedString(String)
{
  return getLocalizedString(getClassSimpleName(),suffix);
}


org.argouml.uml.cognitive.critics.CrUML.getLocalizedString(String,String)
{
  return Translator.localize(localizationPrefix + "." + key+ suffix);
}


org.argouml.uml.cognitive.critics.CrUML.getInstructions()
{
  return getLocalizedString("-ins");
}


org.argouml.uml.cognitive.critics.CrUML.getDefaultSuggestion()
{
  return getLocalizedString("-sug");
}


org.argouml.uml.cognitive.critics.CrUML.setupHeadAndDesc()
{
  setResource(getClassSimpleName());
}


org.argouml.uml.cognitive.critics.CrUML.predicate(Object,Designer)
{
  Project p=ProjectManager.getManager().getCurrentProject();
  if (p.isInTrash(dm) || (Model.getFacade().isAModelElement(dm) && Model.getUmlFactory().isRemoved(dm))) {
    return NO_PROBLEM;
  }
 else {
    return predicate2(dm,dsgr);
  }
}


org.argouml.uml.cognitive.critics.CrUML.predicate2(Object,Designer)
{
  return super.predicate(dm,dsgr);
}


org.argouml.uml.cognitive.critics.CrUML.expand(String,ListSet)
{
  if (offs.size() == 0) {
    return res;
  }
  Object off1=offs.get(0);
  StringBuffer beginning=new StringBuffer("");
  int matchPos=res.indexOf(OCL_START);
  while (matchPos != -1) {
    int endExpr=res.indexOf(OCL_END,matchPos + 1);
    if (endExpr == -1) {
      break;
    }
    if (matchPos > 0) {
      beginning.append(res.substring(0,matchPos));
    }
    String expr=res.substring(matchPos + OCL_START.length(),endExpr);
    String evalStr=null;
    try {
      evalStr=CriticOclEvaluator.getInstance().evalToString(off1,expr);
    }
 catch (    ExpansionException e) {
      LOG.error("Failed to evaluate critic expression",e);
    }
    if (expr.endsWith("") && evalStr.equals("")) {
      evalStr=Translator.localize("misc.name.anon");
    }
    beginning.append(evalStr);
    res=res.substring(endExpr + OCL_END.length());
    matchPos=res.indexOf(OCL_START);
  }
  if (beginning.length() == 0) {
    return res;
  }
 else {
    return beginning.append(res).toString();
  }
}


org.argouml.uml.cognitive.critics.CrUML.toDoItem(Object,Designer)
{
  return new UMLToDoItem(this,dm,dsgr);
}


org.argouml.uml.cognitive.critics.CrUML.getClassSimpleName()
{
  String className=getClass().getName();
  return className.substring(className.lastIndexOf('.') + 1);
}


org.argouml.uml.cognitive.critics.CrUML.getCriticizedMetatypes()
{
  Set<Object> ret=new HashSet<Object>();
  ret.add(Model.getMetaTypes().getUMLClass());
  return ret;
}


-------------------------------------
ListOfCorpusMethodsPreviousVersion size: 13
ListOfCorpusMethodsCurrentVersion size: 14
Gold set methods: 
org.argouml.uml.cognitive.critics.CrUML.CrUML(String)
org.argouml.uml.cognitive.critics.CrUML.getLocalizedString(String,String)
org.argouml.uml.cognitive.critics.CrUML.getCriticizedMetatypes()

##########################################################

File Name and Type: M	trunk_src_argouml-app_src_org_argouml_ui_explorer_PerspectiveManager.java
Reading file: TestCases/Input/ArgoUML/SVNFilesSideBySide/15248/trunk_src_argouml-app_src_org_argouml_ui_explorer_PerspectiveManager.java.vPrevious
org.argouml.ui.explorer.PerspectiveManager.getInstance	0	
org.argouml.ui.explorer.PerspectiveManager.PerspectiveManager	0	
org.argouml.ui.explorer.PerspectiveManager.addListener	1	PerspectiveManagerListener	
org.argouml.ui.explorer.PerspectiveManager.removeListener	1	PerspectiveManagerListener	
org.argouml.ui.explorer.PerspectiveManager.addPerspective	1	ExplorerPerspective	
org.argouml.ui.explorer.PerspectiveManager.addAllPerspectives	1	Collection<ExplorerPerspective>	
org.argouml.ui.explorer.PerspectiveManager.removePerspective	1	ExplorerPerspective	
org.argouml.ui.explorer.PerspectiveManager.removeAllPerspectives	0	
org.argouml.ui.explorer.PerspectiveManager.getPerspectives	0	
org.argouml.ui.explorer.PerspectiveManager.loadUserPerspectives	0	
org.argouml.ui.explorer.PerspectiveManager.loadDefaultPerspectives	0	
org.argouml.ui.explorer.PerspectiveManager.getDefaultPerspectives	0	
org.argouml.ui.explorer.PerspectiveManager.loadRules	0	
org.argouml.ui.explorer.PerspectiveManager.addRule	1	PerspectiveRule	
org.argouml.ui.explorer.PerspectiveManager.removeRule	1	PerspectiveRule	
org.argouml.ui.explorer.PerspectiveManager.getRules	0	
org.argouml.ui.explorer.PerspectiveManager.saveUserPerspectives	0	
org.argouml.ui.explorer.PerspectiveManager.toString	0	
List of methods:
org.argouml.ui.explorer.PerspectiveManager.getInstance()
{
  if (instance == null) {
    instance=new PerspectiveManager();
  }
  return instance;
}


org.argouml.ui.explorer.PerspectiveManager.PerspectiveManager()
{
  perspectiveListeners=new ArrayList<PerspectiveManagerListener>();
  perspectives=new ArrayList<ExplorerPerspective>();
  rules=new ArrayList<PerspectiveRule>();
  loadRules();
}


org.argouml.ui.explorer.PerspectiveManager.addListener(PerspectiveManagerListener)
{
  perspectiveListeners.add(listener);
}


org.argouml.ui.explorer.PerspectiveManager.removeListener(PerspectiveManagerListener)
{
  perspectiveListeners.remove(listener);
}


org.argouml.ui.explorer.PerspectiveManager.addPerspective(ExplorerPerspective)
{
  perspectives.add(perspective);
  for (  PerspectiveManagerListener listener : perspectiveListeners) {
    listener.addPerspective(perspective);
  }
}


org.argouml.ui.explorer.PerspectiveManager.addAllPerspectives(Collection<ExplorerPerspective>)
{
  for (  ExplorerPerspective newPerspective : newPerspectives) {
    addPerspective(newPerspective);
  }
}


org.argouml.ui.explorer.PerspectiveManager.removePerspective(ExplorerPerspective)
{
  perspectives.remove(perspective);
  for (  PerspectiveManagerListener listener : perspectiveListeners) {
    listener.removePerspective(perspective);
  }
}


org.argouml.ui.explorer.PerspectiveManager.removeAllPerspectives()
{
  List<ExplorerPerspective> pers=new ArrayList<ExplorerPerspective>();
  pers.addAll(getPerspectives());
  for (  ExplorerPerspective perspective : pers) {
    removePerspective(perspective);
  }
}


org.argouml.ui.explorer.PerspectiveManager.getPerspectives()
{
  return perspectives;
}


org.argouml.ui.explorer.PerspectiveManager.loadUserPerspectives()
{
  String userPerspectives=Configuration.getString(Argo.KEY_USER_EXPLORER_PERSPECTIVES,"");
  StringTokenizer pst=new StringTokenizer(userPerspectives,";");
  if (pst.hasMoreTokens()) {
    while (pst.hasMoreTokens()) {
      String perspective=pst.nextToken();
      StringTokenizer perspectiveDetails=new StringTokenizer(perspective,",");
      String perspectiveName=perspectiveDetails.nextToken();
      ExplorerPerspective userDefinedPerspective=new ExplorerPerspective(perspectiveName);
      if (perspectiveDetails.hasMoreTokens()) {
        while (perspectiveDetails.hasMoreTokens()) {
          String ruleName=perspectiveDetails.nextToken();
          try {
            Class ruleClass=Class.forName(ruleName);
            PerspectiveRule rule=(PerspectiveRule)ruleClass.newInstance();
            userDefinedPerspective.addRule(rule);
          }
 catch (          ClassNotFoundException e) {
            LOG.error("could not create rule " + ruleName + " you can try to "+ "refresh the perspectives to the "+ "default settings.",e);
          }
catch (          InstantiationException e) {
            LOG.error("could not create rule " + ruleName + " you can try to "+ "refresh the perspectives to the "+ "default settings.",e);
          }
catch (          IllegalAccessException e) {
            LOG.error("could not create rule " + ruleName + " you can try to "+ "refresh the perspectives to the "+ "default settings.",e);
          }
        }
      }
 else {
        continue;
      }
      addPerspective(userDefinedPerspective);
    }
  }
 else {
    loadDefaultPerspectives();
  }
  if (getPerspectives().size() == 0) {
    loadDefaultPerspectives();
  }
}


org.argouml.ui.explorer.PerspectiveManager.loadDefaultPerspectives()
{
  Collection<ExplorerPerspective> c=getDefaultPerspectives();
  addAllPerspectives(c);
}


org.argouml.ui.explorer.PerspectiveManager.getDefaultPerspectives()
{
  ExplorerPerspective classPerspective=new ExplorerPerspective("combobox.item.class-centric");
  classPerspective.addRule(new GoProjectToModel());
  classPerspective.addRule(new GoProjectToProfileConfiguration());
  classPerspective.addRule(new GoProfileConfigurationToProfile());
  classPerspective.addRule(new GoProfileToModel());
  classPerspective.addRule(new GoProjectToRoots());
  classPerspective.addRule(new GoNamespaceToClassifierAndPackage());
  classPerspective.addRule(new GoNamespaceToDiagram());
  classPerspective.addRule(new GoClassToSummary());
  classPerspective.addRule(new GoSummaryToAssociation());
  classPerspective.addRule(new GoSummaryToAttribute());
  classPerspective.addRule(new GoSummaryToOperation());
  classPerspective.addRule(new GoSummaryToInheritance());
  classPerspective.addRule(new GoSummaryToIncomingDependency());
  classPerspective.addRule(new GoSummaryToOutgoingDependency());
  ExplorerPerspective packagePerspective=new ExplorerPerspective("combobox.item.package-centric");
  packagePerspective.addRule(new GoProjectToModel());
  packagePerspective.addRule(new GoProjectToProfileConfiguration());
  packagePerspective.addRule(new GoProfileConfigurationToProfile());
  packagePerspective.addRule(new GoProfileToModel());
  packagePerspective.addRule(new GoProjectToRoots());
  packagePerspective.addRule(new GoNamespaceToOwnedElements());
  packagePerspective.addRule(new GoPackageToElementImport());
  packagePerspective.addRule(new GoNamespaceToDiagram());
  packagePerspective.addRule(new GoUseCaseToExtensionPoint());
  packagePerspective.addRule(new GoClassifierToStructuralFeature());
  packagePerspective.addRule(new GoClassifierToBehavioralFeature());
  packagePerspective.addRule(new GoEnumerationToLiterals());
  packagePerspective.addRule(new GoCollaborationToInteraction());
  packagePerspective.addRule(new GoInteractionToMessages());
  packagePerspective.addRule(new GoMessageToAction());
  packagePerspective.addRule(new GoSignalToReception());
  packagePerspective.addRule(new GoLinkToStimuli());
  packagePerspective.addRule(new GoStimulusToAction());
  packagePerspective.addRule(new GoClassifierToCollaboration());
  packagePerspective.addRule(new GoOperationToCollaboration());
  packagePerspective.addRule(new GoModelElementToComment());
  packagePerspective.addRule(new GoCollaborationToDiagram());
  packagePerspective.addRule(new GoBehavioralFeatureToStateMachine());
  packagePerspective.addRule(new GoStatemachineToDiagram());
  packagePerspective.addRule(new GoStateMachineToState());
  packagePerspective.addRule(new GoCompositeStateToSubvertex());
  packagePerspective.addRule(new GoStateToInternalTrans());
  packagePerspective.addRule(new GoStateToDoActivity());
  packagePerspective.addRule(new GoStateToEntry());
  packagePerspective.addRule(new GoStateToExit());
  packagePerspective.addRule(new GoClassifierToSequenceDiagram());
  packagePerspective.addRule(new GoOperationToSequenceDiagram());
  packagePerspective.addRule(new GoClassifierToInstance());
  packagePerspective.addRule(new GoStateToIncomingTrans());
  packagePerspective.addRule(new GoStateToOutgoingTrans());
  packagePerspective.addRule(new GoSubmachineStateToStateMachine());
  packagePerspective.addRule(new GoStereotypeToTagDefinition());
  packagePerspective.addRule(new GoModelElementToBehavior());
  packagePerspective.addRule(new GoModelElementToContainedLostElements());
  ExplorerPerspective diagramPerspective=new ExplorerPerspective("combobox.item.diagram-centric");
  diagramPerspective.addRule(new GoProjectToModel());
  diagramPerspective.addRule(new GoProjectToProfileConfiguration());
  diagramPerspective.addRule(new GoProfileConfigurationToProfile());
  diagramPerspective.addRule(new GoProfileToModel());
  diagramPerspective.addRule(new GoModelToDiagrams());
  diagramPerspective.addRule(new GoDiagramToNode());
  diagramPerspective.addRule(new GoDiagramToEdge());
  diagramPerspective.addRule(new GoUseCaseToExtensionPoint());
  diagramPerspective.addRule(new GoClassifierToStructuralFeature());
  diagramPerspective.addRule(new GoClassifierToBehavioralFeature());
  ExplorerPerspective inheritancePerspective=new ExplorerPerspective("combobox.item.inheritance-centric");
  inheritancePerspective.addRule(new GoProjectToModel());
  inheritancePerspective.addRule(new GoProjectToProfileConfiguration());
  classPerspective.addRule(new GoProfileConfigurationToProfile());
  classPerspective.addRule(new GoProfileToModel());
  inheritancePerspective.addRule(new GoModelToBaseElements());
  inheritancePerspective.addRule(new GoGeneralizableElementToSpecialized());
  ExplorerPerspective associationsPerspective=new ExplorerPerspective("combobox.item.class-associations");
  associationsPerspective.addRule(new GoProjectToModel());
  associationsPerspective.addRule(new GoProjectToProfileConfiguration());
  associationsPerspective.addRule(new GoProfileConfigurationToProfile());
  associationsPerspective.addRule(new GoProfileToModel());
  associationsPerspective.addRule(new GoNamespaceToDiagram());
  associationsPerspective.addRule(new GoPackageToClass());
  associationsPerspective.addRule(new GoClassToAssociatedClass());
  ExplorerPerspective residencePerspective=new ExplorerPerspective("combobox.item.residence-centric");
  residencePerspective.addRule(new GoProjectToModel());
  residencePerspective.addRule(new GoProjectToProfileConfiguration());
  residencePerspective.addRule(new GoProfileConfigurationToProfile());
  residencePerspective.addRule(new GoProfileToModel());
  residencePerspective.addRule(new GoModelToNode());
  residencePerspective.addRule(new GoNodeToResidentComponent());
  residencePerspective.addRule(new GoComponentToResidentModelElement());
  ExplorerPerspective statePerspective=new ExplorerPerspective("combobox.item.state-centric");
  statePerspective.addRule(new GoProjectToStateMachine());
  statePerspective.addRule(new GoStatemachineToDiagram());
  statePerspective.addRule(new GoStateMachineToState());
  statePerspective.addRule(new GoCompositeStateToSubvertex());
  statePerspective.addRule(new GoStateToIncomingTrans());
  statePerspective.addRule(new GoStateToOutgoingTrans());
  statePerspective.addRule(new GoTransitiontoEffect());
  statePerspective.addRule(new GoTransitionToGuard());
  ExplorerPerspective transitionsPerspective=new ExplorerPerspective("combobox.item.transitions-centric");
  transitionsPerspective.addRule(new GoProjectToStateMachine());
  transitionsPerspective.addRule(new GoStatemachineToDiagram());
  transitionsPerspective.addRule(new GoStateMachineToTransition());
  transitionsPerspective.addRule(new GoTransitionToSource());
  transitionsPerspective.addRule(new GoTransitionToTarget());
  transitionsPerspective.addRule(new GoTransitiontoEffect());
  transitionsPerspective.addRule(new GoTransitionToGuard());
  ExplorerPerspective compositionPerspective=new ExplorerPerspective("combobox.item.composite-centric");
  compositionPerspective.addRule(new GoProjectToModel());
  compositionPerspective.addRule(new GoProjectToProfileConfiguration());
  compositionPerspective.addRule(new GoProfileConfigurationToProfile());
  compositionPerspective.addRule(new GoProfileToModel());
  compositionPerspective.addRule(new GoProjectToRoots());
  compositionPerspective.addRule(new GoModelElementToContents());
  compositionPerspective.addRule(new GoModelElementToContainedDiagrams());
  Collection<ExplorerPerspective> c=new ArrayList<ExplorerPerspective>();
  c.add(packagePerspective);
  c.add(classPerspective);
  c.add(diagramPerspective);
  c.add(inheritancePerspective);
  c.add(associationsPerspective);
  c.add(residencePerspective);
  c.add(statePerspective);
  c.add(transitionsPerspective);
  c.add(compositionPerspective);
  return c;
}


org.argouml.ui.explorer.PerspectiveManager.loadRules()
{
  PerspectiveRule[] ruleNamesArray={new GoAssocRoleToMessages(),new GoBehavioralFeatureToStateDiagram(),new GoBehavioralFeatureToStateMachine(),new GoClassifierToBehavioralFeature(),new GoClassifierToCollaboration(),new GoClassifierToInstance(),new GoClassifierToSequenceDiagram(),new GoClassifierToStateMachine(),new GoClassifierToStructuralFeature(),new GoClassToAssociatedClass(),new GoClassToNavigableClass(),new GoClassToSummary(),new GoCollaborationToDiagram(),new GoCollaborationToInteraction(),new GoComponentToResidentModelElement(),new GoCompositeStateToSubvertex(),new GoDiagramToEdge(),new GoDiagramToNode(),new GoElementToMachine(),new GoEnumerationToLiterals(),new GoGeneralizableElementToSpecialized(),new GoInteractionToMessages(),new GoLinkToStimuli(),new GoMessageToAction(),new GoModelElementToComment(),new GoModelElementToBehavior(),new GoModelElementToContents(),new GoModelElementToContainedDiagrams(),new GoModelElementToContainedLostElements(),new GoModelToBaseElements(),new GoModelToCollaboration(),new GoModelToDiagrams(),new GoModelToElements(),new GoModelToNode(),new GoNamespaceToClassifierAndPackage(),new GoNamespaceToDiagram(),new GoNamespaceToOwnedElements(),new GoNodeToResidentComponent(),new GoOperationToCollaborationDiagram(),new GoOperationToCollaboration(),new GoOperationToSequenceDiagram(),new GoPackageToClass(),new GoPackageToElementImport(),new GoProjectToCollaboration(),new GoProjectToDiagram(),new GoProjectToModel(),new GoProjectToStateMachine(),new GoProjectToProfileConfiguration(),new GoProfileConfigurationToProfile(),new GoProfileToModel(),new GoProjectToRoots(),new GoSignalToReception(),new GoStateMachineToTop(),new GoStatemachineToDiagram(),new GoStateMachineToState(),new GoStateMachineToTransition(),new GoStateToDoActivity(),new GoStateToDownstream(),new GoStateToEntry(),new GoStateToExit(),new GoStateToIncomingTrans(),new GoStateToInternalTrans(),new GoStateToOutgoingTrans(),new GoStereotypeToTagDefinition(),new GoStimulusToAction(),new GoSummaryToAssociation(),new GoSummaryToAttribute(),new GoSummaryToIncomingDependency(),new GoSummaryToInheritance(),new GoSummaryToOperation(),new GoSummaryToOutgoingDependency(),new GoTransitionToSource(),new GoTransitionToTarget(),new GoTransitiontoEffect(),new GoTransitionToGuard(),new GoUseCaseToExtensionPoint(),new GoSubmachineStateToStateMachine()};
  rules=Arrays.asList(ruleNamesArray);
}


org.argouml.ui.explorer.PerspectiveManager.addRule(PerspectiveRule)
{
  rules.add(rule);
}


org.argouml.ui.explorer.PerspectiveManager.removeRule(PerspectiveRule)
{
  rules.remove(rule);
}


org.argouml.ui.explorer.PerspectiveManager.getRules()
{
  return rules;
}


org.argouml.ui.explorer.PerspectiveManager.saveUserPerspectives()
{
  Configuration.setString(Argo.KEY_USER_EXPLORER_PERSPECTIVES,this.toString());
}


org.argouml.ui.explorer.PerspectiveManager.toString()
{
  StringBuffer p=new StringBuffer();
  for (  ExplorerPerspective perspective : getPerspectives()) {
    String name=perspective.toString();
    p.append(name).append(",");
    for (    PerspectiveRule rule : perspective.getList()) {
      p.append(rule.getClass().getName()).append(",");
    }
    p.deleteCharAt(p.length() - 1);
    p.append(";");
  }
  p.deleteCharAt(p.length() - 1);
  return p.toString();
}


-------------------------------------
Reading file: TestCases/Input/ArgoUML/SVNFilesSideBySide/15248/trunk_src_argouml-app_src_org_argouml_ui_explorer_PerspectiveManager.java.v15248
org.argouml.ui.explorer.PerspectiveManager.getInstance	0	
org.argouml.ui.explorer.PerspectiveManager.PerspectiveManager	0	
org.argouml.ui.explorer.PerspectiveManager.addListener	1	PerspectiveManagerListener	
org.argouml.ui.explorer.PerspectiveManager.removeListener	1	PerspectiveManagerListener	
org.argouml.ui.explorer.PerspectiveManager.addPerspective	1	ExplorerPerspective	
org.argouml.ui.explorer.PerspectiveManager.addAllPerspectives	1	Collection<ExplorerPerspective>	
org.argouml.ui.explorer.PerspectiveManager.removePerspective	1	ExplorerPerspective	
org.argouml.ui.explorer.PerspectiveManager.removeAllPerspectives	0	
org.argouml.ui.explorer.PerspectiveManager.getPerspectives	0	
org.argouml.ui.explorer.PerspectiveManager.loadUserPerspectives	0	
org.argouml.ui.explorer.PerspectiveManager.loadDefaultPerspectives	0	
org.argouml.ui.explorer.PerspectiveManager.getDefaultPerspectives	0	
org.argouml.ui.explorer.PerspectiveManager.loadRules	0	
org.argouml.ui.explorer.PerspectiveManager.addRule	1	PerspectiveRule	
org.argouml.ui.explorer.PerspectiveManager.removeRule	1	PerspectiveRule	
org.argouml.ui.explorer.PerspectiveManager.getRules	0	
org.argouml.ui.explorer.PerspectiveManager.saveUserPerspectives	0	
org.argouml.ui.explorer.PerspectiveManager.toString	0	
List of methods:
org.argouml.ui.explorer.PerspectiveManager.getInstance()
{
  if (instance == null) {
    instance=new PerspectiveManager();
  }
  return instance;
}


org.argouml.ui.explorer.PerspectiveManager.PerspectiveManager()
{
  perspectiveListeners=new ArrayList<PerspectiveManagerListener>();
  perspectives=new ArrayList<ExplorerPerspective>();
  rules=new ArrayList<PerspectiveRule>();
  loadRules();
}


org.argouml.ui.explorer.PerspectiveManager.addListener(PerspectiveManagerListener)
{
  perspectiveListeners.add(listener);
}


org.argouml.ui.explorer.PerspectiveManager.removeListener(PerspectiveManagerListener)
{
  perspectiveListeners.remove(listener);
}


org.argouml.ui.explorer.PerspectiveManager.addPerspective(ExplorerPerspective)
{
  perspectives.add(perspective);
  for (  PerspectiveManagerListener listener : perspectiveListeners) {
    listener.addPerspective(perspective);
  }
}


org.argouml.ui.explorer.PerspectiveManager.addAllPerspectives(Collection<ExplorerPerspective>)
{
  for (  ExplorerPerspective newPerspective : newPerspectives) {
    addPerspective(newPerspective);
  }
}


org.argouml.ui.explorer.PerspectiveManager.removePerspective(ExplorerPerspective)
{
  perspectives.remove(perspective);
  for (  PerspectiveManagerListener listener : perspectiveListeners) {
    listener.removePerspective(perspective);
  }
}


org.argouml.ui.explorer.PerspectiveManager.removeAllPerspectives()
{
  List<ExplorerPerspective> pers=new ArrayList<ExplorerPerspective>();
  pers.addAll(getPerspectives());
  for (  ExplorerPerspective perspective : pers) {
    removePerspective(perspective);
  }
}


org.argouml.ui.explorer.PerspectiveManager.getPerspectives()
{
  return perspectives;
}


org.argouml.ui.explorer.PerspectiveManager.loadUserPerspectives()
{
  String userPerspectives=Configuration.getString(Argo.KEY_USER_EXPLORER_PERSPECTIVES,"");
  StringTokenizer pst=new StringTokenizer(userPerspectives,";");
  if (pst.hasMoreTokens()) {
    while (pst.hasMoreTokens()) {
      String perspective=pst.nextToken();
      StringTokenizer perspectiveDetails=new StringTokenizer(perspective,",");
      String perspectiveName=perspectiveDetails.nextToken();
      ExplorerPerspective userDefinedPerspective=new ExplorerPerspective(perspectiveName);
      if (perspectiveDetails.hasMoreTokens()) {
        while (perspectiveDetails.hasMoreTokens()) {
          String ruleName=perspectiveDetails.nextToken();
          try {
            Class ruleClass=Class.forName(ruleName);
            PerspectiveRule rule=(PerspectiveRule)ruleClass.newInstance();
            userDefinedPerspective.addRule(rule);
          }
 catch (          ClassNotFoundException e) {
            LOG.error("could not create rule " + ruleName + " you can try to "+ "refresh the perspectives to the "+ "default settings.",e);
          }
catch (          InstantiationException e) {
            LOG.error("could not create rule " + ruleName + " you can try to "+ "refresh the perspectives to the "+ "default settings.",e);
          }
catch (          IllegalAccessException e) {
            LOG.error("could not create rule " + ruleName + " you can try to "+ "refresh the perspectives to the "+ "default settings.",e);
          }
        }
      }
 else {
        continue;
      }
      addPerspective(userDefinedPerspective);
    }
  }
 else {
    loadDefaultPerspectives();
  }
  if (getPerspectives().size() == 0) {
    loadDefaultPerspectives();
  }
}


org.argouml.ui.explorer.PerspectiveManager.loadDefaultPerspectives()
{
  Collection<ExplorerPerspective> c=getDefaultPerspectives();
  addAllPerspectives(c);
}


org.argouml.ui.explorer.PerspectiveManager.getDefaultPerspectives()
{
  ExplorerPerspective classPerspective=new ExplorerPerspective("combobox.item.class-centric");
  classPerspective.addRule(new GoProjectToModel());
  classPerspective.addRule(new GoProjectToProfileConfiguration());
  classPerspective.addRule(new GoProfileConfigurationToProfile());
  classPerspective.addRule(new GoProfileToModel());
  classPerspective.addRule(new GoProfileToCritics());
  classPerspective.addRule(new GoProjectToRoots());
  classPerspective.addRule(new GoNamespaceToClassifierAndPackage());
  classPerspective.addRule(new GoNamespaceToDiagram());
  classPerspective.addRule(new GoClassToSummary());
  classPerspective.addRule(new GoSummaryToAssociation());
  classPerspective.addRule(new GoSummaryToAttribute());
  classPerspective.addRule(new GoSummaryToOperation());
  classPerspective.addRule(new GoSummaryToInheritance());
  classPerspective.addRule(new GoSummaryToIncomingDependency());
  classPerspective.addRule(new GoSummaryToOutgoingDependency());
  ExplorerPerspective packagePerspective=new ExplorerPerspective("combobox.item.package-centric");
  packagePerspective.addRule(new GoProjectToModel());
  packagePerspective.addRule(new GoProjectToProfileConfiguration());
  packagePerspective.addRule(new GoProfileConfigurationToProfile());
  packagePerspective.addRule(new GoProfileToModel());
  packagePerspective.addRule(new GoProfileToCritics());
  packagePerspective.addRule(new GoProjectToRoots());
  packagePerspective.addRule(new GoNamespaceToOwnedElements());
  packagePerspective.addRule(new GoPackageToElementImport());
  packagePerspective.addRule(new GoNamespaceToDiagram());
  packagePerspective.addRule(new GoUseCaseToExtensionPoint());
  packagePerspective.addRule(new GoClassifierToStructuralFeature());
  packagePerspective.addRule(new GoClassifierToBehavioralFeature());
  packagePerspective.addRule(new GoEnumerationToLiterals());
  packagePerspective.addRule(new GoCollaborationToInteraction());
  packagePerspective.addRule(new GoInteractionToMessages());
  packagePerspective.addRule(new GoMessageToAction());
  packagePerspective.addRule(new GoSignalToReception());
  packagePerspective.addRule(new GoLinkToStimuli());
  packagePerspective.addRule(new GoStimulusToAction());
  packagePerspective.addRule(new GoClassifierToCollaboration());
  packagePerspective.addRule(new GoOperationToCollaboration());
  packagePerspective.addRule(new GoModelElementToComment());
  packagePerspective.addRule(new GoCollaborationToDiagram());
  packagePerspective.addRule(new GoBehavioralFeatureToStateMachine());
  packagePerspective.addRule(new GoStatemachineToDiagram());
  packagePerspective.addRule(new GoStateMachineToState());
  packagePerspective.addRule(new GoCompositeStateToSubvertex());
  packagePerspective.addRule(new GoStateToInternalTrans());
  packagePerspective.addRule(new GoStateToDoActivity());
  packagePerspective.addRule(new GoStateToEntry());
  packagePerspective.addRule(new GoStateToExit());
  packagePerspective.addRule(new GoClassifierToSequenceDiagram());
  packagePerspective.addRule(new GoOperationToSequenceDiagram());
  packagePerspective.addRule(new GoClassifierToInstance());
  packagePerspective.addRule(new GoStateToIncomingTrans());
  packagePerspective.addRule(new GoStateToOutgoingTrans());
  packagePerspective.addRule(new GoSubmachineStateToStateMachine());
  packagePerspective.addRule(new GoStereotypeToTagDefinition());
  packagePerspective.addRule(new GoModelElementToBehavior());
  packagePerspective.addRule(new GoModelElementToContainedLostElements());
  ExplorerPerspective diagramPerspective=new ExplorerPerspective("combobox.item.diagram-centric");
  diagramPerspective.addRule(new GoProjectToModel());
  diagramPerspective.addRule(new GoProjectToProfileConfiguration());
  diagramPerspective.addRule(new GoProfileConfigurationToProfile());
  diagramPerspective.addRule(new GoProfileToModel());
  diagramPerspective.addRule(new GoProfileToCritics());
  diagramPerspective.addRule(new GoModelToDiagrams());
  diagramPerspective.addRule(new GoDiagramToNode());
  diagramPerspective.addRule(new GoDiagramToEdge());
  diagramPerspective.addRule(new GoUseCaseToExtensionPoint());
  diagramPerspective.addRule(new GoClassifierToStructuralFeature());
  diagramPerspective.addRule(new GoClassifierToBehavioralFeature());
  ExplorerPerspective inheritancePerspective=new ExplorerPerspective("combobox.item.inheritance-centric");
  inheritancePerspective.addRule(new GoProjectToModel());
  inheritancePerspective.addRule(new GoProjectToProfileConfiguration());
  classPerspective.addRule(new GoProfileConfigurationToProfile());
  classPerspective.addRule(new GoProfileToModel());
  classPerspective.addRule(new GoProfileToCritics());
  inheritancePerspective.addRule(new GoModelToBaseElements());
  inheritancePerspective.addRule(new GoGeneralizableElementToSpecialized());
  ExplorerPerspective associationsPerspective=new ExplorerPerspective("combobox.item.class-associations");
  associationsPerspective.addRule(new GoProjectToModel());
  associationsPerspective.addRule(new GoProjectToProfileConfiguration());
  associationsPerspective.addRule(new GoProfileConfigurationToProfile());
  associationsPerspective.addRule(new GoProfileToModel());
  associationsPerspective.addRule(new GoProfileToCritics());
  associationsPerspective.addRule(new GoNamespaceToDiagram());
  associationsPerspective.addRule(new GoPackageToClass());
  associationsPerspective.addRule(new GoClassToAssociatedClass());
  ExplorerPerspective residencePerspective=new ExplorerPerspective("combobox.item.residence-centric");
  residencePerspective.addRule(new GoProjectToModel());
  residencePerspective.addRule(new GoProjectToProfileConfiguration());
  residencePerspective.addRule(new GoProfileConfigurationToProfile());
  residencePerspective.addRule(new GoProfileToModel());
  residencePerspective.addRule(new GoProfileToCritics());
  residencePerspective.addRule(new GoModelToNode());
  residencePerspective.addRule(new GoNodeToResidentComponent());
  residencePerspective.addRule(new GoComponentToResidentModelElement());
  ExplorerPerspective statePerspective=new ExplorerPerspective("combobox.item.state-centric");
  statePerspective.addRule(new GoProjectToStateMachine());
  statePerspective.addRule(new GoStatemachineToDiagram());
  statePerspective.addRule(new GoStateMachineToState());
  statePerspective.addRule(new GoCompositeStateToSubvertex());
  statePerspective.addRule(new GoStateToIncomingTrans());
  statePerspective.addRule(new GoStateToOutgoingTrans());
  statePerspective.addRule(new GoTransitiontoEffect());
  statePerspective.addRule(new GoTransitionToGuard());
  ExplorerPerspective transitionsPerspective=new ExplorerPerspective("combobox.item.transitions-centric");
  transitionsPerspective.addRule(new GoProjectToStateMachine());
  transitionsPerspective.addRule(new GoStatemachineToDiagram());
  transitionsPerspective.addRule(new GoStateMachineToTransition());
  transitionsPerspective.addRule(new GoTransitionToSource());
  transitionsPerspective.addRule(new GoTransitionToTarget());
  transitionsPerspective.addRule(new GoTransitiontoEffect());
  transitionsPerspective.addRule(new GoTransitionToGuard());
  ExplorerPerspective compositionPerspective=new ExplorerPerspective("combobox.item.composite-centric");
  compositionPerspective.addRule(new GoProjectToModel());
  compositionPerspective.addRule(new GoProjectToProfileConfiguration());
  compositionPerspective.addRule(new GoProfileConfigurationToProfile());
  compositionPerspective.addRule(new GoProfileToModel());
  compositionPerspective.addRule(new GoProfileToCritics());
  compositionPerspective.addRule(new GoProjectToRoots());
  compositionPerspective.addRule(new GoModelElementToContents());
  compositionPerspective.addRule(new GoModelElementToContainedDiagrams());
  Collection<ExplorerPerspective> c=new ArrayList<ExplorerPerspective>();
  c.add(packagePerspective);
  c.add(classPerspective);
  c.add(diagramPerspective);
  c.add(inheritancePerspective);
  c.add(associationsPerspective);
  c.add(residencePerspective);
  c.add(statePerspective);
  c.add(transitionsPerspective);
  c.add(compositionPerspective);
  return c;
}


org.argouml.ui.explorer.PerspectiveManager.loadRules()
{
  PerspectiveRule[] ruleNamesArray={new GoAssocRoleToMessages(),new GoBehavioralFeatureToStateDiagram(),new GoBehavioralFeatureToStateMachine(),new GoClassifierToBehavioralFeature(),new GoClassifierToCollaboration(),new GoClassifierToInstance(),new GoClassifierToSequenceDiagram(),new GoClassifierToStateMachine(),new GoClassifierToStructuralFeature(),new GoClassToAssociatedClass(),new GoClassToNavigableClass(),new GoClassToSummary(),new GoCollaborationToDiagram(),new GoCollaborationToInteraction(),new GoComponentToResidentModelElement(),new GoCompositeStateToSubvertex(),new GoDiagramToEdge(),new GoDiagramToNode(),new GoElementToMachine(),new GoEnumerationToLiterals(),new GoGeneralizableElementToSpecialized(),new GoInteractionToMessages(),new GoLinkToStimuli(),new GoMessageToAction(),new GoModelElementToComment(),new GoModelElementToBehavior(),new GoModelElementToContents(),new GoModelElementToContainedDiagrams(),new GoModelElementToContainedLostElements(),new GoModelToBaseElements(),new GoModelToCollaboration(),new GoModelToDiagrams(),new GoModelToElements(),new GoModelToNode(),new GoNamespaceToClassifierAndPackage(),new GoNamespaceToDiagram(),new GoNamespaceToOwnedElements(),new GoNodeToResidentComponent(),new GoOperationToCollaborationDiagram(),new GoOperationToCollaboration(),new GoOperationToSequenceDiagram(),new GoPackageToClass(),new GoPackageToElementImport(),new GoProjectToCollaboration(),new GoProjectToDiagram(),new GoProjectToModel(),new GoProjectToStateMachine(),new GoProjectToProfileConfiguration(),new GoProfileConfigurationToProfile(),new GoProfileToModel(),new GoProfileToCritics(),new GoProjectToRoots(),new GoSignalToReception(),new GoStateMachineToTop(),new GoStatemachineToDiagram(),new GoStateMachineToState(),new GoStateMachineToTransition(),new GoStateToDoActivity(),new GoStateToDownstream(),new GoStateToEntry(),new GoStateToExit(),new GoStateToIncomingTrans(),new GoStateToInternalTrans(),new GoStateToOutgoingTrans(),new GoStereotypeToTagDefinition(),new GoStimulusToAction(),new GoSummaryToAssociation(),new GoSummaryToAttribute(),new GoSummaryToIncomingDependency(),new GoSummaryToInheritance(),new GoSummaryToOperation(),new GoSummaryToOutgoingDependency(),new GoTransitionToSource(),new GoTransitionToTarget(),new GoTransitiontoEffect(),new GoTransitionToGuard(),new GoUseCaseToExtensionPoint(),new GoSubmachineStateToStateMachine()};
  rules=Arrays.asList(ruleNamesArray);
}


org.argouml.ui.explorer.PerspectiveManager.addRule(PerspectiveRule)
{
  rules.add(rule);
}


org.argouml.ui.explorer.PerspectiveManager.removeRule(PerspectiveRule)
{
  rules.remove(rule);
}


org.argouml.ui.explorer.PerspectiveManager.getRules()
{
  return rules;
}


org.argouml.ui.explorer.PerspectiveManager.saveUserPerspectives()
{
  Configuration.setString(Argo.KEY_USER_EXPLORER_PERSPECTIVES,this.toString());
}


org.argouml.ui.explorer.PerspectiveManager.toString()
{
  StringBuffer p=new StringBuffer();
  for (  ExplorerPerspective perspective : getPerspectives()) {
    String name=perspective.toString();
    p.append(name).append(",");
    for (    PerspectiveRule rule : perspective.getList()) {
      p.append(rule.getClass().getName()).append(",");
    }
    p.deleteCharAt(p.length() - 1);
    p.append(";");
  }
  p.deleteCharAt(p.length() - 1);
  return p.toString();
}


-------------------------------------
ListOfCorpusMethodsPreviousVersion size: 18
ListOfCorpusMethodsCurrentVersion size: 18
Gold set methods: 
org.argouml.ui.explorer.PerspectiveManager.getDefaultPerspectives()
org.argouml.ui.explorer.PerspectiveManager.loadRules()

##########################################################

File Name and Type: R	trunk_src_argouml-app_src_org_argouml_profile_internal_ocl_LambdaEvaluator.java
Reading file: TestCases/Input/ArgoUML/SVNFilesSideBySide/15248/trunk_src_argouml-app_src_org_argouml_profile_internal_ocl_LambdaEvaluator.java.vPrevious
List of methods:
-------------------------------------
Reading file: TestCases/Input/ArgoUML/SVNFilesSideBySide/15248/trunk_src_argouml-app_src_org_argouml_profile_internal_ocl_LambdaEvaluator.java.v15248
List of methods:
-------------------------------------
ListOfCorpusMethodsPreviousVersion size: 0
ListOfCorpusMethodsCurrentVersion size: 0
Gold set methods: 

##########################################################

File Name and Type: R	trunk_src_argouml-app_src_org_argouml_profile_internal_ui_ProfilePropPanelFactory.java
Reading file: TestCases/Input/ArgoUML/SVNFilesSideBySide/15248/trunk_src_argouml-app_src_org_argouml_profile_internal_ui_ProfilePropPanelFactory.java.vPrevious
org.argouml.profile.internal.ui.ProfilePropPanelFactory.createPropPanel	1	Object	
List of methods:
org.argouml.profile.internal.ui.ProfilePropPanelFactory.createPropPanel(Object)
{
  if (object instanceof CrUML) {
    return new PropPanelCritic();
  }
 else {
    return null;
  }
}


-------------------------------------
Reading file: TestCases/Input/ArgoUML/SVNFilesSideBySide/15248/trunk_src_argouml-app_src_org_argouml_profile_internal_ui_ProfilePropPanelFactory.java.v15248
org.argouml.profile.internal.ui.ProfilePropPanelFactory.createPropPanel	1	Object	
List of methods:
org.argouml.profile.internal.ui.ProfilePropPanelFactory.createPropPanel(Object)
{
  if (object instanceof CrUML) {
    return new PropPanelCritic();
  }
 else {
    return null;
  }
}


-------------------------------------
ListOfCorpusMethodsPreviousVersion size: 1
ListOfCorpusMethodsCurrentVersion size: 1
Gold set methods: 

##########################################################

File Name and Type: M	trunk_src_argouml-app_src_org_argouml_kernel_ProfileConfiguration.java
Reading file: TestCases/Input/ArgoUML/SVNFilesSideBySide/15248/trunk_src_argouml-app_src_org_argouml_kernel_ProfileConfiguration.java.vPrevious
org.argouml.kernel.ProfileConfiguration.ProfileConfiguration	1	Project	
org.argouml.kernel.ProfileConfiguration.ProfileConfiguration	2	Project	Collection<Profile>	
org.argouml.kernel.ProfileConfiguration.updateStrategies	0	
org.argouml.kernel.ProfileConfiguration.getFormatingStrategy	0	
org.argouml.kernel.ProfileConfiguration.getDefaultTypeStrategy	0	
org.argouml.kernel.ProfileConfiguration.activateDefaultTypeStrategy	1	Profile	
org.argouml.kernel.ProfileConfiguration.activateFormatingStrategy	1	Profile	
org.argouml.kernel.ProfileConfiguration.getProfiles	0	
org.argouml.kernel.ProfileConfiguration.addProfile	1	Profile	
org.argouml.kernel.ProfileConfiguration.getProfileModels	0	
org.argouml.kernel.ProfileConfiguration.removeProfile	1	Profile	
org.argouml.kernel.ProfileConfiguration.getFigNodeStrategy	0	
org.argouml.kernel.ProfileConfiguration.getType	0	
org.argouml.kernel.ProfileConfiguration.repair	0	
org.argouml.kernel.ProfileConfiguration.toString	0	
org.argouml.kernel.ProfileConfiguration.findStereotypeForObject	2	String	Object	
org.argouml.kernel.ProfileConfiguration.findType	1	String	
org.argouml.kernel.ProfileConfiguration.findTypeInModel	2	String	Object	
org.argouml.kernel.ProfileConfiguration.findByMetaType	1	Object	
org.argouml.kernel.ProfileConfiguration.findAllStereotypesForModelElement	1	Object	
List of methods:
org.argouml.kernel.ProfileConfiguration.ProfileConfiguration(Project)
{
  super(EXTENSION,project);
  for (  Profile p : ProfileFacade.getManager().getDefaultProfiles()) {
    addProfile(p);
  }
  updateStrategies();
}


org.argouml.kernel.ProfileConfiguration.ProfileConfiguration(Project,Collection<Profile>)
{
  super(EXTENSION,project);
  for (  Profile profile : configuredProfiles) {
    addProfile(profile);
  }
  updateStrategies();
}


org.argouml.kernel.ProfileConfiguration.updateStrategies()
{
  for (  Profile profile : profiles) {
    activateFormatingStrategy(profile);
    activateDefaultTypeStrategy(profile);
  }
}


org.argouml.kernel.ProfileConfiguration.getFormatingStrategy()
{
  return formatingStrategy;
}


org.argouml.kernel.ProfileConfiguration.getDefaultTypeStrategy()
{
  return defaultTypeStrategy;
}


org.argouml.kernel.ProfileConfiguration.activateDefaultTypeStrategy(Profile)
{
  if (profile != null && profile.getDefaultTypeStrategy() != null && getProfiles().contains(profile)) {
    this.defaultTypeStrategy=profile.getDefaultTypeStrategy();
  }
}


org.argouml.kernel.ProfileConfiguration.activateFormatingStrategy(Profile)
{
  if (profile != null && profile.getFormatingStrategy() != null && getProfiles().contains(profile)) {
    this.formatingStrategy=profile.getFormatingStrategy();
  }
}


org.argouml.kernel.ProfileConfiguration.getProfiles()
{
  return profiles;
}


org.argouml.kernel.ProfileConfiguration.addProfile(Profile)
{
  if (!profiles.contains(p)) {
    profiles.add(p);
    try {
      profileModels.addAll(p.getProfilePackages());
    }
 catch (    ProfileException e) {
      LOG.warn("Error retrieving profile's " + p + " packages.",e);
    }
    FigNodeStrategy fns=p.getFigureStrategy();
    if (fns != null) {
      figNodeStrategies.add(fns);
    }
    for (    Profile dependency : p.getDependencies()) {
      addProfile(dependency);
    }
    updateStrategies();
    ArgoEventPump.fireEvent(new ArgoProfileEvent(ArgoEventTypes.PROFILE_ADDED,new PropertyChangeEvent(this,"profile",null,p)));
  }
}


org.argouml.kernel.ProfileConfiguration.getProfileModels()
{
  return profileModels;
}


org.argouml.kernel.ProfileConfiguration.removeProfile(Profile)
{
  profiles.remove(p);
  try {
    profileModels.removeAll(p.getProfilePackages());
  }
 catch (  ProfileException e) {
    LOG.error("Exception",e);
  }
  FigNodeStrategy fns=p.getFigureStrategy();
  if (fns != null) {
    figNodeStrategies.remove(fns);
  }
  if (formatingStrategy == p.getFormatingStrategy()) {
    formatingStrategy=null;
  }
  List<Profile> markForRemoval=new ArrayList<Profile>();
  for (  Profile profile : profiles) {
    if (profile.getDependencies().contains(p)) {
      markForRemoval.add(profile);
    }
  }
  for (  Profile profile : markForRemoval) {
    removeProfile(profile);
  }
  updateStrategies();
  ArgoEventPump.fireEvent(new ArgoProfileEvent(ArgoEventTypes.PROFILE_REMOVED,new PropertyChangeEvent(this,"profile",p,null)));
}


org.argouml.kernel.ProfileConfiguration.getFigNodeStrategy()
{
  return compositeFigNodeStrategy;
}


org.argouml.kernel.ProfileConfiguration.getType()
{
  return EXTENSION;
}


org.argouml.kernel.ProfileConfiguration.repair()
{
  return "";
}


org.argouml.kernel.ProfileConfiguration.toString()
{
  return "Profile Configuration";
}


org.argouml.kernel.ProfileConfiguration.findStereotypeForObject(String,Object)
{
  Iterator iter=null;
  for (  Object model : profileModels) {
    iter=Model.getFacade().getOwnedElements(model).iterator();
    while (iter.hasNext()) {
      Object stereo=iter.next();
      if (!Model.getFacade().isAStereotype(stereo) || !name.equals(Model.getFacade().getName(stereo))) {
        continue;
      }
      if (Model.getExtensionMechanismsHelper().isValidStereotype(element,stereo)) {
        return stereo;
      }
    }
  }
  return null;
}


org.argouml.kernel.ProfileConfiguration.findType(String)
{
  for (  Object model : getProfileModels()) {
    Object result=findTypeInModel(name,model);
    if (result != null) {
      return result;
    }
  }
  return null;
}


org.argouml.kernel.ProfileConfiguration.findTypeInModel(String,Object)
{
  if (!Model.getFacade().isANamespace(model)) {
    throw new IllegalArgumentException("Looking for the classifier " + s + " in a non-namespace object of "+ model+ ". A namespace was expected.");
  }
  Collection allClassifiers=Model.getModelManagementHelper().getAllModelElementsOfKind(model,Model.getMetaTypes().getClassifier());
  Object[] classifiers=allClassifiers.toArray();
  Object classifier=null;
  for (int i=0; i < classifiers.length; i++) {
    classifier=classifiers[i];
    if (Model.getFacade().getName(classifier) != null && Model.getFacade().getName(classifier).equals(s)) {
      return classifier;
    }
  }
  return null;
}


org.argouml.kernel.ProfileConfiguration.findByMetaType(Object)
{
  Set elements=new HashSet();
  Iterator it=getProfileModels().iterator();
  while (it.hasNext()) {
    Object model=it.next();
    elements.addAll(Model.getModelManagementHelper().getAllModelElementsOfKind(model,metaType));
  }
  return elements;
}


org.argouml.kernel.ProfileConfiguration.findAllStereotypesForModelElement(Object)
{
  return Model.getExtensionMechanismsHelper().getAllPossibleStereotypes(getProfileModels(),modelElement);
}


-------------------------------------
Reading file: TestCases/Input/ArgoUML/SVNFilesSideBySide/15248/trunk_src_argouml-app_src_org_argouml_kernel_ProfileConfiguration.java.v15248
org.argouml.kernel.ProfileConfiguration.ProfileConfiguration	1	Project	
org.argouml.kernel.ProfileConfiguration.ProfileConfiguration	2	Project	Collection<Profile>	
org.argouml.kernel.ProfileConfiguration.updateStrategies	0	
org.argouml.kernel.ProfileConfiguration.getFormatingStrategy	0	
org.argouml.kernel.ProfileConfiguration.getDefaultTypeStrategy	0	
org.argouml.kernel.ProfileConfiguration.activateDefaultTypeStrategy	1	Profile	
org.argouml.kernel.ProfileConfiguration.activateFormatingStrategy	1	Profile	
org.argouml.kernel.ProfileConfiguration.getProfiles	0	
org.argouml.kernel.ProfileConfiguration.addProfile	1	Profile	
org.argouml.kernel.ProfileConfiguration.getProfileModels	0	
org.argouml.kernel.ProfileConfiguration.removeProfile	1	Profile	
org.argouml.kernel.ProfileConfiguration.getFigNodeStrategy	0	
org.argouml.kernel.ProfileConfiguration.getType	0	
org.argouml.kernel.ProfileConfiguration.repair	0	
org.argouml.kernel.ProfileConfiguration.toString	0	
org.argouml.kernel.ProfileConfiguration.findStereotypeForObject	2	String	Object	
org.argouml.kernel.ProfileConfiguration.findType	1	String	
org.argouml.kernel.ProfileConfiguration.findTypeInModel	2	String	Object	
org.argouml.kernel.ProfileConfiguration.findByMetaType	1	Object	
org.argouml.kernel.ProfileConfiguration.findAllStereotypesForModelElement	1	Object	
List of methods:
org.argouml.kernel.ProfileConfiguration.ProfileConfiguration(Project)
{
  super(EXTENSION,project);
  for (  Profile p : ProfileFacade.getManager().getDefaultProfiles()) {
    addProfile(p);
  }
  updateStrategies();
}


org.argouml.kernel.ProfileConfiguration.ProfileConfiguration(Project,Collection<Profile>)
{
  super(EXTENSION,project);
  for (  Profile profile : configuredProfiles) {
    addProfile(profile);
  }
  updateStrategies();
}


org.argouml.kernel.ProfileConfiguration.updateStrategies()
{
  for (  Profile profile : profiles) {
    activateFormatingStrategy(profile);
    activateDefaultTypeStrategy(profile);
  }
}


org.argouml.kernel.ProfileConfiguration.getFormatingStrategy()
{
  return formatingStrategy;
}


org.argouml.kernel.ProfileConfiguration.getDefaultTypeStrategy()
{
  return defaultTypeStrategy;
}


org.argouml.kernel.ProfileConfiguration.activateDefaultTypeStrategy(Profile)
{
  if (profile != null && profile.getDefaultTypeStrategy() != null && getProfiles().contains(profile)) {
    this.defaultTypeStrategy=profile.getDefaultTypeStrategy();
  }
}


org.argouml.kernel.ProfileConfiguration.activateFormatingStrategy(Profile)
{
  if (profile != null && profile.getFormatingStrategy() != null && getProfiles().contains(profile)) {
    this.formatingStrategy=profile.getFormatingStrategy();
  }
}


org.argouml.kernel.ProfileConfiguration.getProfiles()
{
  return profiles;
}


org.argouml.kernel.ProfileConfiguration.addProfile(Profile)
{
  if (!profiles.contains(p)) {
    profiles.add(p);
    try {
      profileModels.addAll(p.getProfilePackages());
    }
 catch (    ProfileException e) {
      LOG.warn("Error retrieving profile's " + p + " packages.",e);
    }
    FigNodeStrategy fns=p.getFigureStrategy();
    if (fns != null) {
      figNodeStrategies.add(fns);
    }
    for (    Profile dependency : p.getDependencies()) {
      addProfile(dependency);
    }
    for (    CrUML critic : p.getCritics()) {
      critic.setEnabled(true);
    }
    updateStrategies();
    ArgoEventPump.fireEvent(new ArgoProfileEvent(ArgoEventTypes.PROFILE_ADDED,new PropertyChangeEvent(this,"profile",null,p)));
  }
}


org.argouml.kernel.ProfileConfiguration.getProfileModels()
{
  return profileModels;
}


org.argouml.kernel.ProfileConfiguration.removeProfile(Profile)
{
  profiles.remove(p);
  for (  CrUML critic : p.getCritics()) {
    critic.setEnabled(false);
  }
  try {
    profileModels.removeAll(p.getProfilePackages());
  }
 catch (  ProfileException e) {
    LOG.error("Exception",e);
  }
  FigNodeStrategy fns=p.getFigureStrategy();
  if (fns != null) {
    figNodeStrategies.remove(fns);
  }
  if (formatingStrategy == p.getFormatingStrategy()) {
    formatingStrategy=null;
  }
  List<Profile> markForRemoval=new ArrayList<Profile>();
  for (  Profile profile : profiles) {
    if (profile.getDependencies().contains(p)) {
      markForRemoval.add(profile);
    }
  }
  for (  Profile profile : markForRemoval) {
    removeProfile(profile);
  }
  updateStrategies();
  ArgoEventPump.fireEvent(new ArgoProfileEvent(ArgoEventTypes.PROFILE_REMOVED,new PropertyChangeEvent(this,"profile",p,null)));
}


org.argouml.kernel.ProfileConfiguration.getFigNodeStrategy()
{
  return compositeFigNodeStrategy;
}


org.argouml.kernel.ProfileConfiguration.getType()
{
  return EXTENSION;
}


org.argouml.kernel.ProfileConfiguration.repair()
{
  return "";
}


org.argouml.kernel.ProfileConfiguration.toString()
{
  return "Profile Configuration";
}


org.argouml.kernel.ProfileConfiguration.findStereotypeForObject(String,Object)
{
  Iterator iter=null;
  for (  Object model : profileModels) {
    iter=Model.getFacade().getOwnedElements(model).iterator();
    while (iter.hasNext()) {
      Object stereo=iter.next();
      if (!Model.getFacade().isAStereotype(stereo) || !name.equals(Model.getFacade().getName(stereo))) {
        continue;
      }
      if (Model.getExtensionMechanismsHelper().isValidStereotype(element,stereo)) {
        return stereo;
      }
    }
  }
  return null;
}


org.argouml.kernel.ProfileConfiguration.findType(String)
{
  for (  Object model : getProfileModels()) {
    Object result=findTypeInModel(name,model);
    if (result != null) {
      return result;
    }
  }
  return null;
}


org.argouml.kernel.ProfileConfiguration.findTypeInModel(String,Object)
{
  if (!Model.getFacade().isANamespace(model)) {
    throw new IllegalArgumentException("Looking for the classifier " + s + " in a non-namespace object of "+ model+ ". A namespace was expected.");
  }
  Collection allClassifiers=Model.getModelManagementHelper().getAllModelElementsOfKind(model,Model.getMetaTypes().getClassifier());
  Object[] classifiers=allClassifiers.toArray();
  Object classifier=null;
  for (int i=0; i < classifiers.length; i++) {
    classifier=classifiers[i];
    if (Model.getFacade().getName(classifier) != null && Model.getFacade().getName(classifier).equals(s)) {
      return classifier;
    }
  }
  return null;
}


org.argouml.kernel.ProfileConfiguration.findByMetaType(Object)
{
  Set elements=new HashSet();
  Iterator it=getProfileModels().iterator();
  while (it.hasNext()) {
    Object model=it.next();
    elements.addAll(Model.getModelManagementHelper().getAllModelElementsOfKind(model,metaType));
  }
  return elements;
}


org.argouml.kernel.ProfileConfiguration.findAllStereotypesForModelElement(Object)
{
  return Model.getExtensionMechanismsHelper().getAllPossibleStereotypes(getProfileModels(),modelElement);
}


-------------------------------------
ListOfCorpusMethodsPreviousVersion size: 20
ListOfCorpusMethodsCurrentVersion size: 20
Gold set methods: 
org.argouml.kernel.ProfileConfiguration.addProfile(Profile)
org.argouml.kernel.ProfileConfiguration.removeProfile(Profile)

##########################################################

File Name and Type: R	trunk_src_argouml-app_tests_org_argouml_profile_internal_ocl_TestCrOCL2.java
Reading file: TestCases/Input/ArgoUML/SVNFilesSideBySide/15248/trunk_src_argouml-app_tests_org_argouml_profile_internal_ocl_TestCrOCL2.java.vPrevious
org.argouml.profile.internal.ocl.TestCrOCL2.setUp	0	
org.argouml.profile.internal.ocl.TestCrOCL2.test6_5_4_2	0	
List of methods:
org.argouml.profile.internal.ocl.TestCrOCL2.setUp()
{
  super.setUp();
  InitializeModel.initializeDefault();
}


org.argouml.profile.internal.ocl.TestCrOCL2.test6_5_4_2()
{
  Object obj=Model.getUseCasesFactory().createActor();
  CrOCL ocl=new CrOCL("context Actor inv: 2->size() = 1");
  assertEquals(ocl.predicate2(obj,Designer.theDesigner()),Critic.NO_PROBLEM);
}


-------------------------------------
Reading file: TestCases/Input/ArgoUML/SVNFilesSideBySide/15248/trunk_src_argouml-app_tests_org_argouml_profile_internal_ocl_TestCrOCL2.java.v15248
org.argouml.profile.internal.ocl.TestCrOCL2.setUp	0	
org.argouml.profile.internal.ocl.TestCrOCL2.test6_5_4_2	0	
List of methods:
org.argouml.profile.internal.ocl.TestCrOCL2.setUp()
{
  super.setUp();
  InitializeModel.initializeDefault();
}


org.argouml.profile.internal.ocl.TestCrOCL2.test6_5_4_2()
{
  Object obj=Model.getUseCasesFactory().createActor();
  CrOCL ocl=new CrOCL("context Actor inv: 2->size() = 1");
  assertEquals(ocl.predicate2(obj,Designer.theDesigner()),Critic.NO_PROBLEM);
}


-------------------------------------
ListOfCorpusMethodsPreviousVersion size: 2
ListOfCorpusMethodsCurrentVersion size: 2
Gold set methods: 

##########################################################

File Name and Type: M	trunk_src_argouml-app_src_org_argouml_cognitive_Agency.java
Reading file: TestCases/Input/ArgoUML/SVNFilesSideBySide/15248/trunk_src_argouml-app_src_org_argouml_cognitive_Agency.java.vPrevious
org.argouml.cognitive.Agency.Agency	1	ControlMech	
org.argouml.cognitive.Agency.Agency	0	
org.argouml.cognitive.Agency.theAgency	0	
org.argouml.cognitive.Agency.getCriticRegistry	0	
org.argouml.cognitive.Agency.getCritics	0	
org.argouml.cognitive.Agency.getCriticList	0	
org.argouml.cognitive.Agency.addCritic	1	Critic	
org.argouml.cognitive.Agency.register	2	String	String	
org.argouml.cognitive.Agency.register	2	Critic	Class	
org.argouml.cognitive.Agency.register	2	Critic	Object	
org.argouml.cognitive.Agency.criticsForClass	1	Class	
org.argouml.cognitive.Agency.criticsForSpecificClass	1	Class	
org.argouml.cognitive.Agency.criticListForSpecificClass	1	Class	
org.argouml.cognitive.Agency.applyAllCritics	3	Object	Designer	long	
org.argouml.cognitive.Agency.applyAllCritics	2	Object	Designer	
org.argouml.cognitive.Agency.applyCritics	4	Object	Designer	Collection<Critic>	long	
org.argouml.cognitive.Agency.determineActiveCritics	1	Designer	
org.argouml.cognitive.Agency.addStaticObserver	1	Observer	
org.argouml.cognitive.Agency.notifyStaticObservers	1	Object	
List of methods:
org.argouml.cognitive.Agency.Agency(ControlMech)
{
  controlMech=cm;
}


org.argouml.cognitive.Agency.Agency()
{
  controlMech=new StandardCM();
}


org.argouml.cognitive.Agency.theAgency()
{
  Designer dsgr=Designer.theDesigner();
  if (dsgr == null) {
    return null;
  }
  return dsgr.getAgency();
}


org.argouml.cognitive.Agency.getCriticRegistry()
{
  return criticRegistry;
}


org.argouml.cognitive.Agency.getCritics()
{
  return new Vector<Critic>(critics);
}


org.argouml.cognitive.Agency.getCriticList()
{
  return critics;
}


org.argouml.cognitive.Agency.addCritic(Critic)
{
  if (critics.contains(cr)) {
    return;
  }
  if (!(cr instanceof CompoundCritic)) {
    critics.add(cr);
  }
 else {
    for (    Critic c : ((CompoundCritic)cr).getCriticList()) {
      addCritic(c);
    }
    return;
  }
}


org.argouml.cognitive.Agency.register(String,String)
{
  Class dmClass;
  try {
    dmClass=Class.forName(dmClassName);
  }
 catch (  java.lang.ClassNotFoundException e) {
    LOG.error("Error loading dm " + dmClassName,e);
    return;
  }
  Critic cr=singletonCritics.get(crClassName);
  if (cr == null) {
    Class crClass;
    try {
      crClass=Class.forName(crClassName);
    }
 catch (    java.lang.ClassNotFoundException e) {
      LOG.error("Error loading cr " + crClassName,e);
      return;
    }
    try {
      cr=(Critic)crClass.newInstance();
    }
 catch (    java.lang.IllegalAccessException e) {
      LOG.error("Error instancating cr " + crClassName,e);
      return;
    }
catch (    java.lang.InstantiationException e) {
      LOG.error("Error instancating cr " + crClassName,e);
      return;
    }
    singletonCritics.put(crClassName,cr);
    addCritic(cr);
  }
  register(cr,dmClass);
}


org.argouml.cognitive.Agency.register(Critic,Class)
{
  List<Critic> theCritics=getCriticRegistry().get(clazz);
  if (theCritics == null) {
    theCritics=new ArrayList<Critic>();
    criticRegistry.put(clazz,theCritics);
  }
  theCritics.add(cr);
  notifyStaticObservers(cr);
  LOG.debug("Registered: " + theCritics.toString());
  cachedCritics.remove(clazz);
  addCritic(cr);
}


org.argouml.cognitive.Agency.register(Critic,Object)
{
  register(cr,(Class)clazz);
}


org.argouml.cognitive.Agency.criticsForClass(Class)
{
  Collection<Critic> col=cachedCritics.get(clazz);
  if (col == null) {
    col=new ArrayList<Critic>();
    col.addAll(criticListForSpecificClass(clazz));
    Collection<Class> classes=new ArrayList<Class>();
    if (clazz.getSuperclass() != null) {
      classes.add(clazz.getSuperclass());
    }
    if (clazz.getInterfaces() != null) {
      classes.addAll(Arrays.asList(clazz.getInterfaces()));
    }
    for (    Class c : classes) {
      col.addAll(criticsForClass(c));
    }
    cachedCritics.put(clazz,col);
  }
  return col;
}


org.argouml.cognitive.Agency.criticsForSpecificClass(Class)
{
  return new Vector<Critic>(criticListForSpecificClass(clazz));
}


org.argouml.cognitive.Agency.criticListForSpecificClass(Class)
{
  List<Critic> theCritics=getCriticRegistry().get(clazz);
  if (theCritics == null) {
    theCritics=new ArrayList<Critic>();
    criticRegistry.put(clazz,theCritics);
  }
  return theCritics;
}


org.argouml.cognitive.Agency.applyAllCritics(Object,Designer,long)
{
  Class dmClazz=dm.getClass();
  Collection<Critic> c=criticsForClass(dmClazz);
  applyCritics(dm,d,c,reasonCode);
}


org.argouml.cognitive.Agency.applyAllCritics(Object,Designer)
{
  Class dmClazz=dm.getClass();
  Collection<Critic> c=criticsForClass(dmClazz);
  applyCritics(dm,d,c,-1L);
}


org.argouml.cognitive.Agency.applyCritics(Object,Designer,Collection<Critic>,long)
{
  for (  Critic c : theCritics) {
    if (c.isActive() && c.matchReason(reasonCode)) {
      try {
        c.critique(dm,d);
      }
 catch (      Exception ex) {
        LOG.error("Disabling critique due to exception\n" + c + "\n"+ dm,ex);
        c.setEnabled(false);
      }
    }
  }
}


org.argouml.cognitive.Agency.determineActiveCritics(Designer)
{
  for (  Critic c : critics) {
    if (controlMech.isRelevant(c,d)) {
      c.beActive();
    }
 else {
      c.beInactive();
    }
  }
}


org.argouml.cognitive.Agency.addStaticObserver(Observer)
{
  Agency a=theAgency();
  if (a == null) {
    return;
  }
  a.addObserver(obs);
}


org.argouml.cognitive.Agency.notifyStaticObservers(Object)
{
  if (theAgency() != null) {
    theAgency().setChanged();
    theAgency().notifyObservers(o);
  }
}


-------------------------------------
Reading file: TestCases/Input/ArgoUML/SVNFilesSideBySide/15248/trunk_src_argouml-app_src_org_argouml_cognitive_Agency.java.v15248
org.argouml.cognitive.Agency.Agency	1	ControlMech	
org.argouml.cognitive.Agency.Agency	0	
org.argouml.cognitive.Agency.theAgency	0	
org.argouml.cognitive.Agency.getCriticRegistry	0	
org.argouml.cognitive.Agency.getCritics	0	
org.argouml.cognitive.Agency.getCriticList	0	
org.argouml.cognitive.Agency.addCritic	1	Critic	
org.argouml.cognitive.Agency.register	2	String	String	
org.argouml.cognitive.Agency.register	2	Critic	Class	
org.argouml.cognitive.Agency.register	2	Critic	Object	
org.argouml.cognitive.Agency.register	1	CrUML	
org.argouml.cognitive.Agency.criticsForClass	1	Class	
org.argouml.cognitive.Agency.criticsForSpecificClass	1	Class	
org.argouml.cognitive.Agency.criticListForSpecificClass	1	Class	
org.argouml.cognitive.Agency.applyAllCritics	3	Object	Designer	long	
org.argouml.cognitive.Agency.applyAllCritics	2	Object	Designer	
org.argouml.cognitive.Agency.applyCritics	4	Object	Designer	Collection<Critic>	long	
org.argouml.cognitive.Agency.determineActiveCritics	1	Designer	
org.argouml.cognitive.Agency.addStaticObserver	1	Observer	
org.argouml.cognitive.Agency.notifyStaticObservers	1	Object	
List of methods:
org.argouml.cognitive.Agency.Agency(ControlMech)
{
  controlMech=cm;
}


org.argouml.cognitive.Agency.Agency()
{
  controlMech=new StandardCM();
}


org.argouml.cognitive.Agency.theAgency()
{
  Designer dsgr=Designer.theDesigner();
  if (dsgr == null) {
    return null;
  }
  return dsgr.getAgency();
}


org.argouml.cognitive.Agency.getCriticRegistry()
{
  return criticRegistry;
}


org.argouml.cognitive.Agency.getCritics()
{
  return new Vector<Critic>(critics);
}


org.argouml.cognitive.Agency.getCriticList()
{
  return critics;
}


org.argouml.cognitive.Agency.addCritic(Critic)
{
  if (critics.contains(cr)) {
    return;
  }
  if (!(cr instanceof CompoundCritic)) {
    critics.add(cr);
  }
 else {
    for (    Critic c : ((CompoundCritic)cr).getCriticList()) {
      addCritic(c);
    }
    return;
  }
}


org.argouml.cognitive.Agency.register(String,String)
{
  Class dmClass;
  try {
    dmClass=Class.forName(dmClassName);
  }
 catch (  java.lang.ClassNotFoundException e) {
    LOG.error("Error loading dm " + dmClassName,e);
    return;
  }
  Critic cr=singletonCritics.get(crClassName);
  if (cr == null) {
    Class crClass;
    try {
      crClass=Class.forName(crClassName);
    }
 catch (    java.lang.ClassNotFoundException e) {
      LOG.error("Error loading cr " + crClassName,e);
      return;
    }
    try {
      cr=(Critic)crClass.newInstance();
    }
 catch (    java.lang.IllegalAccessException e) {
      LOG.error("Error instancating cr " + crClassName,e);
      return;
    }
catch (    java.lang.InstantiationException e) {
      LOG.error("Error instancating cr " + crClassName,e);
      return;
    }
    singletonCritics.put(crClassName,cr);
    addCritic(cr);
  }
  register(cr,dmClass);
}


org.argouml.cognitive.Agency.register(Critic,Class)
{
  List<Critic> theCritics=getCriticRegistry().get(clazz);
  if (theCritics == null) {
    theCritics=new ArrayList<Critic>();
    criticRegistry.put(clazz,theCritics);
  }
  theCritics.add(cr);
  notifyStaticObservers(cr);
  LOG.debug("Registered: " + theCritics.toString());
  cachedCritics.remove(clazz);
  addCritic(cr);
}


org.argouml.cognitive.Agency.register(Critic,Object)
{
  register(cr,(Class)clazz);
}


org.argouml.cognitive.Agency.register(CrUML)
{
  Set<Object> metas=cr.getCriticizedMetatypes();
  for (  Object meta : metas) {
    register(cr,meta);
  }
}


org.argouml.cognitive.Agency.criticsForClass(Class)
{
  Collection<Critic> col=cachedCritics.get(clazz);
  if (col == null) {
    col=new ArrayList<Critic>();
    col.addAll(criticListForSpecificClass(clazz));
    Collection<Class> classes=new ArrayList<Class>();
    if (clazz.getSuperclass() != null) {
      classes.add(clazz.getSuperclass());
    }
    if (clazz.getInterfaces() != null) {
      classes.addAll(Arrays.asList(clazz.getInterfaces()));
    }
    for (    Class c : classes) {
      col.addAll(criticsForClass(c));
    }
    cachedCritics.put(clazz,col);
  }
  return col;
}


org.argouml.cognitive.Agency.criticsForSpecificClass(Class)
{
  return new Vector<Critic>(criticListForSpecificClass(clazz));
}


org.argouml.cognitive.Agency.criticListForSpecificClass(Class)
{
  List<Critic> theCritics=getCriticRegistry().get(clazz);
  if (theCritics == null) {
    theCritics=new ArrayList<Critic>();
    criticRegistry.put(clazz,theCritics);
  }
  return theCritics;
}


org.argouml.cognitive.Agency.applyAllCritics(Object,Designer,long)
{
  Class dmClazz=dm.getClass();
  Collection<Critic> c=criticsForClass(dmClazz);
  applyCritics(dm,d,c,reasonCode);
}


org.argouml.cognitive.Agency.applyAllCritics(Object,Designer)
{
  Class dmClazz=dm.getClass();
  Collection<Critic> c=criticsForClass(dmClazz);
  applyCritics(dm,d,c,-1L);
}


org.argouml.cognitive.Agency.applyCritics(Object,Designer,Collection<Critic>,long)
{
  for (  Critic c : theCritics) {
    if (c.isActive() && c.matchReason(reasonCode)) {
      try {
        c.critique(dm,d);
      }
 catch (      Exception ex) {
        LOG.error("Disabling critique due to exception\n" + c + "\n"+ dm,ex);
        c.setEnabled(false);
      }
    }
  }
}


org.argouml.cognitive.Agency.determineActiveCritics(Designer)
{
  for (  Critic c : critics) {
    if (controlMech.isRelevant(c,d)) {
      c.beActive();
    }
 else {
      c.beInactive();
    }
  }
}


org.argouml.cognitive.Agency.addStaticObserver(Observer)
{
  Agency a=theAgency();
  if (a == null) {
    return;
  }
  a.addObserver(obs);
}


org.argouml.cognitive.Agency.notifyStaticObservers(Object)
{
  if (theAgency() != null) {
    theAgency().setChanged();
    theAgency().notifyObservers(o);
  }
}


-------------------------------------
ListOfCorpusMethodsPreviousVersion size: 19
ListOfCorpusMethodsCurrentVersion size: 20
Gold set methods: 
org.argouml.cognitive.Agency.register(CrUML)

##########################################################

File Name and Type: M	trunk_src_argouml-app_src_org_argouml_ui_explorer_ExplorerPopup.java
Reading file: TestCases/Input/ArgoUML/SVNFilesSideBySide/15248/trunk_src_argouml-app_src_org_argouml_ui_explorer_ExplorerPopup.java.vPrevious
org.argouml.ui.explorer.ExplorerPopup.ExplorerPopup	2	Object	MouseEvent	
org.argouml.ui.explorer.ExplorerPopup.initMenuCreateDiagrams	0	
org.argouml.ui.explorer.ExplorerPopup.initMenuCreateModelElements	0	
org.argouml.ui.explorer.ExplorerPopup.addCreateModelElementAction	3	Set<JMenuItem>	Object	String	
org.argouml.ui.explorer.ExplorerPopup.buildDirectionalCreateMenuItem	5	Object	Object	Object	String	JMenu	
org.argouml.ui.explorer.ExplorerPopup.menuLocalize	1	String	
org.argouml.ui.explorer.ExplorerPopup.addMenuItemForBothEndsOf	1	Object	
org.argouml.ui.explorer.ExplorerPopup.ActionAddExistingRelatedNode.ActionAddExistingRelatedNode	2	String	Object	
org.argouml.ui.explorer.ExplorerPopup.ActionAddExistingRelatedNode.isEnabled	0	
org.argouml.ui.explorer.ExplorerPopup.OrderedMenuItem.OrderedMenuItem	1	Action	
org.argouml.ui.explorer.ExplorerPopup.OrderedMenuItem.OrderedMenuItem	1	String	
org.argouml.ui.explorer.ExplorerPopup.OrderedMenuItem.compareTo	1	Object	
org.argouml.ui.explorer.ExplorerPopup.OrderedMenu.OrderedMenu	1	String	
org.argouml.ui.explorer.ExplorerPopup.OrderedMenu.compareTo	1	Object	
org.argouml.ui.explorer.ExplorerPopup.ActionCreateAssociation.ActionCreateAssociation	2	Object	List	
org.argouml.ui.explorer.ExplorerPopup.ActionCreateAssociation.actionPerformed	1	ActionEvent	
org.argouml.ui.explorer.ExplorerPopup.ActionCreateAssociationRole.ActionCreateAssociationRole	2	Object	List	
org.argouml.ui.explorer.ExplorerPopup.ActionCreateAssociationRole.actionPerformed	1	ActionEvent	
org.argouml.ui.explorer.ExplorerPopup.isRelatedToProfiles	2	Project	Object	
List of methods:
org.argouml.ui.explorer.ExplorerPopup.ExplorerPopup(Object,MouseEvent)
{
  super("Explorer popup menu");
  final Project currentProject=ProjectManager.getManager().getCurrentProject();
  boolean multiSelect=TargetManager.getInstance().getTargets().size() > 1;
  boolean modelElementsOnly=true;
  for (Iterator it=TargetManager.getInstance().getTargets().iterator(); it.hasNext() && modelElementsOnly; ) {
    Object element=it.next();
    if (!Model.getFacade().isAUMLElement(element) || isRelatedToProfiles(currentProject,element)) {
      modelElementsOnly=false;
    }
  }
  final ArgoDiagram activeDiagram=currentProject.getActiveDiagram();
  if (!multiSelect && !isRelatedToProfiles(currentProject,selectedItem)) {
    initMenuCreateDiagrams();
    this.add(createDiagrams);
  }
  if (!multiSelect && selectedItem instanceof Profile) {
    this.add(new ActionExportProfileXMI((Profile)selectedItem));
  }
  if (modelElementsOnly) {
    initMenuCreateModelElements();
  }
  final Object projectModel=currentProject.getModel();
  final boolean modelElementSelected=Model.getFacade().isAUMLElement(selectedItem) && !isRelatedToProfiles(currentProject,selectedItem);
  if (modelElementSelected) {
    final boolean nAryAssociationSelected=Model.getFacade().isANaryAssociation(selectedItem);
    final boolean classifierSelected=Model.getFacade().isAClassifier(selectedItem);
    final boolean packageSelected=Model.getFacade().isAPackage(selectedItem);
    final boolean commentSelected=Model.getFacade().isAComment(selectedItem);
    final boolean stateVertexSelected=Model.getFacade().isAStateVertex(selectedItem);
    final boolean instanceSelected=Model.getFacade().isAInstance(selectedItem);
    final boolean dataValueSelected=Model.getFacade().isADataValue(selectedItem);
    final boolean relationshipSelected=Model.getFacade().isARelationship(selectedItem);
    final boolean flowSelected=Model.getFacade().isAFlow(selectedItem);
    final boolean linkSelected=Model.getFacade().isALink(selectedItem);
    final boolean transitionSelected=Model.getFacade().isATransition(selectedItem);
    final boolean activityDiagramActive=activeDiagram instanceof UMLActivityDiagram;
    final boolean sequenceDiagramActive=activeDiagram instanceof UMLSequenceDiagram;
    final boolean stateDiagramActive=activeDiagram instanceof UMLStateDiagram;
    final Object selectedStateMachine=(stateVertexSelected) ? Model.getStateMachinesHelper().getStateMachine(selectedItem) : null;
    final Object diagramStateMachine=(stateDiagramActive) ? ((UMLStateDiagram)activeDiagram).getStateMachine() : null;
    final Object diagramActivity=(activityDiagramActive) ? ((UMLActivityDiagram)activeDiagram).getStateMachine() : null;
    if (!multiSelect) {
      if ((classifierSelected && !relationshipSelected) || (packageSelected && selectedItem != projectModel) || (stateVertexSelected && activityDiagramActive && diagramActivity == selectedStateMachine)|| (stateVertexSelected && stateDiagramActive && diagramStateMachine == selectedStateMachine)|| (instanceSelected && !dataValueSelected && !sequenceDiagramActive)|| nAryAssociationSelected|| commentSelected) {
        Action action=new ActionAddExistingNode(menuLocalize("menu.popup.add-to-diagram"),selectedItem);
        this.add(action);
      }
      if ((relationshipSelected && !flowSelected && !nAryAssociationSelected) || (linkSelected && !sequenceDiagramActive) || transitionSelected) {
        Action action=new ActionAddExistingEdge(menuLocalize("menu.popup.add-to-diagram"),selectedItem);
        this.add(action);
        addMenuItemForBothEndsOf(selectedItem);
      }
      if (classifierSelected || packageSelected) {
        this.add(new ActionSetSourcePath());
      }
      if (Model.getFacade().isAOperation(selectedItem)) {
        this.add(new ActionRESequenceDiagram());
      }
    }
    if (selectedItem != projectModel) {
      this.add(new ActionDeleteModelElements());
    }
  }
  if (!multiSelect) {
    if (selectedItem instanceof UMLClassDiagram) {
      Action action=new ActionAddAllClassesFromModel(menuLocalize("menu.popup.add-all-classes-to-diagram"),selectedItem);
      this.add(action);
    }
  }
  if (multiSelect) {
    Collection coll=TargetManager.getInstance().getTargets();
    Iterator iter=(coll != null) ? coll.iterator() : null;
    List<Object> classifiers=new ArrayList<Object>();
    while (iter != null && iter.hasNext()) {
      Object o=iter.next();
      if (Model.getFacade().isAClassifier(o) && !Model.getFacade().isARelationship(o) && !isRelatedToProfiles(currentProject,o)) {
        classifiers.add(o);
      }
    }
    if (!classifiers.isEmpty()) {
      Action action=new ActionAddExistingNodes(menuLocalize("menu.popup.add-to-diagram"),classifiers);
      this.add(action);
    }
  }
  if (selectedItem instanceof Diagram) {
    this.add(new ActionSaveDiagramToClipboard());
    ActionDeleteModelElements ad=new ActionDeleteModelElements();
    ad.setEnabled(ad.shouldBeEnabled());
    this.add(ad);
  }
}


org.argouml.ui.explorer.ExplorerPopup.initMenuCreateDiagrams()
{
  createDiagrams.add(new ActionUseCaseDiagram());
  createDiagrams.add(new ActionClassDiagram());
  createDiagrams.add(new ActionSequenceDiagram());
  createDiagrams.add(new ActionCollaborationDiagram());
  createDiagrams.add(new ActionStateDiagram());
  createDiagrams.add(new ActionActivityDiagram());
  createDiagrams.add(new ActionDeploymentDiagram());
}


org.argouml.ui.explorer.ExplorerPopup.initMenuCreateModelElements()
{
  List targets=TargetManager.getInstance().getTargets();
  Set<JMenuItem> menuItems=new TreeSet<JMenuItem>();
  if (targets.size() >= 2) {
    boolean classifierRoleFound=false;
    boolean classifierRolesOnly=true;
    for (Iterator it=targets.iterator(); it.hasNext() && classifierRolesOnly; ) {
      if (Model.getFacade().isAClassifierRole(it.next())) {
        classifierRoleFound=true;
      }
 else {
        classifierRolesOnly=false;
      }
    }
    if (classifierRolesOnly) {
      menuItems.add(new OrderedMenuItem(new ActionCreateAssociationRole(Model.getMetaTypes().getAssociationRole(),targets)));
    }
 else     if (!classifierRoleFound) {
      boolean classifiersOnly=true;
      for (Iterator it=targets.iterator(); it.hasNext() && classifiersOnly; ) {
        if (!Model.getFacade().isAClassifier(it.next())) {
          classifiersOnly=false;
        }
      }
      if (classifiersOnly) {
        menuItems.add(new OrderedMenuItem(new ActionCreateAssociation(Model.getMetaTypes().getAssociation(),targets)));
      }
    }
  }
  if (targets.size() == 2) {
    addCreateModelElementAction(menuItems,Model.getMetaTypes().getDependency()," " + menuLocalize("menu.popup.depends-on") + " ");
    addCreateModelElementAction(menuItems,Model.getMetaTypes().getGeneralization()," " + menuLocalize("menu.popup.generalizes") + " ");
    addCreateModelElementAction(menuItems,Model.getMetaTypes().getInclude()," " + menuLocalize("menu.popup.includes") + " ");
    addCreateModelElementAction(menuItems,Model.getMetaTypes().getExtend()," " + menuLocalize("menu.popup.extends") + " ");
    addCreateModelElementAction(menuItems,Model.getMetaTypes().getPackageImport()," " + menuLocalize("menu.popup.has-permission-on") + " ");
    addCreateModelElementAction(menuItems,Model.getMetaTypes().getUsage()," " + menuLocalize("menu.popup.uses") + " ");
    addCreateModelElementAction(menuItems,Model.getMetaTypes().getAbstraction()," " + menuLocalize("menu.popup.realizes") + " ");
  }
 else   if (targets.size() == 1) {
    Object target=targets.get(0);
    for (int iter=0; iter < MODEL_ELEMENT_MENUITEMS.length; iter+=2) {
      if (Model.getUmlFactory().isContainmentValid(MODEL_ELEMENT_MENUITEMS[iter],target)) {
        menuItems.add(new OrderedMenuItem(new ActionCreateContainedModelElement(MODEL_ELEMENT_MENUITEMS[iter],target,(String)MODEL_ELEMENT_MENUITEMS[iter + 1])));
      }
    }
  }
  if (menuItems.size() == 1) {
    add(menuItems.iterator().next());
  }
 else   if (menuItems.size() > 1) {
    JMenu menu=new JMenu(menuLocalize("menu.popup.create-model-element"));
    add(menu);
    for (    JMenuItem item : menuItems) {
      menu.add(item);
    }
  }
}


org.argouml.ui.explorer.ExplorerPopup.addCreateModelElementAction(Set<JMenuItem>,Object,String)
{
  List targets=TargetManager.getInstance().getTargets();
  Object source=targets.get(0);
  Object dest=targets.get(1);
  JMenu subMenu=new OrderedMenu(menuLocalize("menu.popup.create") + " " + Model.getMetaTypes().getName(metaType));
  buildDirectionalCreateMenuItem(metaType,dest,source,relationshipDescr,subMenu);
  buildDirectionalCreateMenuItem(metaType,source,dest,relationshipDescr,subMenu);
  if (subMenu.getMenuComponents().length > 0) {
    menuItems.add(subMenu);
  }
}


org.argouml.ui.explorer.ExplorerPopup.buildDirectionalCreateMenuItem(Object,Object,Object,String,JMenu)
{
  if (Model.getUmlFactory().isConnectionValid(metaType,source,dest,true)) {
    JMenuItem menuItem=new JMenuItem(new ActionCreateEdgeModelElement(metaType,source,dest,relationshipDescr));
    if (menuItem != null) {
      menu.add(menuItem);
    }
  }
}


org.argouml.ui.explorer.ExplorerPopup.menuLocalize(String)
{
  return Translator.localize(key);
}


org.argouml.ui.explorer.ExplorerPopup.addMenuItemForBothEndsOf(Object)
{
  Collection coll=null;
  if (Model.getFacade().isAAssociation(edge) || Model.getFacade().isALink(edge)) {
    coll=Model.getFacade().getConnections(edge);
  }
 else   if (Model.getFacade().isAAbstraction(edge) || Model.getFacade().isADependency(edge)) {
    coll=new ArrayList();
    coll.addAll(Model.getFacade().getClients(edge));
    coll.addAll(Model.getFacade().getSuppliers(edge));
  }
 else   if (Model.getFacade().isAGeneralization(edge)) {
    coll=new ArrayList();
    Object parent=Model.getFacade().getGeneral(edge);
    coll.add(parent);
    coll.addAll(Model.getFacade().getChildren(parent));
  }
  if (coll == null) {
    return;
  }
  Iterator iter=coll.iterator();
  while (iter.hasNext()) {
    Object me=iter.next();
    if (me != null) {
      if (Model.getFacade().isAAssociationEnd(me)) {
        me=Model.getFacade().getType(me);
      }
      if (me != null) {
        String name=Model.getFacade().getName(me);
        if (name == null || name.length() == 0) {
          name="(anon element)";
        }
        Action action=new ActionAddExistingRelatedNode(menuLocalize("menu.popup.add-to-diagram") + ": " + name,me);
        this.add(action);
      }
    }
  }
}


org.argouml.ui.explorer.ExplorerPopup.ActionAddExistingRelatedNode.ActionAddExistingRelatedNode(String,Object)
{
  super(name,o);
  object=o;
}


org.argouml.ui.explorer.ExplorerPopup.ActionAddExistingRelatedNode.isEnabled()
{
  ArgoDiagram dia=ProjectManager.getManager().getCurrentProject().getActiveDiagram();
  if (dia == null)   return false;
  MutableGraphModel gm=(MutableGraphModel)dia.getGraphModel();
  return gm.canAddNode(object);
}


org.argouml.ui.explorer.ExplorerPopup.OrderedMenuItem.OrderedMenuItem(Action)
{
  super(action);
}


org.argouml.ui.explorer.ExplorerPopup.OrderedMenuItem.OrderedMenuItem(String)
{
  super(name);
  setName(name);
}


org.argouml.ui.explorer.ExplorerPopup.OrderedMenuItem.compareTo(Object)
{
  JMenuItem other=(JMenuItem)o;
  return toString().compareTo(other.toString());
}


org.argouml.ui.explorer.ExplorerPopup.OrderedMenu.OrderedMenu(String)
{
  super(name);
}


org.argouml.ui.explorer.ExplorerPopup.OrderedMenu.compareTo(Object)
{
  JMenuItem other=(JMenuItem)o;
  return toString().compareTo(other.toString());
}


org.argouml.ui.explorer.ExplorerPopup.ActionCreateAssociation.ActionCreateAssociation(Object,List)
{
  super(menuLocalize("menu.popup.create") + " " + Model.getMetaTypes().getName(theMetaType));
  this.metaType=theMetaType;
  this.classifiers=classifiersList;
}


org.argouml.ui.explorer.ExplorerPopup.ActionCreateAssociation.actionPerformed(ActionEvent)
{
  try {
    Object newElement=Model.getUmlFactory().buildConnection(metaType,classifiers.get(0),null,classifiers.get(1),null,null,null);
    for (int i=2; i < classifiers.size(); ++i) {
      Model.getUmlFactory().buildConnection(Model.getMetaTypes().getAssociationEnd(),newElement,null,classifiers.get(i),null,null,null);
    }
  }
 catch (  IllegalModelElementConnectionException e1) {
    LOG.error("Exception",e1);
  }
}


org.argouml.ui.explorer.ExplorerPopup.ActionCreateAssociationRole.ActionCreateAssociationRole(Object,List)
{
  super(menuLocalize("menu.popup.create") + " " + Model.getMetaTypes().getName(theMetaType));
  this.metaType=theMetaType;
  this.classifierRoles=classifierRolesList;
}


org.argouml.ui.explorer.ExplorerPopup.ActionCreateAssociationRole.actionPerformed(ActionEvent)
{
  try {
    Object newElement=Model.getUmlFactory().buildConnection(metaType,classifierRoles.get(0),null,classifierRoles.get(1),null,null,null);
    for (int i=2; i < classifierRoles.size(); ++i) {
      Model.getUmlFactory().buildConnection(Model.getMetaTypes().getAssociationEndRole(),newElement,null,classifierRoles.get(i),null,null,null);
    }
  }
 catch (  IllegalModelElementConnectionException e1) {
    LOG.error("Exception",e1);
  }
}


org.argouml.ui.explorer.ExplorerPopup.isRelatedToProfiles(Project,Object)
{
  boolean found=selectedItem instanceof ProfileConfiguration || selectedItem instanceof Profile || selectedItem instanceof ArgoDiagram;
  if (Model.getFacade().isAUMLElement(selectedItem)) {
    if (!found) {
      for (      Profile profile : currentProject.getProfileConfiguration().getProfiles()) {
        Collection models;
        try {
          models=profile.getProfilePackages();
          for (          Object model : models) {
            if ((Model.getFacade().getRoot(selectedItem).equals(model))) {
              found=true;
              break;
            }
          }
        }
 catch (        ProfileException e) {
        }
      }
    }
  }
  return found;
}


-------------------------------------
Reading file: TestCases/Input/ArgoUML/SVNFilesSideBySide/15248/trunk_src_argouml-app_src_org_argouml_ui_explorer_ExplorerPopup.java.v15248
org.argouml.ui.explorer.ExplorerPopup.ExplorerPopup	2	Object	MouseEvent	
org.argouml.ui.explorer.ExplorerPopup.initMenuCreateDiagrams	0	
org.argouml.ui.explorer.ExplorerPopup.initMenuCreateModelElements	0	
org.argouml.ui.explorer.ExplorerPopup.addCreateModelElementAction	3	Set<JMenuItem>	Object	String	
org.argouml.ui.explorer.ExplorerPopup.buildDirectionalCreateMenuItem	5	Object	Object	Object	String	JMenu	
org.argouml.ui.explorer.ExplorerPopup.menuLocalize	1	String	
org.argouml.ui.explorer.ExplorerPopup.addMenuItemForBothEndsOf	1	Object	
org.argouml.ui.explorer.ExplorerPopup.ActionAddExistingRelatedNode.ActionAddExistingRelatedNode	2	String	Object	
org.argouml.ui.explorer.ExplorerPopup.ActionAddExistingRelatedNode.isEnabled	0	
org.argouml.ui.explorer.ExplorerPopup.OrderedMenuItem.OrderedMenuItem	1	Action	
org.argouml.ui.explorer.ExplorerPopup.OrderedMenuItem.OrderedMenuItem	1	String	
org.argouml.ui.explorer.ExplorerPopup.OrderedMenuItem.compareTo	1	Object	
org.argouml.ui.explorer.ExplorerPopup.OrderedMenu.OrderedMenu	1	String	
org.argouml.ui.explorer.ExplorerPopup.OrderedMenu.compareTo	1	Object	
org.argouml.ui.explorer.ExplorerPopup.ActionCreateAssociation.ActionCreateAssociation	2	Object	List	
org.argouml.ui.explorer.ExplorerPopup.ActionCreateAssociation.actionPerformed	1	ActionEvent	
org.argouml.ui.explorer.ExplorerPopup.ActionCreateAssociationRole.ActionCreateAssociationRole	2	Object	List	
org.argouml.ui.explorer.ExplorerPopup.ActionCreateAssociationRole.actionPerformed	1	ActionEvent	
org.argouml.ui.explorer.ExplorerPopup.isRelatedToProfiles	2	Project	Object	
List of methods:
org.argouml.ui.explorer.ExplorerPopup.ExplorerPopup(Object,MouseEvent)
{
  super("Explorer popup menu");
  final Project currentProject=ProjectManager.getManager().getCurrentProject();
  boolean multiSelect=TargetManager.getInstance().getTargets().size() > 1;
  boolean modelElementsOnly=true;
  for (Iterator it=TargetManager.getInstance().getTargets().iterator(); it.hasNext() && modelElementsOnly; ) {
    Object element=it.next();
    if (!Model.getFacade().isAUMLElement(element) || isRelatedToProfiles(currentProject,element)) {
      modelElementsOnly=false;
    }
  }
  final ArgoDiagram activeDiagram=currentProject.getActiveDiagram();
  if (!multiSelect && !isRelatedToProfiles(currentProject,selectedItem)) {
    initMenuCreateDiagrams();
    this.add(createDiagrams);
  }
  if (!multiSelect && selectedItem instanceof Profile) {
    this.add(new ActionExportProfileXMI((Profile)selectedItem));
  }
  if (!multiSelect && selectedItem instanceof ProfileConfiguration) {
    this.add(new ActionManageProfiles());
  }
  if (modelElementsOnly) {
    initMenuCreateModelElements();
  }
  final Object projectModel=currentProject.getModel();
  final boolean modelElementSelected=Model.getFacade().isAUMLElement(selectedItem) && !isRelatedToProfiles(currentProject,selectedItem);
  if (modelElementSelected) {
    final boolean nAryAssociationSelected=Model.getFacade().isANaryAssociation(selectedItem);
    final boolean classifierSelected=Model.getFacade().isAClassifier(selectedItem);
    final boolean packageSelected=Model.getFacade().isAPackage(selectedItem);
    final boolean commentSelected=Model.getFacade().isAComment(selectedItem);
    final boolean stateVertexSelected=Model.getFacade().isAStateVertex(selectedItem);
    final boolean instanceSelected=Model.getFacade().isAInstance(selectedItem);
    final boolean dataValueSelected=Model.getFacade().isADataValue(selectedItem);
    final boolean relationshipSelected=Model.getFacade().isARelationship(selectedItem);
    final boolean flowSelected=Model.getFacade().isAFlow(selectedItem);
    final boolean linkSelected=Model.getFacade().isALink(selectedItem);
    final boolean transitionSelected=Model.getFacade().isATransition(selectedItem);
    final boolean activityDiagramActive=activeDiagram instanceof UMLActivityDiagram;
    final boolean sequenceDiagramActive=activeDiagram instanceof UMLSequenceDiagram;
    final boolean stateDiagramActive=activeDiagram instanceof UMLStateDiagram;
    final Object selectedStateMachine=(stateVertexSelected) ? Model.getStateMachinesHelper().getStateMachine(selectedItem) : null;
    final Object diagramStateMachine=(stateDiagramActive) ? ((UMLStateDiagram)activeDiagram).getStateMachine() : null;
    final Object diagramActivity=(activityDiagramActive) ? ((UMLActivityDiagram)activeDiagram).getStateMachine() : null;
    if (!multiSelect) {
      if ((classifierSelected && !relationshipSelected) || (packageSelected && selectedItem != projectModel) || (stateVertexSelected && activityDiagramActive && diagramActivity == selectedStateMachine)|| (stateVertexSelected && stateDiagramActive && diagramStateMachine == selectedStateMachine)|| (instanceSelected && !dataValueSelected && !sequenceDiagramActive)|| nAryAssociationSelected|| commentSelected) {
        Action action=new ActionAddExistingNode(menuLocalize("menu.popup.add-to-diagram"),selectedItem);
        this.add(action);
      }
      if ((relationshipSelected && !flowSelected && !nAryAssociationSelected) || (linkSelected && !sequenceDiagramActive) || transitionSelected) {
        Action action=new ActionAddExistingEdge(menuLocalize("menu.popup.add-to-diagram"),selectedItem);
        this.add(action);
        addMenuItemForBothEndsOf(selectedItem);
      }
      if (classifierSelected || packageSelected) {
        this.add(new ActionSetSourcePath());
      }
      if (Model.getFacade().isAOperation(selectedItem)) {
        this.add(new ActionRESequenceDiagram());
      }
    }
    if (selectedItem != projectModel) {
      this.add(new ActionDeleteModelElements());
    }
  }
  if (!multiSelect) {
    if (selectedItem instanceof UMLClassDiagram) {
      Action action=new ActionAddAllClassesFromModel(menuLocalize("menu.popup.add-all-classes-to-diagram"),selectedItem);
      this.add(action);
    }
  }
  if (multiSelect) {
    Collection coll=TargetManager.getInstance().getTargets();
    Iterator iter=(coll != null) ? coll.iterator() : null;
    List<Object> classifiers=new ArrayList<Object>();
    while (iter != null && iter.hasNext()) {
      Object o=iter.next();
      if (Model.getFacade().isAClassifier(o) && !Model.getFacade().isARelationship(o) && !isRelatedToProfiles(currentProject,o)) {
        classifiers.add(o);
      }
    }
    if (!classifiers.isEmpty()) {
      Action action=new ActionAddExistingNodes(menuLocalize("menu.popup.add-to-diagram"),classifiers);
      this.add(action);
    }
  }
  if (selectedItem instanceof Diagram) {
    this.add(new ActionSaveDiagramToClipboard());
    ActionDeleteModelElements ad=new ActionDeleteModelElements();
    ad.setEnabled(ad.shouldBeEnabled());
    this.add(ad);
  }
}


org.argouml.ui.explorer.ExplorerPopup.initMenuCreateDiagrams()
{
  createDiagrams.add(new ActionUseCaseDiagram());
  createDiagrams.add(new ActionClassDiagram());
  createDiagrams.add(new ActionSequenceDiagram());
  createDiagrams.add(new ActionCollaborationDiagram());
  createDiagrams.add(new ActionStateDiagram());
  createDiagrams.add(new ActionActivityDiagram());
  createDiagrams.add(new ActionDeploymentDiagram());
}


org.argouml.ui.explorer.ExplorerPopup.initMenuCreateModelElements()
{
  List targets=TargetManager.getInstance().getTargets();
  Set<JMenuItem> menuItems=new TreeSet<JMenuItem>();
  if (targets.size() >= 2) {
    boolean classifierRoleFound=false;
    boolean classifierRolesOnly=true;
    for (Iterator it=targets.iterator(); it.hasNext() && classifierRolesOnly; ) {
      if (Model.getFacade().isAClassifierRole(it.next())) {
        classifierRoleFound=true;
      }
 else {
        classifierRolesOnly=false;
      }
    }
    if (classifierRolesOnly) {
      menuItems.add(new OrderedMenuItem(new ActionCreateAssociationRole(Model.getMetaTypes().getAssociationRole(),targets)));
    }
 else     if (!classifierRoleFound) {
      boolean classifiersOnly=true;
      for (Iterator it=targets.iterator(); it.hasNext() && classifiersOnly; ) {
        if (!Model.getFacade().isAClassifier(it.next())) {
          classifiersOnly=false;
        }
      }
      if (classifiersOnly) {
        menuItems.add(new OrderedMenuItem(new ActionCreateAssociation(Model.getMetaTypes().getAssociation(),targets)));
      }
    }
  }
  if (targets.size() == 2) {
    addCreateModelElementAction(menuItems,Model.getMetaTypes().getDependency()," " + menuLocalize("menu.popup.depends-on") + " ");
    addCreateModelElementAction(menuItems,Model.getMetaTypes().getGeneralization()," " + menuLocalize("menu.popup.generalizes") + " ");
    addCreateModelElementAction(menuItems,Model.getMetaTypes().getInclude()," " + menuLocalize("menu.popup.includes") + " ");
    addCreateModelElementAction(menuItems,Model.getMetaTypes().getExtend()," " + menuLocalize("menu.popup.extends") + " ");
    addCreateModelElementAction(menuItems,Model.getMetaTypes().getPackageImport()," " + menuLocalize("menu.popup.has-permission-on") + " ");
    addCreateModelElementAction(menuItems,Model.getMetaTypes().getUsage()," " + menuLocalize("menu.popup.uses") + " ");
    addCreateModelElementAction(menuItems,Model.getMetaTypes().getAbstraction()," " + menuLocalize("menu.popup.realizes") + " ");
  }
 else   if (targets.size() == 1) {
    Object target=targets.get(0);
    for (int iter=0; iter < MODEL_ELEMENT_MENUITEMS.length; iter+=2) {
      if (Model.getUmlFactory().isContainmentValid(MODEL_ELEMENT_MENUITEMS[iter],target)) {
        menuItems.add(new OrderedMenuItem(new ActionCreateContainedModelElement(MODEL_ELEMENT_MENUITEMS[iter],target,(String)MODEL_ELEMENT_MENUITEMS[iter + 1])));
      }
    }
  }
  if (menuItems.size() == 1) {
    add(menuItems.iterator().next());
  }
 else   if (menuItems.size() > 1) {
    JMenu menu=new JMenu(menuLocalize("menu.popup.create-model-element"));
    add(menu);
    for (    JMenuItem item : menuItems) {
      menu.add(item);
    }
  }
}


org.argouml.ui.explorer.ExplorerPopup.addCreateModelElementAction(Set<JMenuItem>,Object,String)
{
  List targets=TargetManager.getInstance().getTargets();
  Object source=targets.get(0);
  Object dest=targets.get(1);
  JMenu subMenu=new OrderedMenu(menuLocalize("menu.popup.create") + " " + Model.getMetaTypes().getName(metaType));
  buildDirectionalCreateMenuItem(metaType,dest,source,relationshipDescr,subMenu);
  buildDirectionalCreateMenuItem(metaType,source,dest,relationshipDescr,subMenu);
  if (subMenu.getMenuComponents().length > 0) {
    menuItems.add(subMenu);
  }
}


org.argouml.ui.explorer.ExplorerPopup.buildDirectionalCreateMenuItem(Object,Object,Object,String,JMenu)
{
  if (Model.getUmlFactory().isConnectionValid(metaType,source,dest,true)) {
    JMenuItem menuItem=new JMenuItem(new ActionCreateEdgeModelElement(metaType,source,dest,relationshipDescr));
    if (menuItem != null) {
      menu.add(menuItem);
    }
  }
}


org.argouml.ui.explorer.ExplorerPopup.menuLocalize(String)
{
  return Translator.localize(key);
}


org.argouml.ui.explorer.ExplorerPopup.addMenuItemForBothEndsOf(Object)
{
  Collection coll=null;
  if (Model.getFacade().isAAssociation(edge) || Model.getFacade().isALink(edge)) {
    coll=Model.getFacade().getConnections(edge);
  }
 else   if (Model.getFacade().isAAbstraction(edge) || Model.getFacade().isADependency(edge)) {
    coll=new ArrayList();
    coll.addAll(Model.getFacade().getClients(edge));
    coll.addAll(Model.getFacade().getSuppliers(edge));
  }
 else   if (Model.getFacade().isAGeneralization(edge)) {
    coll=new ArrayList();
    Object parent=Model.getFacade().getGeneral(edge);
    coll.add(parent);
    coll.addAll(Model.getFacade().getChildren(parent));
  }
  if (coll == null) {
    return;
  }
  Iterator iter=coll.iterator();
  while (iter.hasNext()) {
    Object me=iter.next();
    if (me != null) {
      if (Model.getFacade().isAAssociationEnd(me)) {
        me=Model.getFacade().getType(me);
      }
      if (me != null) {
        String name=Model.getFacade().getName(me);
        if (name == null || name.length() == 0) {
          name="(anon element)";
        }
        Action action=new ActionAddExistingRelatedNode(menuLocalize("menu.popup.add-to-diagram") + ": " + name,me);
        this.add(action);
      }
    }
  }
}


org.argouml.ui.explorer.ExplorerPopup.ActionAddExistingRelatedNode.ActionAddExistingRelatedNode(String,Object)
{
  super(name,o);
  object=o;
}


org.argouml.ui.explorer.ExplorerPopup.ActionAddExistingRelatedNode.isEnabled()
{
  ArgoDiagram dia=ProjectManager.getManager().getCurrentProject().getActiveDiagram();
  if (dia == null)   return false;
  MutableGraphModel gm=(MutableGraphModel)dia.getGraphModel();
  return gm.canAddNode(object);
}


org.argouml.ui.explorer.ExplorerPopup.OrderedMenuItem.OrderedMenuItem(Action)
{
  super(action);
}


org.argouml.ui.explorer.ExplorerPopup.OrderedMenuItem.OrderedMenuItem(String)
{
  super(name);
  setName(name);
}


org.argouml.ui.explorer.ExplorerPopup.OrderedMenuItem.compareTo(Object)
{
  JMenuItem other=(JMenuItem)o;
  return toString().compareTo(other.toString());
}


org.argouml.ui.explorer.ExplorerPopup.OrderedMenu.OrderedMenu(String)
{
  super(name);
}


org.argouml.ui.explorer.ExplorerPopup.OrderedMenu.compareTo(Object)
{
  JMenuItem other=(JMenuItem)o;
  return toString().compareTo(other.toString());
}


org.argouml.ui.explorer.ExplorerPopup.ActionCreateAssociation.ActionCreateAssociation(Object,List)
{
  super(menuLocalize("menu.popup.create") + " " + Model.getMetaTypes().getName(theMetaType));
  this.metaType=theMetaType;
  this.classifiers=classifiersList;
}


org.argouml.ui.explorer.ExplorerPopup.ActionCreateAssociation.actionPerformed(ActionEvent)
{
  try {
    Object newElement=Model.getUmlFactory().buildConnection(metaType,classifiers.get(0),null,classifiers.get(1),null,null,null);
    for (int i=2; i < classifiers.size(); ++i) {
      Model.getUmlFactory().buildConnection(Model.getMetaTypes().getAssociationEnd(),newElement,null,classifiers.get(i),null,null,null);
    }
  }
 catch (  IllegalModelElementConnectionException e1) {
    LOG.error("Exception",e1);
  }
}


org.argouml.ui.explorer.ExplorerPopup.ActionCreateAssociationRole.ActionCreateAssociationRole(Object,List)
{
  super(menuLocalize("menu.popup.create") + " " + Model.getMetaTypes().getName(theMetaType));
  this.metaType=theMetaType;
  this.classifierRoles=classifierRolesList;
}


org.argouml.ui.explorer.ExplorerPopup.ActionCreateAssociationRole.actionPerformed(ActionEvent)
{
  try {
    Object newElement=Model.getUmlFactory().buildConnection(metaType,classifierRoles.get(0),null,classifierRoles.get(1),null,null,null);
    for (int i=2; i < classifierRoles.size(); ++i) {
      Model.getUmlFactory().buildConnection(Model.getMetaTypes().getAssociationEndRole(),newElement,null,classifierRoles.get(i),null,null,null);
    }
  }
 catch (  IllegalModelElementConnectionException e1) {
    LOG.error("Exception",e1);
  }
}


org.argouml.ui.explorer.ExplorerPopup.isRelatedToProfiles(Project,Object)
{
  boolean found=selectedItem instanceof ProfileConfiguration || selectedItem instanceof Profile || selectedItem instanceof ArgoDiagram|| selectedItem instanceof CrUML;
  if (Model.getFacade().isAUMLElement(selectedItem)) {
    if (!found) {
      for (      Profile profile : currentProject.getProfileConfiguration().getProfiles()) {
        Collection models;
        try {
          models=profile.getProfilePackages();
          for (          Object model : models) {
            if ((Model.getFacade().getRoot(selectedItem).equals(model))) {
              found=true;
              break;
            }
          }
        }
 catch (        ProfileException e) {
        }
      }
    }
  }
  return found;
}


-------------------------------------
ListOfCorpusMethodsPreviousVersion size: 19
ListOfCorpusMethodsCurrentVersion size: 19
Gold set methods: 
org.argouml.ui.explorer.ExplorerPopup.ExplorerPopup(Object,MouseEvent)
org.argouml.ui.explorer.ExplorerPopup.isRelatedToProfiles(Project,Object)

##########################################################

File Name and Type: A	trunk_src_argouml-app_src_org_argouml_ui_explorer_ActionManageProfiles.java
Reading file: DummyJavaFileForComparisonForAddedClasses.java
Reading file: TestCases/Input/ArgoUML/SVNFilesSideBySide/15248/trunk_src_argouml-app_src_org_argouml_ui_explorer_ActionManageProfiles.java.v15248
org.argouml.ui.explorer.ActionManageProfiles.ActionManageProfiles	0	
org.argouml.ui.explorer.ActionManageProfiles.actionPerformed	1	ActionEvent	
List of methods:
org.argouml.ui.explorer.ActionManageProfiles.ActionManageProfiles()
{
  super(Translator.localize("action.manage-profiles"),ResourceLoaderWrapper.lookupIcon("action.manage-profiles"));
  putValue(Action.SHORT_DESCRIPTION,Translator.localize("action.manage-profiles"));
}


org.argouml.ui.explorer.ActionManageProfiles.actionPerformed(ActionEvent)
{
  if (profilesTab == null) {
    Iterator iter=GUI.getInstance().getProjectSettingsTabs().iterator();
    while (iter.hasNext()) {
      GUISettingsTabInterface stp=(GUISettingsTabInterface)iter.next();
      if (stp instanceof ProjectSettingsTabProfile) {
        profilesTab=(ProjectSettingsTabProfile)stp;
      }
    }
  }
  if (dialog == null) {
    dialog=new ProjectSettingsDialog();
  }
  dialog.showDialog(profilesTab);
}


-------------------------------------
ListOfCorpusMethodsPreviousVersion size: 0
ListOfCorpusMethodsCurrentVersion size: 2
Gold set methods: 
org.argouml.ui.explorer.ActionManageProfiles.ActionManageProfiles()
org.argouml.ui.explorer.ActionManageProfiles.actionPerformed(ActionEvent)

##########################################################

File Name and Type: R	trunk_src_argouml-app_tests_org_argouml_profile_internal_ocl_TestCrOCL.java
Reading file: TestCases/Input/ArgoUML/SVNFilesSideBySide/15248/trunk_src_argouml-app_tests_org_argouml_profile_internal_ocl_TestCrOCL.java.vPrevious
org.argouml.profile.internal.ocl.TestCrOCL.setUp	0	
org.argouml.profile.internal.ocl.TestCrOCL.testPredicate	0	
List of methods:
org.argouml.profile.internal.ocl.TestCrOCL.setUp()
{
  super.setUp();
  InitializeModel.initializeDefault();
}


org.argouml.profile.internal.ocl.TestCrOCL.testPredicate()
{
  Object obj1=Model.getUseCasesFactory().createActor();
  Object obj2=Model.getActivityGraphsFactory().createPartition();
  String ocl="context Actor inv: 0 > 2";
  CrOCL cr=new CrOCL(ocl);
  assertEquals(cr.predicate2(obj1,Designer.theDesigner()),Critic.PROBLEM_FOUND);
  assertEquals(cr.predicate2(obj2,Designer.theDesigner()),Critic.NO_PROBLEM);
}


-------------------------------------
Reading file: TestCases/Input/ArgoUML/SVNFilesSideBySide/15248/trunk_src_argouml-app_tests_org_argouml_profile_internal_ocl_TestCrOCL.java.v15248
org.argouml.profile.internal.ocl.TestCrOCL.setUp	0	
org.argouml.profile.internal.ocl.TestCrOCL.testPredicate	0	
List of methods:
org.argouml.profile.internal.ocl.TestCrOCL.setUp()
{
  super.setUp();
  InitializeModel.initializeDefault();
}


org.argouml.profile.internal.ocl.TestCrOCL.testPredicate()
{
  Object obj1=Model.getUseCasesFactory().createActor();
  Object obj2=Model.getActivityGraphsFactory().createPartition();
  String ocl="context Actor inv: 0 > 2";
  CrOCL cr=new CrOCL(ocl);
  assertEquals(cr.predicate2(obj1,Designer.theDesigner()),Critic.PROBLEM_FOUND);
  assertEquals(cr.predicate2(obj2,Designer.theDesigner()),Critic.NO_PROBLEM);
}


-------------------------------------
ListOfCorpusMethodsPreviousVersion size: 2
ListOfCorpusMethodsCurrentVersion size: 2
Gold set methods: 

##########################################################

File Name and Type: R	trunk_src_argouml-app_tests_org_argouml_profile_internal_ocl_TestOclInterpreter.java
Reading file: TestCases/Input/ArgoUML/SVNFilesSideBySide/15248/trunk_src_argouml-app_tests_org_argouml_profile_internal_ocl_TestOclInterpreter.java.vPrevious
org.argouml.profile.internal.ocl.TestOclInterpreter.DefaultModelInterpreter.invokeFeature	5	HashMap<String,Object>	Object	String	String	Object[]	
org.argouml.profile.internal.ocl.TestOclInterpreter.setUp	0	
org.argouml.profile.internal.ocl.TestOclInterpreter.testApplicable	0	
org.argouml.profile.internal.ocl.TestOclInterpreter.testGetTriggers	0	
org.argouml.profile.internal.ocl.TestOclInterpreter.testCheckGeneral	0	
List of methods:
org.argouml.profile.internal.ocl.TestOclInterpreter.DefaultModelInterpreter.invokeFeature(HashMap<String,Object>,Object,String,String,Object[])
{
  return null;
}


org.argouml.profile.internal.ocl.TestOclInterpreter.setUp()
{
  super.setUp();
  InitializeModel.initializeDefault();
}


org.argouml.profile.internal.ocl.TestOclInterpreter.testApplicable()
{
  Object obj1=Model.getUseCasesFactory().createActor();
  Object obj2=Model.getActivityGraphsFactory().createPartition();
  String ocl="context Actor inv: 2 > 0";
  OclInterpreter interpreter=new OclInterpreter(ocl,new DefaultModelInterpreter());
  assertTrue(interpreter.applicable(obj1));
  assertFalse(interpreter.applicable(obj2));
}


org.argouml.profile.internal.ocl.TestOclInterpreter.testGetTriggers()
{
  String ocl="context Actor inv: 2 > 0";
  OclInterpreter interpreter=new OclInterpreter(ocl,new DefaultModelInterpreter());
  assertTrue(interpreter.getTriggers().contains("actor"));
}


org.argouml.profile.internal.ocl.TestOclInterpreter.testCheckGeneral()
{
  Object obj=Model.getUseCasesFactory().createActor();
  String ocl1="context Actor inv: 2 > 0";
  String ocl2="context Actor inv: 2 < 0";
  OclInterpreter interpreter1=new OclInterpreter(ocl1,new DefaultModelInterpreter());
  OclInterpreter interpreter2=new OclInterpreter(ocl2,new DefaultModelInterpreter());
  assertTrue(interpreter1.check(obj));
  assertFalse(interpreter2.check(obj));
}


-------------------------------------
Reading file: TestCases/Input/ArgoUML/SVNFilesSideBySide/15248/trunk_src_argouml-app_tests_org_argouml_profile_internal_ocl_TestOclInterpreter.java.v15248
org.argouml.profile.internal.ocl.TestOclInterpreter.DefaultModelInterpreter.invokeFeature	5	HashMap<String,Object>	Object	String	String	Object[]	
org.argouml.profile.internal.ocl.TestOclInterpreter.setUp	0	
org.argouml.profile.internal.ocl.TestOclInterpreter.testApplicable	0	
org.argouml.profile.internal.ocl.TestOclInterpreter.testGetTriggers	0	
org.argouml.profile.internal.ocl.TestOclInterpreter.testCheckGeneral	0	
List of methods:
org.argouml.profile.internal.ocl.TestOclInterpreter.DefaultModelInterpreter.invokeFeature(HashMap<String,Object>,Object,String,String,Object[])
{
  return null;
}


org.argouml.profile.internal.ocl.TestOclInterpreter.setUp()
{
  super.setUp();
  InitializeModel.initializeDefault();
}


org.argouml.profile.internal.ocl.TestOclInterpreter.testApplicable()
{
  Object obj1=Model.getUseCasesFactory().createActor();
  Object obj2=Model.getActivityGraphsFactory().createPartition();
  String ocl="context Actor inv: 2 > 0";
  OclInterpreter interpreter=new OclInterpreter(ocl,new DefaultModelInterpreter());
  assertTrue(interpreter.applicable(obj1));
  assertFalse(interpreter.applicable(obj2));
}


org.argouml.profile.internal.ocl.TestOclInterpreter.testGetTriggers()
{
  String ocl="context Actor inv: 2 > 0";
  OclInterpreter interpreter=new OclInterpreter(ocl,new DefaultModelInterpreter());
  assertTrue(interpreter.getTriggers().contains("actor"));
}


org.argouml.profile.internal.ocl.TestOclInterpreter.testCheckGeneral()
{
  Object obj=Model.getUseCasesFactory().createActor();
  String ocl1="context Actor inv: 2 > 0";
  String ocl2="context Actor inv: 2 < 0";
  OclInterpreter interpreter1=new OclInterpreter(ocl1,new DefaultModelInterpreter());
  OclInterpreter interpreter2=new OclInterpreter(ocl2,new DefaultModelInterpreter());
  assertTrue(interpreter1.check(obj));
  assertFalse(interpreter2.check(obj));
}


-------------------------------------
ListOfCorpusMethodsPreviousVersion size: 5
ListOfCorpusMethodsCurrentVersion size: 5
Gold set methods: 

##########################################################

File Name and Type: M	trunk_src_argouml-app_src_org_argouml_uml_cognitive_critics_InitCognitiveCritics.java
Reading file: TestCases/Input/ArgoUML/SVNFilesSideBySide/15248/trunk_src_argouml-app_src_org_argouml_uml_cognitive_critics_InitCognitiveCritics.java.vPrevious
org.argouml.uml.cognitive.critics.InitCognitiveCritics.init	0	
org.argouml.uml.cognitive.critics.InitCognitiveCritics.getProjectSettingsTabs	0	
org.argouml.uml.cognitive.critics.InitCognitiveCritics.getSettingsTabs	0	
org.argouml.uml.cognitive.critics.InitCognitiveCritics.getDetailsTabs	0	
List of methods:
org.argouml.uml.cognitive.critics.InitCognitiveCritics.init()
{
  Object modelCls=Model.getMetaTypes().getModel();
  Object packageCls=Model.getMetaTypes().getPackage();
  Object classCls=Model.getMetaTypes().getUMLClass();
  Object classifierCls=Model.getMetaTypes().getClassifier();
  Object interfaceCls=Model.getMetaTypes().getInterface();
  Object attrCls=Model.getMetaTypes().getAttribute();
  Object paramCls=Model.getMetaTypes().getParameter();
  Object operCls=Model.getMetaTypes().getOperation();
  Object assocCls=Model.getMetaTypes().getAssociation();
  Object assocEndCls=Model.getMetaTypes().getAssociationEnd();
  Object assocClassCls=Model.getMetaTypes().getAssociationClass();
  Object namespaceCls=Model.getMetaTypes().getNamespace();
  Object genElementCls=Model.getMetaTypes().getGeneralizableElement();
  Object genCls=Model.getMetaTypes().getGeneralization();
  Object datatypeCls=Model.getMetaTypes().getDataType();
  Object useCaseCls=Model.getMetaTypes().getUseCase();
  Object actorCls=Model.getMetaTypes().getActor();
  Object stateVertexCls=Model.getMetaTypes().getStateVertex();
  Object stateCls=Model.getMetaTypes().getState();
  Object compositieStateCls=Model.getMetaTypes().getCompositeState();
  Object synchStateCls=Model.getMetaTypes().getSynchState();
  Agency.register(crAssocNameConflict,namespaceCls);
  Agency.register(crAttrNameConflict,classifierCls);
  Agency.register(crOperNameConflict,classifierCls);
  Agency.register(crCircularAssocClass,assocClassCls);
  Agency.register(crCircularInheritance,genElementCls);
  Agency.register(crCircularComposition,classCls);
  Agency.register(crClassMustBeAbstract,classCls);
  Agency.register(crCrossNamespaceAssoc,assocCls);
  Agency.register(crDupParamName,operCls);
  Agency.register(crDupRoleNames,assocCls);
  Agency.register(crFinalSubclassed,classCls);
  Agency.register(crFinalSubclassed,interfaceCls);
  Agency.register(crIllegalGeneralization,genCls);
  Agency.register(crAlreadyRealizes,classCls);
  Agency.register(crInterfaceAllPublic,interfaceCls);
  Agency.register(crInterfaceOperOnly,interfaceCls);
  Agency.register(crMultipleAgg,assocCls);
  Agency.register(crUnnavigableAssoc,assocCls);
  Agency.register(crNWayAgg,assocCls);
  Agency.register(crNavFromInterface,assocCls);
  Agency.register(crNameConflictAC,assocClassCls);
  Agency.register(clsNaming,classCls);
  Agency.register(clsNaming,interfaceCls);
  Agency.register(clsNaming,actorCls);
  Agency.register(clsNaming,useCaseCls);
  Agency.register(crMissingClassName,modelCls);
  Agency.register(crMissingAttrName,attrCls);
  Agency.register(crMissingOperName,operCls);
  Agency.register(crMissingStateName,stateVertexCls);
  Agency.register(crNoInstanceVariables,classCls);
  Agency.register(crNoAssociations,classCls);
  Agency.register(crNoAssociations,actorCls);
  Agency.register(crNoAssociations,useCaseCls);
  Agency.register(crNoOperations,classCls);
  Agency.register(crNoOperations,interfaceCls);
  Agency.register(crCompoundConstructorNeeded,classCls);
  Agency.register(crEmptyPackage,packageCls);
  Agency.register(crNonAggDataType,datatypeCls);
  Agency.register(crUselessAbstract,classCls);
  Agency.register(crUselessInterface,interfaceCls);
  Agency.register(crDisambigStateName,stateCls);
  Agency.register(crNameConfusion,classifierCls);
  Agency.register(crNameConfusion,stateCls);
  Agency.register(crMergeClasses,classCls);
  Agency.register(crSubclassReference,classCls);
  Agency.register(crIllegalName,classCls);
  Agency.register(crIllegalName,interfaceCls);
  Agency.register(crIllegalName,assocCls);
  Agency.register(crIllegalName,operCls);
  Agency.register(crIllegalName,attrCls);
  Agency.register(crIllegalName,paramCls);
  Agency.register(crIllegalName,stateCls);
  Agency.register(crReservedName,classifierCls);
  Agency.register(crReservedName,operCls);
  Agency.register(crReservedName,attrCls);
  Agency.register(crReservedName,stateCls);
  Agency.register(crReservedName,assocCls);
  Agency.register(crTooManyAssoc,classCls);
  Agency.register(crTooManyAttr,classCls);
  Agency.register(crTooManyOper,classCls);
  Agency.register(crTooManyTransitions,stateVertexCls);
  Agency.register(crTooManyStates,compositieStateCls);
  Agency.register(crTooManyClasses,namespaceCls);
  Object pseudostateCls=Model.getMetaTypes().getPseudostate();
  Object transitionCls=Model.getMetaTypes().getTransition();
  Agency.register(noTrans1,stateVertexCls);
  Agency.register(noTrans2,stateVertexCls);
  Agency.register(crMultipleInitialStates,pseudostateCls);
  Agency.register(crNoInitialState,compositieStateCls);
  Agency.register(crNoTriggerOrGuard,transitionCls);
  Agency.register(crInvalidJoin,pseudostateCls);
  Agency.register(crInvalidFork,pseudostateCls);
  Agency.register(crInvalidBranch,pseudostateCls);
  Agency.register(crNoGuard,transitionCls);
  Agency.register(crUnconventionalOperName,operCls);
  Agency.register(crUnconventionalAttrName,attrCls);
  Agency.register(crUnconventionalClassName,classCls);
  Agency.register(crUnconventionalPackName,packageCls);
  Class deploymentDiagramCls=UMLDeploymentDiagram.class;
  Agency.register(crNodeInsideElement,deploymentDiagramCls);
  Agency.register(crNodeInstanceInsideElement,deploymentDiagramCls);
  Agency.register(crComponentWithoutNode,deploymentDiagramCls);
  Agency.register(crCompInstanceWithoutNode,deploymentDiagramCls);
  Agency.register(crClassWithoutComponent,deploymentDiagramCls);
  Agency.register(crInterfaceWithoutComponent,deploymentDiagramCls);
  Agency.register(crObjectWithoutComponent,deploymentDiagramCls);
  Agency.register(crWrongLinkEnds,deploymentDiagramCls);
  Agency.register(crInstanceWithoutClassifier,deploymentDiagramCls);
  Agency.register(crMultipleDeepHistoryStates,pseudostateCls);
  Agency.register(crMultipleShallowHistoryStates,pseudostateCls);
  Agency.register(crInvalidHistory,pseudostateCls);
  Agency.register(crInvalidSynch,synchStateCls);
  Agency.register(crInvalidJoinTriggerOrGuard,transitionCls);
  Agency.register(crInvalidForkTriggerOrGuard,transitionCls);
  Agency.register(crInvalidPseudoStateTrigger,transitionCls);
  Agency.register(crInvalidInitial,pseudostateCls);
  Agency.register(crForkOutgoingTransition,transitionCls);
  Agency.register(crJoinIncomingTransition,transitionCls);
  Class edgeCls=FigEdgeModelElement.class;
  Class diagramCls=UMLDiagram.class;
  Agency.register(crNodesOverlap,diagramCls);
  Agency.register(crZeroLengthEdge,edgeCls);
  Agency.register(crOppEndConflict,assocEndCls);
  Agency.register(new CrMultiComposite(),assocEndCls);
  Agency.register(new CrNameConflict(),namespaceCls);
  Agency.register(crAlreadyRealizes,classCls);
  Agency.register(new CrUtilityViolated(),classifierCls);
  Agency.register(new CrOppEndVsAttr(),classifierCls);
}


org.argouml.uml.cognitive.critics.InitCognitiveCritics.getProjectSettingsTabs()
{
  return Collections.emptyList();
}


org.argouml.uml.cognitive.critics.InitCognitiveCritics.getSettingsTabs()
{
  return Collections.emptyList();
}


org.argouml.uml.cognitive.critics.InitCognitiveCritics.getDetailsTabs()
{
  return Collections.emptyList();
}


-------------------------------------
Reading file: TestCases/Input/ArgoUML/SVNFilesSideBySide/15248/trunk_src_argouml-app_src_org_argouml_uml_cognitive_critics_InitCognitiveCritics.java.v15248
org.argouml.uml.cognitive.critics.InitCognitiveCritics.init	0	
org.argouml.uml.cognitive.critics.InitCognitiveCritics.getProjectSettingsTabs	0	
org.argouml.uml.cognitive.critics.InitCognitiveCritics.getSettingsTabs	0	
org.argouml.uml.cognitive.critics.InitCognitiveCritics.getDetailsTabs	0	
List of methods:
org.argouml.uml.cognitive.critics.InitCognitiveCritics.init()
{
}


org.argouml.uml.cognitive.critics.InitCognitiveCritics.getProjectSettingsTabs()
{
  return Collections.emptyList();
}


org.argouml.uml.cognitive.critics.InitCognitiveCritics.getSettingsTabs()
{
  return Collections.emptyList();
}


org.argouml.uml.cognitive.critics.InitCognitiveCritics.getDetailsTabs()
{
  return Collections.emptyList();
}


-------------------------------------
ListOfCorpusMethodsPreviousVersion size: 4
ListOfCorpusMethodsCurrentVersion size: 4
Gold set methods: 
org.argouml.uml.cognitive.critics.InitCognitiveCritics.init()

##########################################################

File Name and Type: M	trunk_src_argouml-app_src_org_argouml_profile_internal_ProfileManagerImpl.java
Reading file: TestCases/Input/ArgoUML/SVNFilesSideBySide/15248/trunk_src_argouml-app_src_org_argouml_profile_internal_ProfileManagerImpl.java.vPrevious
org.argouml.profile.internal.ProfileManagerImpl.ProfileManagerImpl	0	
org.argouml.profile.internal.ProfileManagerImpl.loadDefaultProfilesfromConfiguration	0	
org.argouml.profile.internal.ProfileManagerImpl.updateDefaultProfilesConfiguration	0	
org.argouml.profile.internal.ProfileManagerImpl.loadDirectoriesFromConfiguration	0	
org.argouml.profile.internal.ProfileManagerImpl.updateSearchDirectoriesConfiguration	0	
org.argouml.profile.internal.ProfileManagerImpl.getRegisteredProfiles	0	
org.argouml.profile.internal.ProfileManagerImpl.registerProfile	1	Profile	
org.argouml.profile.internal.ProfileManagerImpl.removeProfile	1	Profile	
org.argouml.profile.internal.ProfileManagerImpl.getProfileForClass	1	String	
org.argouml.profile.internal.ProfileManagerImpl.addToDefaultProfiles	1	Profile	
org.argouml.profile.internal.ProfileManagerImpl.getDefaultProfiles	0	
org.argouml.profile.internal.ProfileManagerImpl.removeFromDefaultProfiles	1	Profile	
org.argouml.profile.internal.ProfileManagerImpl.addSearchPathDirectory	1	String	
org.argouml.profile.internal.ProfileManagerImpl.getSearchPathDirectories	0	
org.argouml.profile.internal.ProfileManagerImpl.removeSearchPathDirectory	1	String	
org.argouml.profile.internal.ProfileManagerImpl.refreshRegisteredProfiles	0	
org.argouml.profile.internal.ProfileManagerImpl.findUserDefinedProfile	1	File	
org.argouml.profile.internal.ProfileManagerImpl.getUMLProfile	0	
List of methods:
org.argouml.profile.internal.ProfileManagerImpl.ProfileManagerImpl()
{
  try {
    Profile uml=new ProfileUML();
    defaultProfiles.add(uml);
    registerProfile(uml);
    registerProfile(new ProfileJava(uml));
    registerProfile(new ProfileMeta());
  }
 catch (  ProfileException e) {
    throw new RuntimeException(e);
  }
  loadDirectoriesFromConfiguration();
  refreshRegisteredProfiles();
  loadDefaultProfilesfromConfiguration();
}


org.argouml.profile.internal.ProfileManagerImpl.loadDefaultProfilesfromConfiguration()
{
  disableConfigurationUpdate=true;
  StringTokenizer tokenizer=new StringTokenizer(Configuration.getString(KEY_DEFAULT_PROFILES),DIRECTORY_SEPARATOR,false);
  while (tokenizer.hasMoreTokens()) {
    String desc=tokenizer.nextToken();
    Profile p=null;
    if (desc.charAt(0) == 'U') {
      String fileName=desc.substring(1);
      p=findUserDefinedProfile(new File(fileName));
    }
 else     if (desc.charAt(0) == 'C') {
      String className=desc.substring(1);
      p=getProfileForClass(className);
    }
    if (p != null) {
      addToDefaultProfiles(p);
    }
  }
  disableConfigurationUpdate=false;
}


org.argouml.profile.internal.ProfileManagerImpl.updateDefaultProfilesConfiguration()
{
  if (!disableConfigurationUpdate) {
    StringBuffer buf=new StringBuffer();
    for (    Profile p : defaultProfiles) {
      if (p instanceof UserDefinedProfile) {
        buf.append("U" + ((UserDefinedProfile)p).getModelFile().getAbsolutePath());
      }
 else {
        buf.append("C" + p.getClass().getName());
      }
      buf.append(DIRECTORY_SEPARATOR);
    }
    Configuration.setString(KEY_DEFAULT_PROFILES,buf.toString());
  }
}


org.argouml.profile.internal.ProfileManagerImpl.loadDirectoriesFromConfiguration()
{
  disableConfigurationUpdate=true;
  StringTokenizer tokenizer=new StringTokenizer(Configuration.getString(KEY_DEFAULT_DIRECTORIES),DIRECTORY_SEPARATOR,false);
  while (tokenizer.hasMoreTokens()) {
    searchDirectories.add(tokenizer.nextToken());
  }
  disableConfigurationUpdate=false;
}


org.argouml.profile.internal.ProfileManagerImpl.updateSearchDirectoriesConfiguration()
{
  if (!disableConfigurationUpdate) {
    StringBuffer buf=new StringBuffer();
    for (    String s : searchDirectories) {
      buf.append(s).append(DIRECTORY_SEPARATOR);
    }
    Configuration.setString(KEY_DEFAULT_DIRECTORIES,buf.toString());
  }
}


org.argouml.profile.internal.ProfileManagerImpl.getRegisteredProfiles()
{
  return profiles;
}


org.argouml.profile.internal.ProfileManagerImpl.registerProfile(Profile)
{
  if (p != null && !profiles.contains(p)) {
    if (p instanceof UserDefinedProfile || getProfileForClass(p.getClass().getName()) == null) {
      profiles.add(p);
      loadDefaultProfilesfromConfiguration();
    }
  }
}


org.argouml.profile.internal.ProfileManagerImpl.removeProfile(Profile)
{
  if (p != null) {
    profiles.remove(p);
    defaultProfiles.remove(p);
  }
}


org.argouml.profile.internal.ProfileManagerImpl.getProfileForClass(String)
{
  Profile found=null;
  for (  Profile p : profiles) {
    if (p.getClass().getName().equals(profileClass)) {
      found=p;
      break;
    }
  }
  return found;
}


org.argouml.profile.internal.ProfileManagerImpl.addToDefaultProfiles(Profile)
{
  if (p != null && profiles.contains(p) && !defaultProfiles.contains(p)) {
    defaultProfiles.add(p);
    updateDefaultProfilesConfiguration();
  }
}


org.argouml.profile.internal.ProfileManagerImpl.getDefaultProfiles()
{
  return Collections.unmodifiableList(defaultProfiles);
}


org.argouml.profile.internal.ProfileManagerImpl.removeFromDefaultProfiles(Profile)
{
  if (p != null && profiles.contains(p)) {
    defaultProfiles.remove(p);
    updateDefaultProfilesConfiguration();
  }
}


org.argouml.profile.internal.ProfileManagerImpl.addSearchPathDirectory(String)
{
  if (path != null && !searchDirectories.contains(path)) {
    searchDirectories.add(path);
    updateSearchDirectoriesConfiguration();
    try {
      Model.getXmiReader().addSearchPath(path);
    }
 catch (    UmlException e) {
      LOG.error("Couldn't retrive XMI Reader from Model.",e);
    }
  }
}


org.argouml.profile.internal.ProfileManagerImpl.getSearchPathDirectories()
{
  return Collections.unmodifiableList(searchDirectories);
}


org.argouml.profile.internal.ProfileManagerImpl.removeSearchPathDirectory(String)
{
  if (path != null) {
    searchDirectories.remove(path);
    updateSearchDirectoriesConfiguration();
    try {
      Model.getXmiReader().removeSearchPath(path);
    }
 catch (    UmlException e) {
      LOG.error("Couldn't retrive XMI Reader from Model.",e);
    }
  }
}


org.argouml.profile.internal.ProfileManagerImpl.refreshRegisteredProfiles()
{
  for (  String dirName : searchDirectories) {
    File dir=new File(dirName);
    if (dir.exists()) {
      for (      File file : dir.listFiles()) {
        if (file.getName().toLowerCase().endsWith(".xmi")) {
          boolean found=findUserDefinedProfile(file) != null;
          if (!found) {
            UserDefinedProfile udp=null;
            try {
              udp=new UserDefinedProfile(file);
              registerProfile(udp);
            }
 catch (            ProfileException e) {
              LOG.warn("Failed to load user defined profile " + file.getAbsolutePath() + ".",e);
            }
          }
        }
      }
    }
  }
}


org.argouml.profile.internal.ProfileManagerImpl.findUserDefinedProfile(File)
{
  for (  Profile p : profiles) {
    if (p instanceof UserDefinedProfile) {
      UserDefinedProfile udp=(UserDefinedProfile)p;
      if (udp.getModelFile().equals(file)) {
        return udp;
      }
    }
  }
  return null;
}


org.argouml.profile.internal.ProfileManagerImpl.getUMLProfile()
{
  for (  Profile p : getRegisteredProfiles())   if (p.getDisplayName() != null && p.getDisplayName().contains("UML"))   return p;
  Profile p=null;
  try {
    p=new ProfileUML();
  }
 catch (  ProfileException e) {
    throw new RuntimeException(e);
  }
  return p;
}


-------------------------------------
Reading file: TestCases/Input/ArgoUML/SVNFilesSideBySide/15248/trunk_src_argouml-app_src_org_argouml_profile_internal_ProfileManagerImpl.java.v15248
org.argouml.profile.internal.ProfileManagerImpl.ProfileManagerImpl	0	
org.argouml.profile.internal.ProfileManagerImpl.loadDefaultProfilesfromConfiguration	0	
org.argouml.profile.internal.ProfileManagerImpl.updateDefaultProfilesConfiguration	0	
org.argouml.profile.internal.ProfileManagerImpl.loadDirectoriesFromConfiguration	0	
org.argouml.profile.internal.ProfileManagerImpl.updateSearchDirectoriesConfiguration	0	
org.argouml.profile.internal.ProfileManagerImpl.getRegisteredProfiles	0	
org.argouml.profile.internal.ProfileManagerImpl.registerProfile	1	Profile	
org.argouml.profile.internal.ProfileManagerImpl.removeProfile	1	Profile	
org.argouml.profile.internal.ProfileManagerImpl.getProfileForClass	1	String	
org.argouml.profile.internal.ProfileManagerImpl.addToDefaultProfiles	1	Profile	
org.argouml.profile.internal.ProfileManagerImpl.getDefaultProfiles	0	
org.argouml.profile.internal.ProfileManagerImpl.removeFromDefaultProfiles	1	Profile	
org.argouml.profile.internal.ProfileManagerImpl.addSearchPathDirectory	1	String	
org.argouml.profile.internal.ProfileManagerImpl.getSearchPathDirectories	0	
org.argouml.profile.internal.ProfileManagerImpl.removeSearchPathDirectory	1	String	
org.argouml.profile.internal.ProfileManagerImpl.refreshRegisteredProfiles	0	
org.argouml.profile.internal.ProfileManagerImpl.findUserDefinedProfile	1	File	
org.argouml.profile.internal.ProfileManagerImpl.getUMLProfile	0	
org.argouml.profile.internal.ProfileManagerImpl.lookForRegisteredProfile	1	String	
List of methods:
org.argouml.profile.internal.ProfileManagerImpl.ProfileManagerImpl()
{
  try {
    Profile uml=new ProfileUML();
    defaultProfiles.add(uml);
    registerProfile(uml);
    registerProfile(new ProfileJava(uml));
    registerProfile(new ProfileMeta());
  }
 catch (  ProfileException e) {
    throw new RuntimeException(e);
  }
  loadDirectoriesFromConfiguration();
  refreshRegisteredProfiles();
  loadDefaultProfilesfromConfiguration();
}


org.argouml.profile.internal.ProfileManagerImpl.loadDefaultProfilesfromConfiguration()
{
  disableConfigurationUpdate=true;
  StringTokenizer tokenizer=new StringTokenizer(Configuration.getString(KEY_DEFAULT_PROFILES),DIRECTORY_SEPARATOR,false);
  while (tokenizer.hasMoreTokens()) {
    String desc=tokenizer.nextToken();
    Profile p=null;
    if (desc.charAt(0) == 'U') {
      String fileName=desc.substring(1);
      p=findUserDefinedProfile(new File(fileName));
    }
 else     if (desc.charAt(0) == 'C') {
      String className=desc.substring(1);
      p=getProfileForClass(className);
    }
    if (p != null) {
      addToDefaultProfiles(p);
    }
  }
  disableConfigurationUpdate=false;
}


org.argouml.profile.internal.ProfileManagerImpl.updateDefaultProfilesConfiguration()
{
  if (!disableConfigurationUpdate) {
    StringBuffer buf=new StringBuffer();
    for (    Profile p : defaultProfiles) {
      if (p instanceof UserDefinedProfile) {
        buf.append("U" + ((UserDefinedProfile)p).getModelFile().getAbsolutePath());
      }
 else {
        buf.append("C" + p.getClass().getName());
      }
      buf.append(DIRECTORY_SEPARATOR);
    }
    Configuration.setString(KEY_DEFAULT_PROFILES,buf.toString());
  }
}


org.argouml.profile.internal.ProfileManagerImpl.loadDirectoriesFromConfiguration()
{
  disableConfigurationUpdate=true;
  StringTokenizer tokenizer=new StringTokenizer(Configuration.getString(KEY_DEFAULT_DIRECTORIES),DIRECTORY_SEPARATOR,false);
  while (tokenizer.hasMoreTokens()) {
    searchDirectories.add(tokenizer.nextToken());
  }
  disableConfigurationUpdate=false;
}


org.argouml.profile.internal.ProfileManagerImpl.updateSearchDirectoriesConfiguration()
{
  if (!disableConfigurationUpdate) {
    StringBuffer buf=new StringBuffer();
    for (    String s : searchDirectories) {
      buf.append(s).append(DIRECTORY_SEPARATOR);
    }
    Configuration.setString(KEY_DEFAULT_DIRECTORIES,buf.toString());
  }
}


org.argouml.profile.internal.ProfileManagerImpl.getRegisteredProfiles()
{
  return profiles;
}


org.argouml.profile.internal.ProfileManagerImpl.registerProfile(Profile)
{
  if (p != null && !profiles.contains(p)) {
    if (p instanceof UserDefinedProfile || getProfileForClass(p.getClass().getName()) == null) {
      profiles.add(p);
      for (      CrUML critic : p.getCritics()) {
        for (        Object meta : critic.getCriticizedMetatypes()) {
          Agency.register(critic,meta);
        }
        critic.setEnabled(false);
      }
      loadDefaultProfilesfromConfiguration();
    }
  }
}


org.argouml.profile.internal.ProfileManagerImpl.removeProfile(Profile)
{
  if (p != null) {
    profiles.remove(p);
    defaultProfiles.remove(p);
  }
}


org.argouml.profile.internal.ProfileManagerImpl.getProfileForClass(String)
{
  Profile found=null;
  for (  Profile p : profiles) {
    if (p.getClass().getName().equals(profileClass)) {
      found=p;
      break;
    }
  }
  return found;
}


org.argouml.profile.internal.ProfileManagerImpl.addToDefaultProfiles(Profile)
{
  if (p != null && profiles.contains(p) && !defaultProfiles.contains(p)) {
    defaultProfiles.add(p);
    updateDefaultProfilesConfiguration();
  }
}


org.argouml.profile.internal.ProfileManagerImpl.getDefaultProfiles()
{
  return Collections.unmodifiableList(defaultProfiles);
}


org.argouml.profile.internal.ProfileManagerImpl.removeFromDefaultProfiles(Profile)
{
  if (p != null && profiles.contains(p)) {
    defaultProfiles.remove(p);
    updateDefaultProfilesConfiguration();
  }
}


org.argouml.profile.internal.ProfileManagerImpl.addSearchPathDirectory(String)
{
  if (path != null && !searchDirectories.contains(path)) {
    searchDirectories.add(path);
    updateSearchDirectoriesConfiguration();
    try {
      Model.getXmiReader().addSearchPath(path);
    }
 catch (    UmlException e) {
      LOG.error("Couldn't retrive XMI Reader from Model.",e);
    }
  }
}


org.argouml.profile.internal.ProfileManagerImpl.getSearchPathDirectories()
{
  return Collections.unmodifiableList(searchDirectories);
}


org.argouml.profile.internal.ProfileManagerImpl.removeSearchPathDirectory(String)
{
  if (path != null) {
    searchDirectories.remove(path);
    updateSearchDirectoriesConfiguration();
    try {
      Model.getXmiReader().removeSearchPath(path);
    }
 catch (    UmlException e) {
      LOG.error("Couldn't retrive XMI Reader from Model.",e);
    }
  }
}


org.argouml.profile.internal.ProfileManagerImpl.refreshRegisteredProfiles()
{
  for (  String dirName : searchDirectories) {
    File dir=new File(dirName);
    if (dir.exists()) {
      for (      File file : dir.listFiles()) {
        if (file.getName().toLowerCase().endsWith(".xmi")) {
          boolean found=findUserDefinedProfile(file) != null;
          if (!found) {
            UserDefinedProfile udp=null;
            try {
              udp=new UserDefinedProfile(file);
              registerProfile(udp);
            }
 catch (            ProfileException e) {
              LOG.warn("Failed to load user defined profile " + file.getAbsolutePath() + ".",e);
            }
          }
        }
      }
    }
  }
}


org.argouml.profile.internal.ProfileManagerImpl.findUserDefinedProfile(File)
{
  for (  Profile p : profiles) {
    if (p instanceof UserDefinedProfile) {
      UserDefinedProfile udp=(UserDefinedProfile)p;
      if (udp.getModelFile().equals(file)) {
        return udp;
      }
    }
  }
  return null;
}


org.argouml.profile.internal.ProfileManagerImpl.getUMLProfile()
{
  for (  Profile p : getRegisteredProfiles())   if (p.getDisplayName() != null && p.getDisplayName().contains("UML"))   return p;
  Profile p=null;
  try {
    p=new ProfileUML();
  }
 catch (  ProfileException e) {
    throw new RuntimeException(e);
  }
  return p;
}


org.argouml.profile.internal.ProfileManagerImpl.lookForRegisteredProfile(String)
{
  List<Profile> registeredProfiles=getRegisteredProfiles();
  for (  Profile profile : registeredProfiles) {
    if (profile.getDisplayName().equalsIgnoreCase(value)) {
      return profile;
    }
  }
  return null;
}


-------------------------------------
ListOfCorpusMethodsPreviousVersion size: 18
ListOfCorpusMethodsCurrentVersion size: 19
Gold set methods: 
org.argouml.profile.internal.ProfileManagerImpl.registerProfile(Profile)
org.argouml.profile.internal.ProfileManagerImpl.lookForRegisteredProfile(String)

##########################################################

File Name and Type: M	trunk_src_argouml-app_src_org_argouml_profile_UserDefinedProfile.java
Reading file: TestCases/Input/ArgoUML/SVNFilesSideBySide/15248/trunk_src_argouml-app_src_org_argouml_profile_UserDefinedProfile.java.vPrevious
org.argouml.profile.UserDefinedProfile.UserDefinedProfile	1	File	
org.argouml.profile.UserDefinedProfile.UserDefinedProfile	2	String	Reader	
org.argouml.profile.UserDefinedProfile.UserDefinedProfile	1	URL	
org.argouml.profile.UserDefinedProfile.completeLoading	0	
org.argouml.profile.UserDefinedProfile.lookForRegisteredProfile	1	String	
org.argouml.profile.UserDefinedProfile.getDisplayName	0	
org.argouml.profile.UserDefinedProfile.getFormatingStrategy	0	
org.argouml.profile.UserDefinedProfile.getFigureStrategy	0	
org.argouml.profile.UserDefinedProfile.getModelFile	0	
org.argouml.profile.UserDefinedProfile.toString	0	
org.argouml.profile.UserDefinedProfile.getProfilePackages	0	
List of methods:
org.argouml.profile.UserDefinedProfile.UserDefinedProfile(File)
{
  displayName=file.getName();
  modelFile=file;
  ProfileReference reference=null;
  try {
    reference=new UserProfileReference(file.getPath());
  }
 catch (  MalformedURLException e) {
    throw new ProfileException("Failed to create the ProfileReference.",e);
  }
  profilePackages=new FileModelLoader().loadModel(reference);
  fromZargo=false;
  completeLoading();
}


org.argouml.profile.UserDefinedProfile.UserDefinedProfile(String,Reader)
{
  displayName=fileName;
  ProfileReference reference=null;
  try {
    reference=new UserProfileReference(fileName);
  }
 catch (  MalformedURLException e) {
    throw new ProfileException("Failed to create the ProfileReference.",e);
  }
  profilePackages=new ReaderModelLoader(reader).loadModel(reference);
  fromZargo=true;
  completeLoading();
}


org.argouml.profile.UserDefinedProfile.UserDefinedProfile(URL)
{
  ProfileReference reference=new UserProfileReference(url.getPath(),url);
  profilePackages=new URLModelLoader().loadModel(reference);
  fromZargo=false;
  completeLoading();
}


org.argouml.profile.UserDefinedProfile.completeLoading()
{
  for (  Object obj : profilePackages) {
    if (Model.getExtensionMechanismsHelper().hasStereotype(obj,"profile")) {
      String name=Model.getFacade().getName(obj);
      if (name != null) {
        displayName=name;
      }
      String dep=Model.getFacade().getTaggedValueValue(obj,"Dependency");
      StringTokenizer st=new StringTokenizer(dep," ,;:");
      String prof=null;
      while (st.hasMoreTokens()) {
        prof=st.nextToken();
        if (prof != null) {
          this.addProfileDependency(lookForRegisteredProfile(prof));
        }
      }
    }
  }
}


org.argouml.profile.UserDefinedProfile.lookForRegisteredProfile(String)
{
  ProfileManager man=ProfileFacade.getManager();
  List<Profile> regs=man.getRegisteredProfiles();
  for (  Profile profile : regs) {
    if (profile.getDisplayName().equalsIgnoreCase(name)) {
      return profile;
    }
  }
  return null;
}


org.argouml.profile.UserDefinedProfile.getDisplayName()
{
  return displayName + (fromZargo ? "*" : "");
}


org.argouml.profile.UserDefinedProfile.getFormatingStrategy()
{
  return null;
}


org.argouml.profile.UserDefinedProfile.getFigureStrategy()
{
  return null;
}


org.argouml.profile.UserDefinedProfile.getModelFile()
{
  return modelFile;
}


org.argouml.profile.UserDefinedProfile.toString()
{
  return super.toString() + " [" + getModelFile()+ "]";
}


org.argouml.profile.UserDefinedProfile.getProfilePackages()
{
  return profilePackages;
}


-------------------------------------
Reading file: TestCases/Input/ArgoUML/SVNFilesSideBySide/15248/trunk_src_argouml-app_src_org_argouml_profile_UserDefinedProfile.java.v15248
org.argouml.profile.UserDefinedProfile.UserDefinedFigNodeStrategy.getIconForStereotype	1	Object	
org.argouml.profile.UserDefinedProfile.UserDefinedFigNodeStrategy.addDesrciptor	1	FigNodeDescriptor	
org.argouml.profile.UserDefinedProfile.FigNodeDescriptor.isValid	0	
org.argouml.profile.UserDefinedProfile.UserDefinedProfile	1	File	
org.argouml.profile.UserDefinedProfile.UserDefinedProfile	1	URL	
org.argouml.profile.UserDefinedProfile.UserDefinedProfile	4	String	URL	Set<CrUML>	Set<Profile>	
org.argouml.profile.UserDefinedProfile.finishLoading	0	
org.argouml.profile.UserDefinedProfile.generateCriticFromComment	1	Object	
org.argouml.profile.UserDefinedProfile.getAllCritiquesInModel	0	
org.argouml.profile.UserDefinedProfile.getAllCommentsInModel	1	Collection	
org.argouml.profile.UserDefinedProfile.getDisplayName	0	
org.argouml.profile.UserDefinedProfile.getFormatingStrategy	0	
org.argouml.profile.UserDefinedProfile.getFigureStrategy	0	
org.argouml.profile.UserDefinedProfile.getModelFile	0	
org.argouml.profile.UserDefinedProfile.toString	0	
org.argouml.profile.UserDefinedProfile.getProfilePackages	0	
org.argouml.profile.UserDefinedProfile.loadImage	2	String	File	
List of methods:
org.argouml.profile.UserDefinedProfile.UserDefinedFigNodeStrategy.getIconForStereotype(Object)
{
  return images.get(Model.getFacade().getName(stereotype));
}


org.argouml.profile.UserDefinedProfile.UserDefinedFigNodeStrategy.addDesrciptor(FigNodeDescriptor)
{
  images.put(fnd.stereotype,fnd.img);
}


org.argouml.profile.UserDefinedProfile.FigNodeDescriptor.isValid()
{
  return stereotype != null && src != null && length > 0;
}


org.argouml.profile.UserDefinedProfile.UserDefinedProfile(File)
{
  LOG.info("load " + file);
  displayName=file.getName();
  modelFile=file;
  ProfileReference reference=null;
  try {
    reference=new UserProfileReference(file.getPath());
  }
 catch (  MalformedURLException e) {
    throw new ProfileException("Failed to create the ProfileReference.",e);
  }
  profilePackages=new FileModelLoader().loadModel(reference);
  finishLoading();
}


org.argouml.profile.UserDefinedProfile.UserDefinedProfile(URL)
{
  LOG.info("load " + url);
  ProfileReference reference=null;
  reference=new UserProfileReference(url.getPath(),url);
  profilePackages=new URLModelLoader().loadModel(reference);
  finishLoading();
}


org.argouml.profile.UserDefinedProfile.UserDefinedProfile(String,URL,Set<CrUML>,Set<Profile>)
{
  LOG.info("load " + url);
  this.displayName=displayName;
  if (url != null) {
    ProfileReference reference=null;
    reference=new UserProfileReference(url.getPath(),url);
    profilePackages=new URLModelLoader().loadModel(reference);
  }
 else {
    profilePackages=new ArrayList(0);
  }
  this.critics=critics;
  for (  Profile profile : dependencies) {
    addProfileDependency(profile);
  }
  finishLoading();
}


org.argouml.profile.UserDefinedProfile.finishLoading()
{
  for (  Object obj : profilePackages) {
    if (Model.getExtensionMechanismsHelper().hasStereotype(obj,"profile")) {
      String name=Model.getFacade().getName(obj);
      if (name != null) {
        displayName=name;
      }
 else {
        if (displayName == null) {
          displayName=Translator.localize("misc.profile.unnamed");
        }
      }
      LOG.info("profile " + displayName);
      String dependencyListStr=Model.getFacade().getTaggedValueValue(obj,"Dependency");
      StringTokenizer st=new StringTokenizer(dependencyListStr," ,;:");
      String profile=null;
      while (st.hasMoreTokens()) {
        profile=st.nextToken();
        if (profile != null) {
          LOG.debug("AddingDependency " + profile);
          this.addProfileDependency(ProfileFacade.getManager().lookForRegisteredProfile(profile));
        }
      }
    }
  }
  Collection allStereotypes=Model.getExtensionMechanismsHelper().getStereotypes(profilePackages);
  for (  Object stereotype : allStereotypes) {
    Collection tags=Model.getFacade().getTaggedValuesCollection(stereotype);
    for (    Object tag : tags) {
      if (Model.getFacade().getTag(tag).toLowerCase().equals("figure")) {
        LOG.debug("AddFigNode " + Model.getFacade().getName(stereotype));
        String value=Model.getFacade().getValueOfTag(tag);
        File f=new File(value);
        FigNodeDescriptor fnd=null;
        try {
          fnd=loadImage(Model.getFacade().getName(stereotype).toString(),f);
          figNodeStrategy.addDesrciptor(fnd);
        }
 catch (        IOException e) {
          LOG.error("Error loading FigNode",e);
        }
      }
    }
  }
  Vector<CrUML> allCritiques=getAllCritiquesInModel();
  for (  CrUML critique : allCritiques) {
    this.critics.add(critique);
  }
}


org.argouml.profile.UserDefinedProfile.generateCriticFromComment(Object)
{
  String ocl="" + Model.getFacade().getBody(critique);
  String headline=null;
  Collection tags=Model.getFacade().getTaggedValuesCollection(critique);
  for (  Object tag : tags) {
    if (Model.getFacade().getTag(tag).toLowerCase().equals("headline")) {
      headline=Model.getFacade().getValueOfTag(tag);
    }
  }
  LOG.debug("OCL-Critic: " + ocl);
  if (headline == null) {
    return new CrOCL(ocl);
  }
 else {
    return new CrOCL(ocl,headline);
  }
}


org.argouml.profile.UserDefinedProfile.getAllCritiquesInModel()
{
  Vector<CrUML> ret=new Vector();
  Collection comments=getAllCommentsInModel(profilePackages);
  for (  Object comment : comments) {
    if (Model.getExtensionMechanismsHelper().hasStereotype(comment,"Critic")) {
      CrUML cr=generateCriticFromComment(comment);
      if (cr != null) {
        ret.add(cr);
      }
    }
  }
  return ret;
}


org.argouml.profile.UserDefinedProfile.getAllCommentsInModel(Collection)
{
  Collection col=new Vector<Object>();
  for (  Object obj : objs) {
    if (Model.getFacade().isAComment(obj)) {
      col.add(obj);
    }
 else     if (Model.getFacade().isANamespace(obj)) {
      Collection contents=Model.getModelManagementHelper().getAllContents(obj);
      if (contents != null) {
        col.addAll(contents);
      }
    }
  }
  return col;
}


org.argouml.profile.UserDefinedProfile.getDisplayName()
{
  return displayName;
}


org.argouml.profile.UserDefinedProfile.getFormatingStrategy()
{
  return null;
}


org.argouml.profile.UserDefinedProfile.getFigureStrategy()
{
  return figNodeStrategy;
}


org.argouml.profile.UserDefinedProfile.getModelFile()
{
  return modelFile;
}


org.argouml.profile.UserDefinedProfile.toString()
{
  File str=getModelFile();
  return super.toString() + (str != null ? " [" + str + "]" : "");
}


org.argouml.profile.UserDefinedProfile.getProfilePackages()
{
  return profilePackages;
}


org.argouml.profile.UserDefinedProfile.loadImage(String,File)
{
  FigNodeDescriptor descriptor=new FigNodeDescriptor();
  descriptor.length=(int)f.length();
  descriptor.src=f.getPath();
  descriptor.stereotype=stereotype;
  BufferedInputStream bis=new BufferedInputStream(new FileInputStream(f));
  byte[] buf=new byte[descriptor.length];
  try {
    bis.read(buf);
  }
 catch (  IOException e) {
    e.printStackTrace();
  }
  descriptor.img=new ImageIcon(buf).getImage();
  return descriptor;
}


-------------------------------------
ListOfCorpusMethodsPreviousVersion size: 11
ListOfCorpusMethodsCurrentVersion size: 17
Gold set methods: 
org.argouml.profile.UserDefinedProfile.UserDefinedFigNodeStrategy.getIconForStereotype(Object)
org.argouml.profile.UserDefinedProfile.UserDefinedFigNodeStrategy.addDesrciptor(FigNodeDescriptor)
org.argouml.profile.UserDefinedProfile.FigNodeDescriptor.isValid()
org.argouml.profile.UserDefinedProfile.UserDefinedProfile(File)
org.argouml.profile.UserDefinedProfile.UserDefinedProfile(URL)
org.argouml.profile.UserDefinedProfile.UserDefinedProfile(String,URL,Set<CrUML>,Set<Profile>)
org.argouml.profile.UserDefinedProfile.finishLoading()
org.argouml.profile.UserDefinedProfile.generateCriticFromComment(Object)
org.argouml.profile.UserDefinedProfile.getAllCritiquesInModel()
org.argouml.profile.UserDefinedProfile.getAllCommentsInModel(Collection)
org.argouml.profile.UserDefinedProfile.getDisplayName()
org.argouml.profile.UserDefinedProfile.getFigureStrategy()
org.argouml.profile.UserDefinedProfile.toString()
org.argouml.profile.UserDefinedProfile.loadImage(String,File)

##########################################################

File Name and Type: R	trunk_src_argouml-app_src_org_argouml_profile_internal_ocl_uml14_OCLAPIModelInterpreter.java
Reading file: TestCases/Input/ArgoUML/SVNFilesSideBySide/15248/trunk_src_argouml-app_src_org_argouml_profile_internal_ocl_uml14_OCLAPIModelInterpreter.java.vPrevious
org.argouml.profile.internal.ocl.uml14.OCLAPIModelInterpreter.invokeFeature	5	HashMap<String,Object>	Object	String	String	Object[]	
List of methods:
org.argouml.profile.internal.ocl.uml14.OCLAPIModelInterpreter.invokeFeature(HashMap<String,Object>,Object,String,String,Object[])
{
  if (type.equals(".")) {
    if (feature.toString().trim().equals("oclIsKindOf")) {
      return true;
    }
  }
  return null;
}


-------------------------------------
Reading file: TestCases/Input/ArgoUML/SVNFilesSideBySide/15248/trunk_src_argouml-app_src_org_argouml_profile_internal_ocl_uml14_OCLAPIModelInterpreter.java.v15248
org.argouml.profile.internal.ocl.uml14.OCLAPIModelInterpreter.invokeFeature	5	HashMap<String,Object>	Object	String	String	Object[]	
List of methods:
org.argouml.profile.internal.ocl.uml14.OCLAPIModelInterpreter.invokeFeature(HashMap<String,Object>,Object,String,String,Object[])
{
  if (type.equals(".")) {
    if (feature.toString().trim().equals("oclIsKindOf")) {
      return true;
    }
  }
  return null;
}


-------------------------------------
ListOfCorpusMethodsPreviousVersion size: 1
ListOfCorpusMethodsCurrentVersion size: 1
Gold set methods: 

##########################################################

File Name and Type: R	trunk_src_argouml-app_src_org_argouml_profile_internal_ocl_ComputeTriggers.java
Reading file: TestCases/Input/ArgoUML/SVNFilesSideBySide/15248/trunk_src_argouml-app_src_org_argouml_profile_internal_ocl_ComputeTriggers.java.vPrevious
org.argouml.profile.internal.ocl.ComputeTriggers.caseAClassifierContext	1	AClassifierContext	
org.argouml.profile.internal.ocl.ComputeTriggers.getTriggers	0	
List of methods:
org.argouml.profile.internal.ocl.ComputeTriggers.caseAClassifierContext(AClassifierContext)
{
  String str="" + node.getPathTypeName();
  triggs.add(str.trim().toLowerCase());
}


org.argouml.profile.internal.ocl.ComputeTriggers.getTriggers()
{
  return triggs;
}


-------------------------------------
Reading file: TestCases/Input/ArgoUML/SVNFilesSideBySide/15248/trunk_src_argouml-app_src_org_argouml_profile_internal_ocl_ComputeTriggers.java.v15248
org.argouml.profile.internal.ocl.ComputeTriggers.caseAClassifierContext	1	AClassifierContext	
org.argouml.profile.internal.ocl.ComputeTriggers.getTriggers	0	
List of methods:
org.argouml.profile.internal.ocl.ComputeTriggers.caseAClassifierContext(AClassifierContext)
{
  String str="" + node.getPathTypeName();
  triggs.add(str.trim().toLowerCase());
}


org.argouml.profile.internal.ocl.ComputeTriggers.getTriggers()
{
  return triggs;
}


-------------------------------------
ListOfCorpusMethodsPreviousVersion size: 2
ListOfCorpusMethodsCurrentVersion size: 2
Gold set methods: 

##########################################################

File Name and Type: R	trunk_src_argouml-app_src_org_argouml_profile_internal_ocl_uml14_Uml14ModelInterpreter.java
Reading file: TestCases/Input/ArgoUML/SVNFilesSideBySide/15248/trunk_src_argouml-app_src_org_argouml_profile_internal_ocl_uml14_Uml14ModelInterpreter.java.vPrevious
org.argouml.profile.internal.ocl.uml14.Uml14ModelInterpreter.Uml14ModelInterpreter	0	
List of methods:
org.argouml.profile.internal.ocl.uml14.Uml14ModelInterpreter.Uml14ModelInterpreter()
{
  addModelInterpreter(new ModelAccessModelInterpreter());
  addModelInterpreter(new OCLAPIModelInterpreter());
  addModelInterpreter(new CollectionsModelInterpreter());
}


-------------------------------------
Reading file: TestCases/Input/ArgoUML/SVNFilesSideBySide/15248/trunk_src_argouml-app_src_org_argouml_profile_internal_ocl_uml14_Uml14ModelInterpreter.java.v15248
org.argouml.profile.internal.ocl.uml14.Uml14ModelInterpreter.Uml14ModelInterpreter	0	
List of methods:
org.argouml.profile.internal.ocl.uml14.Uml14ModelInterpreter.Uml14ModelInterpreter()
{
  addModelInterpreter(new ModelAccessModelInterpreter());
  addModelInterpreter(new OCLAPIModelInterpreter());
  addModelInterpreter(new CollectionsModelInterpreter());
}


-------------------------------------
ListOfCorpusMethodsPreviousVersion size: 1
ListOfCorpusMethodsCurrentVersion size: 1
Gold set methods: 

##########################################################

File Name and Type: R	trunk_src_argouml-app_src_org_argouml_profile_internal_ui_PropPanelCritic.java
Reading file: TestCases/Input/ArgoUML/SVNFilesSideBySide/15248/trunk_src_argouml-app_src_org_argouml_profile_internal_ui_PropPanelCritic.java.vPrevious
org.argouml.profile.internal.ui.PropPanelCritic.PropPanelCritic	0	
org.argouml.profile.internal.ui.PropPanelCritic.setTarget	1	Object	
List of methods:
org.argouml.profile.internal.ui.PropPanelCritic.PropPanelCritic()
{
  super("",(ImageIcon)null);
  criticClass=new JTextField();
  addField("label.class",criticClass);
  criticClass.setEditable(false);
  name=new JTextField();
  addField("label.name",name);
  name.setEditable(false);
  headline=new JTextField();
  addField("label.headline",headline);
  headline.setEditable(false);
  priority=new JTextField();
  addField("label.priority",priority);
  priority.setEditable(false);
  description=new JTextArea(5,30);
  addField("label.description",description);
  description.setEditable(false);
  description.setLineWrap(true);
  supportedDecision=new JTextField();
  addField("label.decision",supportedDecision);
  supportedDecision.setEditable(false);
  knowledgeType=new JTextField();
  addField("label.knowledge_types",knowledgeType);
  knowledgeType.setEditable(false);
}


org.argouml.profile.internal.ui.PropPanelCritic.setTarget(Object)
{
  super.setTarget(t);
  criticClass.setText(getTarget().getClass().getCanonicalName());
  Critic c=(Critic)getTarget();
  name.setText(c.getCriticName());
  headline.setText(c.getHeadline());
  description.setText(c.getDescriptionTemplate());
  supportedDecision.setText("" + c.getSupportedDecisions());
  priority.setText("" + c.getPriority());
  knowledgeType.setText("" + c.getKnowledgeTypes());
}


-------------------------------------
Reading file: TestCases/Input/ArgoUML/SVNFilesSideBySide/15248/trunk_src_argouml-app_src_org_argouml_profile_internal_ui_PropPanelCritic.java.v15248
org.argouml.profile.internal.ui.PropPanelCritic.PropPanelCritic	0	
org.argouml.profile.internal.ui.PropPanelCritic.setTarget	1	Object	
List of methods:
org.argouml.profile.internal.ui.PropPanelCritic.PropPanelCritic()
{
  super("",(ImageIcon)null);
  criticClass=new JTextField();
  addField("label.class",criticClass);
  criticClass.setEditable(false);
  name=new JTextField();
  addField("label.name",name);
  name.setEditable(false);
  headline=new JTextField();
  addField("label.headline",headline);
  headline.setEditable(false);
  priority=new JTextField();
  addField("label.priority",priority);
  priority.setEditable(false);
  description=new JTextArea(5,30);
  addField("label.description",description);
  description.setEditable(false);
  description.setLineWrap(true);
  supportedDecision=new JTextField();
  addField("label.decision",supportedDecision);
  supportedDecision.setEditable(false);
  knowledgeType=new JTextField();
  addField("label.knowledge_types",knowledgeType);
  knowledgeType.setEditable(false);
}


org.argouml.profile.internal.ui.PropPanelCritic.setTarget(Object)
{
  super.setTarget(t);
  criticClass.setText(getTarget().getClass().getCanonicalName());
  Critic c=(Critic)getTarget();
  name.setText(c.getCriticName());
  headline.setText(c.getHeadline());
  description.setText(c.getDescriptionTemplate());
  supportedDecision.setText("" + c.getSupportedDecisions());
  priority.setText("" + c.getPriority());
  knowledgeType.setText("" + c.getKnowledgeTypes());
}


-------------------------------------
ListOfCorpusMethodsPreviousVersion size: 2
ListOfCorpusMethodsCurrentVersion size: 2
Gold set methods: 

##########################################################

File Name and Type: R	trunk_src_argouml-app_src_org_argouml_profile_internal_ocl_OclInterpreter.java
Reading file: TestCases/Input/ArgoUML/SVNFilesSideBySide/15248/trunk_src_argouml-app_src_org_argouml_profile_internal_ocl_OclInterpreter.java.vPrevious
org.argouml.profile.internal.ocl.OclInterpreter.OclInterpreter	2	String	ModelInterpreter	
org.argouml.profile.internal.ocl.OclInterpreter.applicable	1	Object	
org.argouml.profile.internal.ocl.OclInterpreter.check	1	Object	
org.argouml.profile.internal.ocl.OclInterpreter.getTriggers	0	
List of methods:
org.argouml.profile.internal.ocl.OclInterpreter.OclInterpreter(String,ModelInterpreter)
{
  this.modelInterpreter=interpreter;
  Lexer lexer=new Lexer(new PushbackReader(new StringReader(ocl),2));
  OclParser parser=new OclParser(lexer);
  try {
    tree=parser.parse();
  }
 catch (  Exception e) {
    LOG.error("Exception",e);
  }
}


org.argouml.profile.internal.ocl.OclInterpreter.applicable(Object)
{
  ContextApplicable ca=new ContextApplicable(modelElement);
  tree.apply(ca);
  return ca.isApplicable();
}


org.argouml.profile.internal.ocl.OclInterpreter.check(Object)
{
  EvaluateInvariant ei=new EvaluateInvariant(modelElement,modelInterpreter);
  tree.apply(ei);
  return ei.isOK();
}


org.argouml.profile.internal.ocl.OclInterpreter.getTriggers()
{
  ComputeTriggers ct=new ComputeTriggers();
  tree.apply(ct);
  return ct.getTriggers();
}


-------------------------------------
Reading file: TestCases/Input/ArgoUML/SVNFilesSideBySide/15248/trunk_src_argouml-app_src_org_argouml_profile_internal_ocl_OclInterpreter.java.v15248
org.argouml.profile.internal.ocl.OclInterpreter.OclInterpreter	2	String	ModelInterpreter	
org.argouml.profile.internal.ocl.OclInterpreter.applicable	1	Object	
org.argouml.profile.internal.ocl.OclInterpreter.check	1	Object	
org.argouml.profile.internal.ocl.OclInterpreter.getTriggers	0	
List of methods:
org.argouml.profile.internal.ocl.OclInterpreter.OclInterpreter(String,ModelInterpreter)
{
  this.modelInterpreter=interpreter;
  Lexer lexer=new Lexer(new PushbackReader(new StringReader(ocl),2));
  OclParser parser=new OclParser(lexer);
  try {
    tree=parser.parse();
  }
 catch (  Exception e) {
    LOG.error("Exception",e);
  }
}


org.argouml.profile.internal.ocl.OclInterpreter.applicable(Object)
{
  ContextApplicable ca=new ContextApplicable(modelElement);
  tree.apply(ca);
  return ca.isApplicable();
}


org.argouml.profile.internal.ocl.OclInterpreter.check(Object)
{
  EvaluateInvariant ei=new EvaluateInvariant(modelElement,modelInterpreter);
  tree.apply(ei);
  return ei.isOK();
}


org.argouml.profile.internal.ocl.OclInterpreter.getTriggers()
{
  ComputeTriggers ct=new ComputeTriggers();
  tree.apply(ct);
  return ct.getTriggers();
}


-------------------------------------
ListOfCorpusMethodsPreviousVersion size: 4
ListOfCorpusMethodsCurrentVersion size: 4
Gold set methods: 

##########################################################

File Name and Type: M	trunk_src_argouml-app_tests_org_argouml_profile_TestUserDefinedProfile.java
Reading file: TestCases/Input/ArgoUML/SVNFilesSideBySide/15248/trunk_src_argouml-app_tests_org_argouml_profile_TestUserDefinedProfile.java.vPrevious
org.argouml.profile.TestUserDefinedProfile.setUp	0	
org.argouml.profile.TestUserDefinedProfile.tearDown	0	
org.argouml.profile.TestUserDefinedProfile.testLoadingConstructor	0	
List of methods:
org.argouml.profile.TestUserDefinedProfile.setUp()
{
  super.setUp();
  InitializeModel.initializeDefault();
  testDir=FileHelper.setUpDir4Test(getClass());
}


org.argouml.profile.TestUserDefinedProfile.tearDown()
{
  FileHelper.deleteDir(testDir);
  super.tearDown();
}


org.argouml.profile.TestUserDefinedProfile.testLoadingConstructor()
{
  ProfileMother profileMother=new ProfileMother();
  Object model=profileMother.createSimpleProfileModel();
  File profileFile=new File(testDir,"testLoadingConstructor.xmi");
  profileMother.saveProfileModel(model,profileFile);
  Profile profile=new UserDefinedProfile(profileFile);
  assertTrue(profile.getDisplayName().contains(profileFile.getName()));
}


-------------------------------------
Reading file: TestCases/Input/ArgoUML/SVNFilesSideBySide/15248/trunk_src_argouml-app_tests_org_argouml_profile_TestUserDefinedProfile.java.v15248
org.argouml.profile.TestUserDefinedProfile.setUp	0	
org.argouml.profile.TestUserDefinedProfile.tearDown	0	
org.argouml.profile.TestUserDefinedProfile.testLoadingConstructor	0	
org.argouml.profile.TestUserDefinedProfile.testLoadingAsFromJar	0	
List of methods:
org.argouml.profile.TestUserDefinedProfile.setUp()
{
  super.setUp();
  InitializeModel.initializeDefault();
  testDir=FileHelper.setUpDir4Test(getClass());
}


org.argouml.profile.TestUserDefinedProfile.tearDown()
{
  FileHelper.deleteDir(testDir);
  super.tearDown();
}


org.argouml.profile.TestUserDefinedProfile.testLoadingConstructor()
{
  ProfileMother profileMother=new ProfileMother();
  Object model=profileMother.createSimpleProfileModel();
  File profileFile=new File(testDir,"testLoadingConstructor.xmi");
  profileMother.saveProfileModel(model,profileFile);
  Profile profile=new UserDefinedProfile(profileFile);
  assertTrue(profile.getDisplayName().contains(profileFile.getName()));
}


org.argouml.profile.TestUserDefinedProfile.testLoadingAsFromJar()
{
  ProfileManager pm=new ProfileManagerImpl();
  ProfileMother profileMother=new ProfileMother();
  Object model=profileMother.createSimpleProfileModel();
  File profileFile=new File(testDir,"testLoadingConstructor.xmi");
  profileMother.saveProfileModel(model,profileFile);
  CrOCL critic=new CrOCL("context Class inv: 3 > 2");
  Set<CrUML> critics=new HashSet<CrUML>();
  critics.add(critic);
  Set<Profile> profiles=new HashSet<Profile>();
  profiles.add(pm.getUMLProfile());
  Profile profile=new UserDefinedProfile("displayName",profileFile.toURI().toURL(),critics,profiles);
  assertEquals(profile.getDisplayName(),"displayName");
  assertTrue(profile.getDependencies().contains(pm.getUMLProfile()));
  assertTrue(profile.getCritics().contains(critic));
}


-------------------------------------
ListOfCorpusMethodsPreviousVersion size: 3
ListOfCorpusMethodsCurrentVersion size: 4
Gold set methods: 
org.argouml.profile.TestUserDefinedProfile.testLoadingAsFromJar()

##########################################################

File Name and Type: R	trunk_src_argouml-app_src_org_argouml_profile_internal_ocl_CrOCL.java
Reading file: TestCases/Input/ArgoUML/SVNFilesSideBySide/15248/trunk_src_argouml-app_src_org_argouml_profile_internal_ocl_CrOCL.java.vPrevious
org.argouml.profile.internal.ocl.CrOCL.CrOCL	1	String	
org.argouml.profile.internal.ocl.CrOCL.CrOCL	2	String	String	
org.argouml.profile.internal.ocl.CrOCL.predicate2	2	Object	Designer	
List of methods:
org.argouml.profile.internal.ocl.CrOCL.CrOCL(String)
{
  interpreter=new OclInterpreter(ocl,new Uml14ModelInterpreter());
  addSupportedDecision(UMLDecision.PLANNED_EXTENSIONS);
  setPriority(ToDoItem.HIGH_PRIORITY);
  Vector<String> triggers=interpreter.getTriggers();
  for (  String string : triggers) {
    addTrigger(string);
  }
  super.setHeadline("OCL Expression");
  super.setDescription(ocl);
}


org.argouml.profile.internal.ocl.CrOCL.CrOCL(String,String)
{
  this(ocl);
  super.setHeadline(headline);
}


org.argouml.profile.internal.ocl.CrOCL.predicate2(Object,Designer)
{
  if (!interpreter.applicable(dm)) {
    return NO_PROBLEM;
  }
 else {
    if (interpreter.check(dm)) {
      return NO_PROBLEM;
    }
 else {
      return PROBLEM_FOUND;
    }
  }
}


-------------------------------------
Reading file: TestCases/Input/ArgoUML/SVNFilesSideBySide/15248/trunk_src_argouml-app_src_org_argouml_profile_internal_ocl_CrOCL.java.v15248
org.argouml.profile.internal.ocl.CrOCL.CrOCL	1	String	
org.argouml.profile.internal.ocl.CrOCL.CrOCL	2	String	String	
org.argouml.profile.internal.ocl.CrOCL.predicate2	2	Object	Designer	
List of methods:
org.argouml.profile.internal.ocl.CrOCL.CrOCL(String)
{
  interpreter=new OclInterpreter(ocl,new Uml14ModelInterpreter());
  addSupportedDecision(UMLDecision.PLANNED_EXTENSIONS);
  setPriority(ToDoItem.HIGH_PRIORITY);
  Vector<String> triggers=interpreter.getTriggers();
  for (  String string : triggers) {
    addTrigger(string);
  }
  super.setHeadline("OCL Expression");
  super.setDescription(ocl);
}


org.argouml.profile.internal.ocl.CrOCL.CrOCL(String,String)
{
  this(ocl);
  super.setHeadline(headline);
}


org.argouml.profile.internal.ocl.CrOCL.predicate2(Object,Designer)
{
  if (!interpreter.applicable(dm)) {
    return NO_PROBLEM;
  }
 else {
    if (interpreter.check(dm)) {
      return NO_PROBLEM;
    }
 else {
      return PROBLEM_FOUND;
    }
  }
}


-------------------------------------
ListOfCorpusMethodsPreviousVersion size: 3
ListOfCorpusMethodsCurrentVersion size: 3
Gold set methods: 

##########################################################

File Name and Type: M	trunk_src_argouml-app_src_org_argouml_profile_Profile.java
Reading file: TestCases/Input/ArgoUML/SVNFilesSideBySide/15248/trunk_src_argouml-app_src_org_argouml_profile_Profile.java.vPrevious
org.argouml.profile.Profile.addProfileDependency	1	Profile	
org.argouml.profile.Profile.getDependencies	0	
org.argouml.profile.Profile.getFormatingStrategy	0	
org.argouml.profile.Profile.getFigureStrategy	0	
org.argouml.profile.Profile.getDefaultTypeStrategy	0	
org.argouml.profile.Profile.toString	0	
List of methods:
org.argouml.profile.Profile.addProfileDependency(Profile)
{
  if (importingProfiles.contains(p)) {
    throw new IllegalArgumentException("This profile causes a cycle " + "in the profile dependency graph!");
  }
 else {
    importedProfiles.add(p);
    importedProfiles.addAll(p.importedProfiles);
    for (    Profile importedProfile : importedProfiles) {
      importedProfile.importingProfiles.add(this);
    }
  }
}


org.argouml.profile.Profile.getDependencies()
{
  return importedProfiles;
}


org.argouml.profile.Profile.getFormatingStrategy()
{
  return null;
}


org.argouml.profile.Profile.getFigureStrategy()
{
  return null;
}


org.argouml.profile.Profile.getDefaultTypeStrategy()
{
  return null;
}


org.argouml.profile.Profile.toString()
{
  return getDisplayName();
}


-------------------------------------
Reading file: TestCases/Input/ArgoUML/SVNFilesSideBySide/15248/trunk_src_argouml-app_src_org_argouml_profile_Profile.java.v15248
org.argouml.profile.Profile.addProfileDependency	1	Profile	
org.argouml.profile.Profile.getDependencies	0	
org.argouml.profile.Profile.getFormatingStrategy	0	
org.argouml.profile.Profile.getFigureStrategy	0	
org.argouml.profile.Profile.getDefaultTypeStrategy	0	
org.argouml.profile.Profile.toString	0	
org.argouml.profile.Profile.getCritics	0	
List of methods:
org.argouml.profile.Profile.addProfileDependency(Profile)
{
  if (importingProfiles.contains(p)) {
    throw new IllegalArgumentException("This profile causes a cycle " + "in the profile dependency graph!");
  }
 else {
    importedProfiles.add(p);
    importedProfiles.addAll(p.importedProfiles);
    for (    Profile importedProfile : importedProfiles) {
      importedProfile.importingProfiles.add(this);
    }
  }
}


org.argouml.profile.Profile.getDependencies()
{
  return importedProfiles;
}


org.argouml.profile.Profile.getFormatingStrategy()
{
  return null;
}


org.argouml.profile.Profile.getFigureStrategy()
{
  return null;
}


org.argouml.profile.Profile.getDefaultTypeStrategy()
{
  return null;
}


org.argouml.profile.Profile.toString()
{
  return getDisplayName();
}


org.argouml.profile.Profile.getCritics()
{
  return critics;
}


-------------------------------------
ListOfCorpusMethodsPreviousVersion size: 6
ListOfCorpusMethodsCurrentVersion size: 7
Gold set methods: 
org.argouml.profile.Profile.getCritics()

##########################################################

File Name and Type: M	trunk_src_argouml-app_src_org_argouml_uml_diagram_ui_TabDiagram.java
Reading file: TestCases/Input/ArgoUML/SVNFilesSideBySide/15248/trunk_src_argouml-app_src_org_argouml_uml_diagram_ui_TabDiagram.java.vPrevious
org.argouml.uml.diagram.ui.TabDiagram.TabDiagram	0	
org.argouml.uml.diagram.ui.TabDiagram.TabDiagram	1	String	
org.argouml.uml.diagram.ui.TabDiagram.clone	0	
org.argouml.uml.diagram.ui.TabDiagram.setTarget	1	Object	
org.argouml.uml.diagram.ui.TabDiagram.getTarget	0	
org.argouml.uml.diagram.ui.TabDiagram.getToolBar	0	
org.argouml.uml.diagram.ui.TabDiagram.refresh	0	
org.argouml.uml.diagram.ui.TabDiagram.shouldBeEnabled	1	Object	
org.argouml.uml.diagram.ui.TabDiagram.getJGraph	0	
org.argouml.uml.diagram.ui.TabDiagram.setVisible	1	boolean	
org.argouml.uml.diagram.ui.TabDiagram.selectionChanged	1	GraphSelectionEvent	
org.argouml.uml.diagram.ui.TabDiagram.removeGraphSelectionListener	1	GraphSelectionListener	
org.argouml.uml.diagram.ui.TabDiagram.modeChange	1	ModeChangeEvent	
org.argouml.uml.diagram.ui.TabDiagram.removeModeChangeListener	1	ModeChangeListener	
org.argouml.uml.diagram.ui.TabDiagram.setToolBar	1	JToolBar	
org.argouml.uml.diagram.ui.TabDiagram.targetAdded	1	TargetEvent	
org.argouml.uml.diagram.ui.TabDiagram.targetRemoved	1	TargetEvent	
org.argouml.uml.diagram.ui.TabDiagram.targetSet	1	TargetEvent	
org.argouml.uml.diagram.ui.TabDiagram.select	1	Object[]	
org.argouml.uml.diagram.ui.TabDiagram.propertyChange	1	PropertyChangeEvent	
org.argouml.uml.diagram.ui.ArgoEditor.ArgoEditor	1	Diagram	
org.argouml.uml.diagram.ui.ArgoEditor.ArgoEditor	2	GraphModel	JComponent	
org.argouml.uml.diagram.ui.ArgoEditor.mouseEntered	1	MouseEvent	
org.argouml.uml.diagram.ui.ArgoEditor.mouseMoved	1	MouseEvent	
org.argouml.uml.diagram.ui.ArgoEditor.paint	1	Graphics	
org.argouml.uml.diagram.ui.ArgoEditor.setupRenderingHints	0	
List of methods:
org.argouml.uml.diagram.ui.TabDiagram.TabDiagram()
{
  this("Diagram");
}


org.argouml.uml.diagram.ui.TabDiagram.TabDiagram(String)
{
  super(tag);
  setLayout(new BorderLayout());
  graph=new DnDJGraph();
  graph.setDrawingSize((612 - 30) * 2,(792 - 55 - 20) * 2);
  Globals.setStatusBar(new StatusBarAdapter());
  JPanel p=new JPanel();
  p.setLayout(new BorderLayout());
  p.setBorder(new EtchedBorder(EtchedBorder.LOWERED));
  p.add(graph,BorderLayout.CENTER);
  add(p,BorderLayout.CENTER);
  graph.addGraphSelectionListener(this);
  graph.addModeChangeListener(this);
}


org.argouml.uml.diagram.ui.TabDiagram.clone()
{
  TabDiagram newPanel=new TabDiagram();
  if (target != null) {
    newPanel.setTarget(target);
  }
  ToolBarFactory factory=new ToolBarFactory(target.getActions());
  factory.setRollover(true);
  factory.setFloatable(false);
  newPanel.setToolBar(factory.createToolBar());
  setToolBar(factory.createToolBar());
  return newPanel;
}


org.argouml.uml.diagram.ui.TabDiagram.setTarget(Object)
{
  if (!(t instanceof UMLDiagram)) {
    LOG.debug("target is null in set target or " + "not an instance of UMLDiagram");
    return;
  }
  UMLDiagram newTarget=(UMLDiagram)t;
  if (target != null) {
    target.removePropertyChangeListener("remove",this);
  }
  newTarget.addPropertyChangeListener("remove",this);
  setToolBar(newTarget.getJToolBar());
  graph.removeGraphSelectionListener(this);
  graph.setDiagram(newTarget);
  graph.addGraphSelectionListener(this);
  target=newTarget;
}


org.argouml.uml.diagram.ui.TabDiagram.getTarget()
{
  return target;
}


org.argouml.uml.diagram.ui.TabDiagram.getToolBar()
{
  return toolBar;
}


org.argouml.uml.diagram.ui.TabDiagram.refresh()
{
  setTarget(target);
}


org.argouml.uml.diagram.ui.TabDiagram.shouldBeEnabled(Object)
{
  return newTarget instanceof ArgoDiagram;
}


org.argouml.uml.diagram.ui.TabDiagram.getJGraph()
{
  return graph;
}


org.argouml.uml.diagram.ui.TabDiagram.setVisible(boolean)
{
  super.setVisible(b);
  getJGraph().setVisible(b);
}


org.argouml.uml.diagram.ui.TabDiagram.selectionChanged(GraphSelectionEvent)
{
  if (!updatingSelection) {
    updatingSelection=true;
    List<Fig> selections=gse.getSelections();
    ActionCut.getInstance().setEnabled(selections != null && !selections.isEmpty());
    ActionCopy.getInstance().setEnabled(selections != null && !selections.isEmpty());
    List currentSelection=TargetManager.getInstance().getTargets();
    List removedTargets=new ArrayList(currentSelection);
    List addedTargets=new ArrayList();
    for (    Object selection : selections) {
      Object owner=TargetManager.getInstance().getOwner(selection);
      if (currentSelection.contains(owner)) {
        removedTargets.remove(owner);
      }
 else {
        addedTargets.add(owner);
      }
    }
    if (addedTargets.size() == 1 && removedTargets.size() == currentSelection.size()) {
      TargetManager.getInstance().setTarget(addedTargets.get(0));
    }
 else {
      for (      Object o : removedTargets) {
        TargetManager.getInstance().removeTarget(o);
      }
      for (      Object o : addedTargets) {
        TargetManager.getInstance().addTarget(o);
      }
    }
    updatingSelection=false;
  }
}


org.argouml.uml.diagram.ui.TabDiagram.removeGraphSelectionListener(GraphSelectionListener)
{
  graph.removeGraphSelectionListener(listener);
}


org.argouml.uml.diagram.ui.TabDiagram.modeChange(ModeChangeEvent)
{
  LOG.debug("TabDiagram got mode change event");
  if (!Globals.getSticky() && Globals.mode() instanceof ModeSelect) {
    target.deselectAllTools();
  }
}


org.argouml.uml.diagram.ui.TabDiagram.removeModeChangeListener(ModeChangeListener)
{
  graph.removeModeChangeListener(listener);
}


org.argouml.uml.diagram.ui.TabDiagram.setToolBar(JToolBar)
{
  if (!Arrays.asList(getComponents()).contains(toolbar)) {
    if (target != null) {
      remove(((UMLDiagram)getTarget()).getJToolBar());
    }
    add(toolbar,BorderLayout.NORTH);
    toolBar=toolbar;
    invalidate();
    validate();
    repaint();
  }
}


org.argouml.uml.diagram.ui.TabDiagram.targetAdded(TargetEvent)
{
  setTarget(e.getNewTarget());
  select(e.getNewTargets());
}


org.argouml.uml.diagram.ui.TabDiagram.targetRemoved(TargetEvent)
{
  setTarget(e.getNewTarget());
  select(e.getNewTargets());
}


org.argouml.uml.diagram.ui.TabDiagram.targetSet(TargetEvent)
{
  setTarget(e.getNewTarget());
  select(e.getNewTargets());
}


org.argouml.uml.diagram.ui.TabDiagram.select(Object[])
{
  LayerManager manager=graph.getEditor().getLayerManager();
  List<Fig> figList=new ArrayList<Fig>();
  for (int i=0; i < targets.length; i++) {
    if (targets[i] != null) {
      Fig theTarget=null;
      if (targets[i] instanceof Fig && manager.getActiveLayer().getContents().contains(targets[i])) {
        theTarget=(Fig)targets[i];
      }
 else {
        theTarget=manager.presentationFor(targets[i]);
      }
      if (theTarget != null && !figList.contains(theTarget)) {
        figList.add(theTarget);
      }
    }
  }
  if (!figList.equals(graph.selectedFigs())) {
    graph.deselectAll();
    graph.select(new Vector<Fig>(figList));
  }
}


org.argouml.uml.diagram.ui.TabDiagram.propertyChange(PropertyChangeEvent)
{
  if ("remove".equals(arg0.getPropertyName())) {
    ArgoDiagram diagram=ProjectManager.getManager().getCurrentProject().getActiveDiagram();
    TargetManager.getInstance().setTarget(diagram);
  }
}


org.argouml.uml.diagram.ui.ArgoEditor.ArgoEditor(Diagram)
{
  super(d);
  setupRenderingHints();
}


org.argouml.uml.diagram.ui.ArgoEditor.ArgoEditor(GraphModel,JComponent)
{
  super(gm,c);
  setupRenderingHints();
}


org.argouml.uml.diagram.ui.ArgoEditor.mouseEntered(MouseEvent)
{
  if (getActiveTextEditor() != null) {
    getActiveTextEditor().requestFocus();
  }
  translateMouseEvent(me);
  Globals.curEditor(this);
  pushMode((FigModifyingMode)Globals.mode());
  setUnderMouse(me);
  _modeManager.mouseEntered(me);
}


org.argouml.uml.diagram.ui.ArgoEditor.mouseMoved(MouseEvent)
{
  translateMouseEvent(me);
  Globals.curEditor(this);
  setUnderMouse(me);
  Fig currentFig=getCurrentFig();
  if (currentFig != null && Globals.getShowFigTips()) {
    String tip=currentFig.getTipString(me);
    if (tip != null && (getJComponent() != null)) {
      JComponent c=getJComponent();
      if (c.getToolTipText() == null || !(c.getToolTipText().equals(tip))) {
        c.setToolTipText(tip);
      }
    }
  }
 else   if (getJComponent() != null && getJComponent().getToolTipText() != null) {
    getJComponent().setToolTipText(null);
  }
  _selectionManager.mouseMoved(me);
  _modeManager.mouseMoved(me);
}


org.argouml.uml.diagram.ui.ArgoEditor.paint(Graphics)
{
  if (!shouldPaint()) {
    return;
  }
  if (g instanceof Graphics2D) {
    Graphics2D g2=(Graphics2D)g;
    g2.setRenderingHints(argoRenderingHints);
    double scale=getScale();
    g2.scale(scale,scale);
  }
  getLayerManager().paint(g);
  if (_canSelectElements) {
    _selectionManager.paint(g);
    _modeManager.paint(g);
  }
}


org.argouml.uml.diagram.ui.ArgoEditor.setupRenderingHints()
{
  argoRenderingHints=new RenderingHints(null);
  argoRenderingHints.put(RenderingHints.KEY_FRACTIONALMETRICS,RenderingHints.VALUE_FRACTIONALMETRICS_ON);
  if (Configuration.getBoolean(Argo.KEY_SMOOTH_EDGES,false)) {
    argoRenderingHints.put(RenderingHints.KEY_RENDERING,RenderingHints.VALUE_RENDER_QUALITY);
    argoRenderingHints.put(RenderingHints.KEY_ANTIALIASING,RenderingHints.VALUE_ANTIALIAS_ON);
    argoRenderingHints.put(RenderingHints.KEY_TEXT_ANTIALIASING,RenderingHints.VALUE_TEXT_ANTIALIAS_ON);
  }
 else {
    argoRenderingHints.put(RenderingHints.KEY_RENDERING,RenderingHints.VALUE_RENDER_SPEED);
    argoRenderingHints.put(RenderingHints.KEY_ANTIALIASING,RenderingHints.VALUE_ANTIALIAS_OFF);
    argoRenderingHints.put(RenderingHints.KEY_TEXT_ANTIALIASING,RenderingHints.VALUE_TEXT_ANTIALIAS_OFF);
  }
}


-------------------------------------
Reading file: TestCases/Input/ArgoUML/SVNFilesSideBySide/15248/trunk_src_argouml-app_src_org_argouml_uml_diagram_ui_TabDiagram.java.v15248
org.argouml.uml.diagram.ui.TabDiagram.TabDiagram	0	
org.argouml.uml.diagram.ui.TabDiagram.TabDiagram	1	String	
org.argouml.uml.diagram.ui.TabDiagram.clone	0	
org.argouml.uml.diagram.ui.TabDiagram.setTarget	1	Object	
org.argouml.uml.diagram.ui.TabDiagram.getTarget	0	
org.argouml.uml.diagram.ui.TabDiagram.getToolBar	0	
org.argouml.uml.diagram.ui.TabDiagram.refresh	0	
org.argouml.uml.diagram.ui.TabDiagram.shouldBeEnabled	1	Object	
org.argouml.uml.diagram.ui.TabDiagram.getJGraph	0	
org.argouml.uml.diagram.ui.TabDiagram.setVisible	1	boolean	
org.argouml.uml.diagram.ui.TabDiagram.selectionChanged	1	GraphSelectionEvent	
org.argouml.uml.diagram.ui.TabDiagram.removeGraphSelectionListener	1	GraphSelectionListener	
org.argouml.uml.diagram.ui.TabDiagram.modeChange	1	ModeChangeEvent	
org.argouml.uml.diagram.ui.TabDiagram.removeModeChangeListener	1	ModeChangeListener	
org.argouml.uml.diagram.ui.TabDiagram.setToolBar	1	JToolBar	
org.argouml.uml.diagram.ui.TabDiagram.targetAdded	1	TargetEvent	
org.argouml.uml.diagram.ui.TabDiagram.targetRemoved	1	TargetEvent	
org.argouml.uml.diagram.ui.TabDiagram.targetSet	1	TargetEvent	
org.argouml.uml.diagram.ui.TabDiagram.select	1	Object[]	
org.argouml.uml.diagram.ui.TabDiagram.propertyChange	1	PropertyChangeEvent	
org.argouml.uml.diagram.ui.ArgoEditor.ArgoEditor	1	Diagram	
org.argouml.uml.diagram.ui.ArgoEditor.ArgoEditor	2	GraphModel	JComponent	
org.argouml.uml.diagram.ui.ArgoEditor.mouseEntered	1	MouseEvent	
org.argouml.uml.diagram.ui.ArgoEditor.mouseMoved	1	MouseEvent	
org.argouml.uml.diagram.ui.ArgoEditor.paint	1	Graphics	
org.argouml.uml.diagram.ui.ArgoEditor.setupRenderingHints	0	
List of methods:
org.argouml.uml.diagram.ui.TabDiagram.TabDiagram()
{
  this("Diagram");
}


org.argouml.uml.diagram.ui.TabDiagram.TabDiagram(String)
{
  super(tag);
  setLayout(new BorderLayout());
  graph=new DnDJGraph();
  graph.setDrawingSize((612 - 30) * 2,(792 - 55 - 20) * 2);
  Globals.setStatusBar(new StatusBarAdapter());
  JPanel p=new JPanel();
  p.setLayout(new BorderLayout());
  p.setBorder(new EtchedBorder(EtchedBorder.LOWERED));
  p.add(graph,BorderLayout.CENTER);
  add(p,BorderLayout.CENTER);
  graph.addGraphSelectionListener(this);
  graph.addModeChangeListener(this);
}


org.argouml.uml.diagram.ui.TabDiagram.clone()
{
  TabDiagram newPanel=new TabDiagram();
  if (target != null) {
    newPanel.setTarget(target);
  }
  ToolBarFactory factory=new ToolBarFactory(target.getActions());
  factory.setRollover(true);
  factory.setFloatable(false);
  newPanel.setToolBar(factory.createToolBar());
  setToolBar(factory.createToolBar());
  return newPanel;
}


org.argouml.uml.diagram.ui.TabDiagram.setTarget(Object)
{
  if (!(t instanceof UMLDiagram)) {
    LOG.debug("target is null in set target or " + "not an instance of UMLDiagram");
    return;
  }
  UMLDiagram newTarget=(UMLDiagram)t;
  if (target != null) {
    target.removePropertyChangeListener("remove",this);
  }
  newTarget.addPropertyChangeListener("remove",this);
  setToolBar(newTarget.getJToolBar());
  graph.removeGraphSelectionListener(this);
  graph.setDiagram(newTarget);
  graph.addGraphSelectionListener(this);
  target=newTarget;
}


org.argouml.uml.diagram.ui.TabDiagram.getTarget()
{
  return target;
}


org.argouml.uml.diagram.ui.TabDiagram.getToolBar()
{
  return toolBar;
}


org.argouml.uml.diagram.ui.TabDiagram.refresh()
{
  setTarget(target);
}


org.argouml.uml.diagram.ui.TabDiagram.shouldBeEnabled(Object)
{
  return newTarget instanceof ArgoDiagram;
}


org.argouml.uml.diagram.ui.TabDiagram.getJGraph()
{
  return graph;
}


org.argouml.uml.diagram.ui.TabDiagram.setVisible(boolean)
{
  super.setVisible(b);
  getJGraph().setVisible(b);
}


org.argouml.uml.diagram.ui.TabDiagram.selectionChanged(GraphSelectionEvent)
{
  if (!updatingSelection) {
    updatingSelection=true;
    List<Fig> selections=gse.getSelections();
    ActionCut.getInstance().setEnabled(selections != null && !selections.isEmpty());
    ActionCopy.getInstance().setEnabled(selections != null && !selections.isEmpty());
    List currentSelection=TargetManager.getInstance().getTargets();
    List removedTargets=new ArrayList(currentSelection);
    List addedTargets=new ArrayList();
    for (    Object selection : selections) {
      Object owner=TargetManager.getInstance().getOwner(selection);
      if (currentSelection.contains(owner)) {
        removedTargets.remove(owner);
      }
 else {
        addedTargets.add(owner);
      }
    }
    if (addedTargets.size() == 1 && removedTargets.size() == currentSelection.size()) {
      TargetManager.getInstance().setTarget(addedTargets.get(0));
    }
 else {
      for (      Object o : removedTargets) {
        TargetManager.getInstance().removeTarget(o);
      }
      for (      Object o : addedTargets) {
        TargetManager.getInstance().addTarget(o);
      }
    }
    updatingSelection=false;
  }
}


org.argouml.uml.diagram.ui.TabDiagram.removeGraphSelectionListener(GraphSelectionListener)
{
  graph.removeGraphSelectionListener(listener);
}


org.argouml.uml.diagram.ui.TabDiagram.modeChange(ModeChangeEvent)
{
  LOG.debug("TabDiagram got mode change event");
  if (!Globals.getSticky() && Globals.mode() instanceof ModeSelect) {
    target.deselectAllTools();
  }
}


org.argouml.uml.diagram.ui.TabDiagram.removeModeChangeListener(ModeChangeListener)
{
  graph.removeModeChangeListener(listener);
}


org.argouml.uml.diagram.ui.TabDiagram.setToolBar(JToolBar)
{
  if (!Arrays.asList(getComponents()).contains(toolbar)) {
    if (target != null) {
      remove(((UMLDiagram)getTarget()).getJToolBar());
    }
    add(toolbar,BorderLayout.NORTH);
    toolBar=toolbar;
    invalidate();
    validate();
    repaint();
  }
}


org.argouml.uml.diagram.ui.TabDiagram.targetAdded(TargetEvent)
{
  setTarget(e.getNewTarget());
  select(e.getNewTargets());
}


org.argouml.uml.diagram.ui.TabDiagram.targetRemoved(TargetEvent)
{
  setTarget(e.getNewTarget());
  select(e.getNewTargets());
}


org.argouml.uml.diagram.ui.TabDiagram.targetSet(TargetEvent)
{
  setTarget(e.getNewTarget());
  select(e.getNewTargets());
}


org.argouml.uml.diagram.ui.TabDiagram.select(Object[])
{
  LayerManager manager=graph.getEditor().getLayerManager();
  List<Fig> figList=new ArrayList<Fig>();
  for (int i=0; i < targets.length; i++) {
    if (targets[i] != null) {
      Fig theTarget=null;
      if (targets[i] instanceof Fig && manager.getActiveLayer().getContents().contains(targets[i])) {
        theTarget=(Fig)targets[i];
      }
 else {
        theTarget=manager.presentationFor(targets[i]);
      }
      if (theTarget != null && !figList.contains(theTarget)) {
        figList.add(theTarget);
      }
    }
  }
  if (!figList.equals(graph.selectedFigs())) {
    graph.deselectAll();
    graph.select(new Vector<Fig>(figList));
  }
}


org.argouml.uml.diagram.ui.TabDiagram.propertyChange(PropertyChangeEvent)
{
  if ("remove".equals(arg0.getPropertyName())) {
    ArgoDiagram diagram=ProjectManager.getManager().getCurrentProject().getActiveDiagram();
    TargetManager.getInstance().setTarget(diagram);
  }
}


org.argouml.uml.diagram.ui.ArgoEditor.ArgoEditor(Diagram)
{
  super(d);
  setupRenderingHints();
}


org.argouml.uml.diagram.ui.ArgoEditor.ArgoEditor(GraphModel,JComponent)
{
  super(gm,c);
  setupRenderingHints();
}


org.argouml.uml.diagram.ui.ArgoEditor.mouseEntered(MouseEvent)
{
  if (getActiveTextEditor() != null) {
    getActiveTextEditor().requestFocus();
  }
  translateMouseEvent(me);
  Globals.curEditor(this);
  pushMode((FigModifyingMode)Globals.mode());
  setUnderMouse(me);
  _modeManager.mouseEntered(me);
}


org.argouml.uml.diagram.ui.ArgoEditor.mouseMoved(MouseEvent)
{
  translateMouseEvent(me);
  Globals.curEditor(this);
  setUnderMouse(me);
  Fig currentFig=getCurrentFig();
  if (currentFig != null && Globals.getShowFigTips()) {
    String tip=currentFig.getTipString(me);
    if (tip != null && (getJComponent() != null)) {
      JComponent c=getJComponent();
      if (c.getToolTipText() == null || !(c.getToolTipText().equals(tip))) {
        c.setToolTipText(tip);
      }
    }
  }
 else   if (getJComponent() != null && getJComponent().getToolTipText() != null) {
    getJComponent().setToolTipText(null);
  }
  _selectionManager.mouseMoved(me);
  _modeManager.mouseMoved(me);
}


org.argouml.uml.diagram.ui.ArgoEditor.paint(Graphics)
{
  if (!shouldPaint()) {
    return;
  }
  if (g instanceof Graphics2D) {
    Graphics2D g2=(Graphics2D)g;
    g2.setRenderingHints(argoRenderingHints);
    double scale=getScale();
    g2.scale(scale,scale);
  }
  getLayerManager().paint(g);
  if (_canSelectElements) {
    _selectionManager.paint(g);
    _modeManager.paint(g);
  }
}


org.argouml.uml.diagram.ui.ArgoEditor.setupRenderingHints()
{
  argoRenderingHints=new RenderingHints(null);
  argoRenderingHints.put(RenderingHints.KEY_FRACTIONALMETRICS,RenderingHints.VALUE_FRACTIONALMETRICS_ON);
  if (Configuration.getBoolean(Argo.KEY_SMOOTH_EDGES,false)) {
    argoRenderingHints.put(RenderingHints.KEY_RENDERING,RenderingHints.VALUE_RENDER_QUALITY);
    argoRenderingHints.put(RenderingHints.KEY_ANTIALIASING,RenderingHints.VALUE_ANTIALIAS_ON);
    argoRenderingHints.put(RenderingHints.KEY_TEXT_ANTIALIASING,RenderingHints.VALUE_TEXT_ANTIALIAS_ON);
  }
 else {
    argoRenderingHints.put(RenderingHints.KEY_RENDERING,RenderingHints.VALUE_RENDER_SPEED);
    argoRenderingHints.put(RenderingHints.KEY_ANTIALIASING,RenderingHints.VALUE_ANTIALIAS_OFF);
    argoRenderingHints.put(RenderingHints.KEY_TEXT_ANTIALIASING,RenderingHints.VALUE_TEXT_ANTIALIAS_OFF);
  }
}


-------------------------------------
ListOfCorpusMethodsPreviousVersion size: 26
ListOfCorpusMethodsCurrentVersion size: 26
Gold set methods: 

##########################################################

File Name and Type: R	trunk_src_argouml-app_src_org_argouml_profile_internal_ocl_EvaluateInvariant.java
Reading file: TestCases/Input/ArgoUML/SVNFilesSideBySide/15248/trunk_src_argouml-app_src_org_argouml_profile_internal_ocl_EvaluateInvariant.java.vPrevious
org.argouml.profile.internal.ocl.EvaluateInvariant.EvaluateInvariant	2	Object	ModelInterpreter	
org.argouml.profile.internal.ocl.EvaluateInvariant.isOK	0	
org.argouml.profile.internal.ocl.EvaluateInvariant.outStart	1	Start	
org.argouml.profile.internal.ocl.EvaluateInvariant.defaultIn	1	Node	
org.argouml.profile.internal.ocl.EvaluateInvariant.caseAConstraint	1	AConstraint	
org.argouml.profile.internal.ocl.EvaluateInvariant.caseAIfExpression	1	AIfExpression	
org.argouml.profile.internal.ocl.EvaluateInvariant.caseALogicalExpressionTail	1	ALogicalExpressionTail	
org.argouml.profile.internal.ocl.EvaluateInvariant.caseARelationalExpressionTail	1	ARelationalExpressionTail	
org.argouml.profile.internal.ocl.EvaluateInvariant.caseAAdditiveExpressionTail	1	AAdditiveExpressionTail	
org.argouml.profile.internal.ocl.EvaluateInvariant.caseAMultiplicativeExpressionTail	1	AMultiplicativeExpressionTail	
org.argouml.profile.internal.ocl.EvaluateInvariant.caseAUnaryUnaryExpression	1	AUnaryUnaryExpression	
org.argouml.profile.internal.ocl.EvaluateInvariant.caseAPostfixExpressionTail	1	APostfixExpressionTail	
org.argouml.profile.internal.ocl.EvaluateInvariant.caseAFeaturePrimaryExpression	1	AFeaturePrimaryExpression	
org.argouml.profile.internal.ocl.EvaluateInvariant.outAEmptyFeatureCallParameters	1	AEmptyFeatureCallParameters	
org.argouml.profile.internal.ocl.EvaluateInvariant.caseAFeatureCallParameters	1	AFeatureCallParameters	
org.argouml.profile.internal.ocl.EvaluateInvariant.caseAStandardDeclarator	1	AStandardDeclarator	
org.argouml.profile.internal.ocl.EvaluateInvariant.outAIterateDeclarator	1	AIterateDeclarator	
org.argouml.profile.internal.ocl.EvaluateInvariant.caseALetExpression	1	ALetExpression	
org.argouml.profile.internal.ocl.EvaluateInvariant.outAStringLiteral	1	AStringLiteral	
org.argouml.profile.internal.ocl.EvaluateInvariant.outARealLiteral	1	ARealLiteral	
org.argouml.profile.internal.ocl.EvaluateInvariant.outAIntegerLiteral	1	AIntegerLiteral	
org.argouml.profile.internal.ocl.EvaluateInvariant.outABooleanLiteral	1	ABooleanLiteral	
org.argouml.profile.internal.ocl.EvaluateInvariant.outAEnumLiteral	1	AEnumLiteral	
org.argouml.profile.internal.ocl.EvaluateInvariant.outALiteralCollection	1	ALiteralCollection	
org.argouml.profile.internal.ocl.EvaluateInvariant.caseAFeatureCall	1	AFeatureCall	
org.argouml.profile.internal.ocl.EvaluateInvariant.caseAActualParameterList	1	AActualParameterList	
org.argouml.profile.internal.ocl.EvaluateInvariant.asBoolean	2	Object	Object	
org.argouml.profile.internal.ocl.EvaluateInvariant.asInteger	2	Object	Object	
org.argouml.profile.internal.ocl.EvaluateInvariant.runFeatureCall	4	Object	Object	Object	Vector<Object>	
org.argouml.profile.internal.ocl.EvaluateInvariant.errorNotType	3	Object	String	Object	
org.argouml.profile.internal.ocl.EvaluateInvariant.error	1	Object	
List of methods:
org.argouml.profile.internal.ocl.EvaluateInvariant.EvaluateInvariant(Object,ModelInterpreter)
{
  this.interp=mi;
  vt.put("self",modelElement);
}


org.argouml.profile.internal.ocl.EvaluateInvariant.isOK()
{
  return ok;
}


org.argouml.profile.internal.ocl.EvaluateInvariant.outStart(Start)
{
  ok=asBoolean(val,node);
}


org.argouml.profile.internal.ocl.EvaluateInvariant.defaultIn(Node)
{
}


org.argouml.profile.internal.ocl.EvaluateInvariant.caseAConstraint(AConstraint)
{
  inAConstraint(node);
  if (node.getContextDeclaration() != null) {
    node.getContextDeclaration().apply(this);
  }
{
    boolean localOk=true;
    Object temp[]=node.getConstraintBody().toArray();
    for (int i=0; i < temp.length; i++) {
      ((PConstraintBody)temp[i]).apply(this);
      localOk&=asBoolean(val,temp[i]);
    }
    val=localOk;
  }
  outAConstraint(node);
}


org.argouml.profile.internal.ocl.EvaluateInvariant.caseAIfExpression(AIfExpression)
{
  boolean test=false;
  boolean ret=false;
  inAIfExpression(node);
  if (node.getTIf() != null) {
    node.getTIf().apply(this);
  }
  if (node.getIfBranch() != null) {
    node.getIfBranch().apply(this);
    test=asBoolean(val,node.getIfBranch());
    val=null;
  }
  if (node.getTThen() != null) {
    node.getTThen().apply(this);
  }
  if (node.getThenBranch() != null) {
    node.getThenBranch().apply(this);
    if (test) {
      ret=asBoolean(val,node.getThenBranch());
      val=null;
    }
  }
  if (node.getTElse() != null) {
    node.getTElse().apply(this);
  }
  if (node.getElseBranch() != null) {
    node.getElseBranch().apply(this);
    if (!test) {
      ret=asBoolean(val,node.getThenBranch());
      val=null;
    }
  }
  if (node.getEndif() != null) {
    node.getEndif().apply(this);
  }
  val=ret;
  outAIfExpression(node);
}


org.argouml.profile.internal.ocl.EvaluateInvariant.caseALogicalExpressionTail(ALogicalExpressionTail)
{
  Object left=val;
  val=null;
  inALogicalExpressionTail(node);
  if (node.getLogicalOperator() != null) {
    node.getLogicalOperator().apply(this);
  }
  if (node.getRelationalExpression() != null) {
    node.getRelationalExpression().apply(this);
  }
  Object op=node.getLogicalOperator();
  Object right=val;
  val=null;
  if (left != null && op != null && right != null) {
    if (op instanceof AAndLogicalOperator) {
      val=asBoolean(left,node) && asBoolean(right,node);
    }
 else     if (op instanceof AImpliesLogicalOperator) {
      val=!asBoolean(left,node) || asBoolean(right,node);
    }
 else     if (op instanceof AOrLogicalOperator) {
      val=asBoolean(left,node) || asBoolean(right,node);
    }
 else     if (op instanceof AXorLogicalOperator) {
      val=!asBoolean(left,node) ^ asBoolean(right,node);
    }
 else {
      error(node);
    }
  }
 else {
    error(node);
  }
  outALogicalExpressionTail(node);
}


org.argouml.profile.internal.ocl.EvaluateInvariant.caseARelationalExpressionTail(ARelationalExpressionTail)
{
  Object left=val;
  val=null;
  inARelationalExpressionTail(node);
  if (node.getRelationalOperator() != null) {
    node.getRelationalOperator().apply(this);
  }
  if (node.getAdditiveExpression() != null) {
    node.getAdditiveExpression().apply(this);
  }
  Object op=node.getRelationalOperator();
  Object right=val;
  val=null;
  if (left != null && op != null && right != null) {
    if (op instanceof AEqualRelationalOperator) {
      val=left.equals(right);
    }
 else     if (op instanceof AGteqRelationalOperator) {
      val=asInteger(left,node) >= asInteger(right,node);
    }
 else     if (op instanceof AGtRelationalOperator) {
      val=asInteger(left,node) > asInteger(right,node);
    }
 else     if (op instanceof ALteqRelationalOperator) {
      val=asInteger(left,node) <= asInteger(right,node);
    }
 else     if (op instanceof ALtRelationalOperator) {
      val=asInteger(left,node) < asInteger(right,node);
    }
 else     if (op instanceof ANEqualRelationalOperator) {
      val=!left.equals(right);
    }
 else {
      error(node);
    }
  }
 else {
    error(node);
  }
  outARelationalExpressionTail(node);
}


org.argouml.profile.internal.ocl.EvaluateInvariant.caseAAdditiveExpressionTail(AAdditiveExpressionTail)
{
  Object left=val;
  val=null;
  inAAdditiveExpressionTail(node);
  if (node.getAddOperator() != null) {
    node.getAddOperator().apply(this);
  }
  if (node.getMultiplicativeExpression() != null) {
    node.getMultiplicativeExpression().apply(this);
  }
  Object op=node.getAddOperator();
  Object right=val;
  val=null;
  if (left != null && op != null && right != null) {
    if (op instanceof AMinusAddOperator) {
      val=asInteger(left,node) - asInteger(right,node);
    }
 else     if (op instanceof APlusAddOperator) {
      val=asInteger(left,node) + asInteger(right,node);
    }
 else {
      error(node);
    }
  }
 else {
    error(node);
  }
  outAAdditiveExpressionTail(node);
}


org.argouml.profile.internal.ocl.EvaluateInvariant.caseAMultiplicativeExpressionTail(AMultiplicativeExpressionTail)
{
  Object left=val;
  val=null;
  inAMultiplicativeExpressionTail(node);
  if (node.getMultiplyOperator() != null) {
    node.getMultiplyOperator().apply(this);
  }
  if (node.getUnaryExpression() != null) {
    node.getUnaryExpression().apply(this);
  }
  Object op=node.getMultiplyOperator();
  Object right=val;
  val=null;
  if (left != null && op != null && right != null) {
    if (op instanceof ADivMultiplyOperator) {
      val=asInteger(left,node) / asInteger(right,node);
    }
 else     if (op instanceof AMultMultiplyOperator) {
      val=asInteger(left,node) * asInteger(right,node);
    }
 else {
      error(node);
    }
  }
 else {
    error(node);
  }
  outAMultiplicativeExpressionTail(node);
}


org.argouml.profile.internal.ocl.EvaluateInvariant.caseAUnaryUnaryExpression(AUnaryUnaryExpression)
{
  inAUnaryUnaryExpression(node);
  if (node.getUnaryOperator() != null) {
    node.getUnaryOperator().apply(this);
  }
  if (node.getPostfixExpression() != null) {
    val=null;
    node.getPostfixExpression().apply(this);
  }
  Object op=node.getUnaryOperator();
  if (op instanceof AMinusUnaryOperator) {
    val=-asInteger(val,node);
  }
 else   if (op instanceof ANotUnaryOperator) {
    val=!asBoolean(val,node);
  }
  outAUnaryUnaryExpression(node);
}


org.argouml.profile.internal.ocl.EvaluateInvariant.caseAPostfixExpressionTail(APostfixExpressionTail)
{
  inAPostfixExpressionTail(node);
  if (node.getPostfixExpressionTailBegin() != null) {
    node.getPostfixExpressionTailBegin().apply(this);
  }
  if (node.getFeatureCall() != null) {
    fwd=node.getPostfixExpressionTailBegin();
    node.getFeatureCall().apply(this);
  }
  outAPostfixExpressionTail(node);
}


org.argouml.profile.internal.ocl.EvaluateInvariant.caseAFeaturePrimaryExpression(AFeaturePrimaryExpression)
{
  Object subject=val;
  Object feature=null;
  Vector<Object> parameters=null;
  inAFeaturePrimaryExpression(node);
  if (node.getPathName() != null) {
    node.getPathName().apply(this);
    feature=node.getPathName().toString().trim();
  }
  if (node.getTimeExpression() != null) {
    node.getTimeExpression().apply(this);
  }
  if (node.getQualifiers() != null) {
    node.getQualifiers().apply(this);
  }
  if (node.getFeatureCallParameters() != null) {
    val=null;
    node.getFeatureCallParameters().apply(this);
    parameters=(Vector<Object>)val;
  }
  if (subject == null) {
    val=vt.get(feature);
  }
 else {
    val=runFeatureCall(subject,feature,fwd,parameters);
  }
  outAFeaturePrimaryExpression(node);
}


org.argouml.profile.internal.ocl.EvaluateInvariant.outAEmptyFeatureCallParameters(AEmptyFeatureCallParameters)
{
  val=new Vector<Object>();
  defaultOut(node);
}


org.argouml.profile.internal.ocl.EvaluateInvariant.caseAFeatureCallParameters(AFeatureCallParameters)
{
  inAFeatureCallParameters(node);
  if (node.getLPar() != null) {
    node.getLPar().apply(this);
  }
  boolean hasDeclarator=false;
  if (node.getDeclarator() != null) {
    node.getDeclarator().apply(this);
    hasDeclarator=true;
  }
  if (node.getActualParameterList() != null) {
    Vector<String> vars=null;
    if (hasDeclarator) {
      Vector<Object> ret=new Vector<Object>();
      vars=(Vector<String>)val;
      final PExpression exp=((AActualParameterList)node.getActualParameterList()).getExpression();
      ret.add(vars);
      ret.add(exp);
      ret.add(new LambdaEvaluator(){
        /** 
 * @see org.argouml.profile.internal.ocl.LambdaEvaluator#evaluate(java.util.HashMap,java.lang.Object)
 */
        public Object evaluate(        HashMap<String,Object> vti,        Object expi){
          Object old_val=EvaluateInvariant.this.val;
          EvaluateInvariant.this.val=null;
          ((PExpression)expi).apply(EvaluateInvariant.this);
          Object reti=EvaluateInvariant.this.val;
          EvaluateInvariant.this.val=old_val;
          return reti;
        }
      }
);
      val=ret;
    }
 else {
      node.getActualParameterList().apply(this);
    }
  }
  if (node.getRPar() != null) {
    node.getRPar().apply(this);
  }
  outAFeatureCallParameters(node);
}


org.argouml.profile.internal.ocl.EvaluateInvariant.caseAStandardDeclarator(AStandardDeclarator)
{
  inAStandardDeclarator(node);
  Vector<String> vars=new Vector<String>();
  if (node.getName() != null) {
    node.getName().apply(this);
    vars.add(node.getName().toString().trim());
  }
{
    Object temp[]=node.getDeclaratorTail().toArray();
    for (int i=0; i < temp.length; i++) {
      ((PDeclaratorTail)temp[i]).apply(this);
      vars.add(((ADeclaratorTail)temp[i]).getName().toString().trim());
    }
    val=vars;
  }
  if (node.getDeclaratorTypeDeclaration() != null) {
    node.getDeclaratorTypeDeclaration().apply(this);
  }
  if (node.getBar() != null) {
    node.getBar().apply(this);
  }
  outAStandardDeclarator(node);
}


org.argouml.profile.internal.ocl.EvaluateInvariant.outAIterateDeclarator(AIterateDeclarator)
{
  val=new Vector<String>();
  defaultOut(node);
}


org.argouml.profile.internal.ocl.EvaluateInvariant.caseALetExpression(ALetExpression)
{
  Object name=null;
  Object value=null;
  inALetExpression(node);
  if (node.getTLet() != null) {
    node.getTLet().apply(this);
  }
  if (node.getName() != null) {
    node.getName().apply(this);
    name=node.getName().toString().trim();
  }
  if (node.getLetExpressionTypeDeclaration() != null) {
    node.getLetExpressionTypeDeclaration().apply(this);
  }
  if (node.getEqual() != null) {
    node.getEqual().apply(this);
  }
  if (node.getExpression() != null) {
    node.getExpression().apply(this);
  }
  if (node.getTIn() != null) {
    node.getTIn().apply(this);
  }
  vt.put(("" + name).trim(),value);
  val=value;
  outALetExpression(node);
}


org.argouml.profile.internal.ocl.EvaluateInvariant.outAStringLiteral(AStringLiteral)
{
  val=node.getStringLit().getText();
  defaultOut(node);
}


org.argouml.profile.internal.ocl.EvaluateInvariant.outARealLiteral(ARealLiteral)
{
  val=(int)Double.parseDouble(node.getReal().getText());
  defaultOut(node);
}


org.argouml.profile.internal.ocl.EvaluateInvariant.outAIntegerLiteral(AIntegerLiteral)
{
  val=Integer.parseInt(node.getInt().getText());
  defaultOut(node);
}


org.argouml.profile.internal.ocl.EvaluateInvariant.outABooleanLiteral(ABooleanLiteral)
{
  val=Boolean.parseBoolean(node.getBool().getText());
  defaultOut(node);
}


org.argouml.profile.internal.ocl.EvaluateInvariant.outAEnumLiteral(AEnumLiteral)
{
  val=null;
  defaultOut(node);
}


org.argouml.profile.internal.ocl.EvaluateInvariant.outALiteralCollection(ALiteralCollection)
{
  val=new Vector<Object>();
  defaultOut(node);
}


org.argouml.profile.internal.ocl.EvaluateInvariant.caseAFeatureCall(AFeatureCall)
{
  Object subject=val;
  Object feature=null;
  Vector<Object> parameters=null;
  inAFeatureCall(node);
  if (node.getPathName() != null) {
    node.getPathName().apply(this);
    feature=node.getPathName().toString().trim();
  }
  if (node.getTimeExpression() != null) {
    node.getTimeExpression().apply(this);
  }
  if (node.getQualifiers() != null) {
    node.getQualifiers().apply(this);
  }
  if (node.getFeatureCallParameters() != null) {
    val=null;
    node.getFeatureCallParameters().apply(this);
    parameters=(Vector<Object>)val;
  }
 else {
    parameters=new Vector<Object>();
  }
  val=runFeatureCall(subject,feature,fwd,parameters);
  outAFeatureCall(node);
}


org.argouml.profile.internal.ocl.EvaluateInvariant.caseAActualParameterList(AActualParameterList)
{
  Vector<Object> list=new Vector<Object>();
  inAActualParameterList(node);
  if (node.getExpression() != null) {
    val=null;
    node.getExpression().apply(this);
    list.add(val);
  }
{
    Object temp[]=node.getActualParameterListTail().toArray();
    for (int i=0; i < temp.length; i++) {
      val=null;
      ((PActualParameterListTail)temp[i]).apply(this);
      list.add(val);
    }
  }
  val=list;
  outAActualParameterList(node);
}


org.argouml.profile.internal.ocl.EvaluateInvariant.asBoolean(Object,Object)
{
  if (value instanceof Boolean) {
    return (Boolean)value;
  }
 else {
    errorNotType(node,"Boolean",false);
    return false;
  }
}


org.argouml.profile.internal.ocl.EvaluateInvariant.asInteger(Object,Object)
{
  if (value instanceof Integer) {
    return (Integer)value;
  }
 else {
    errorNotType(node,"integer",0);
    return 0;
  }
}


org.argouml.profile.internal.ocl.EvaluateInvariant.runFeatureCall(Object,Object,Object,Vector<Object>)
{
  if (parameters == null) {
    parameters=new Vector<Object>();
  }
  return interp.invokeFeature(vt,subject,feature.toString().trim(),type.toString().trim(),parameters.toArray());
}


org.argouml.profile.internal.ocl.EvaluateInvariant.errorNotType(Object,String,Object)
{
  LOG.error("OCL does not evaluate to a " + type + " expression!! Exp: "+ node+ " Val: "+ val);
  val=dft;
}


org.argouml.profile.internal.ocl.EvaluateInvariant.error(Object)
{
  LOG.error("Unknown error processing OCL exp!! Exp: " + node + " Val: "+ val);
  val=null;
}


-------------------------------------
Reading file: TestCases/Input/ArgoUML/SVNFilesSideBySide/15248/trunk_src_argouml-app_src_org_argouml_profile_internal_ocl_EvaluateInvariant.java.v15248
org.argouml.profile.internal.ocl.EvaluateInvariant.EvaluateInvariant	2	Object	ModelInterpreter	
org.argouml.profile.internal.ocl.EvaluateInvariant.isOK	0	
org.argouml.profile.internal.ocl.EvaluateInvariant.outStart	1	Start	
org.argouml.profile.internal.ocl.EvaluateInvariant.defaultIn	1	Node	
org.argouml.profile.internal.ocl.EvaluateInvariant.caseAConstraint	1	AConstraint	
org.argouml.profile.internal.ocl.EvaluateInvariant.caseAIfExpression	1	AIfExpression	
org.argouml.profile.internal.ocl.EvaluateInvariant.caseALogicalExpressionTail	1	ALogicalExpressionTail	
org.argouml.profile.internal.ocl.EvaluateInvariant.caseARelationalExpressionTail	1	ARelationalExpressionTail	
org.argouml.profile.internal.ocl.EvaluateInvariant.caseAAdditiveExpressionTail	1	AAdditiveExpressionTail	
org.argouml.profile.internal.ocl.EvaluateInvariant.caseAMultiplicativeExpressionTail	1	AMultiplicativeExpressionTail	
org.argouml.profile.internal.ocl.EvaluateInvariant.caseAUnaryUnaryExpression	1	AUnaryUnaryExpression	
org.argouml.profile.internal.ocl.EvaluateInvariant.caseAPostfixExpressionTail	1	APostfixExpressionTail	
org.argouml.profile.internal.ocl.EvaluateInvariant.caseAFeaturePrimaryExpression	1	AFeaturePrimaryExpression	
org.argouml.profile.internal.ocl.EvaluateInvariant.outAEmptyFeatureCallParameters	1	AEmptyFeatureCallParameters	
org.argouml.profile.internal.ocl.EvaluateInvariant.caseAFeatureCallParameters	1	AFeatureCallParameters	
org.argouml.profile.internal.ocl.EvaluateInvariant.caseAStandardDeclarator	1	AStandardDeclarator	
org.argouml.profile.internal.ocl.EvaluateInvariant.outAIterateDeclarator	1	AIterateDeclarator	
org.argouml.profile.internal.ocl.EvaluateInvariant.caseALetExpression	1	ALetExpression	
org.argouml.profile.internal.ocl.EvaluateInvariant.outAStringLiteral	1	AStringLiteral	
org.argouml.profile.internal.ocl.EvaluateInvariant.outARealLiteral	1	ARealLiteral	
org.argouml.profile.internal.ocl.EvaluateInvariant.outAIntegerLiteral	1	AIntegerLiteral	
org.argouml.profile.internal.ocl.EvaluateInvariant.outABooleanLiteral	1	ABooleanLiteral	
org.argouml.profile.internal.ocl.EvaluateInvariant.outAEnumLiteral	1	AEnumLiteral	
org.argouml.profile.internal.ocl.EvaluateInvariant.outALiteralCollection	1	ALiteralCollection	
org.argouml.profile.internal.ocl.EvaluateInvariant.caseAFeatureCall	1	AFeatureCall	
org.argouml.profile.internal.ocl.EvaluateInvariant.caseAActualParameterList	1	AActualParameterList	
org.argouml.profile.internal.ocl.EvaluateInvariant.asBoolean	2	Object	Object	
org.argouml.profile.internal.ocl.EvaluateInvariant.asInteger	2	Object	Object	
org.argouml.profile.internal.ocl.EvaluateInvariant.runFeatureCall	4	Object	Object	Object	Vector<Object>	
org.argouml.profile.internal.ocl.EvaluateInvariant.errorNotType	3	Object	String	Object	
org.argouml.profile.internal.ocl.EvaluateInvariant.error	1	Object	
List of methods:
org.argouml.profile.internal.ocl.EvaluateInvariant.EvaluateInvariant(Object,ModelInterpreter)
{
  this.interp=mi;
  vt.put("self",modelElement);
}


org.argouml.profile.internal.ocl.EvaluateInvariant.isOK()
{
  return ok;
}


org.argouml.profile.internal.ocl.EvaluateInvariant.outStart(Start)
{
  ok=asBoolean(val,node);
}


org.argouml.profile.internal.ocl.EvaluateInvariant.defaultIn(Node)
{
}


org.argouml.profile.internal.ocl.EvaluateInvariant.caseAConstraint(AConstraint)
{
  inAConstraint(node);
  if (node.getContextDeclaration() != null) {
    node.getContextDeclaration().apply(this);
  }
{
    boolean localOk=true;
    Object temp[]=node.getConstraintBody().toArray();
    for (int i=0; i < temp.length; i++) {
      ((PConstraintBody)temp[i]).apply(this);
      localOk&=asBoolean(val,temp[i]);
    }
    val=localOk;
  }
  outAConstraint(node);
}


org.argouml.profile.internal.ocl.EvaluateInvariant.caseAIfExpression(AIfExpression)
{
  boolean test=false;
  boolean ret=false;
  inAIfExpression(node);
  if (node.getTIf() != null) {
    node.getTIf().apply(this);
  }
  if (node.getIfBranch() != null) {
    node.getIfBranch().apply(this);
    test=asBoolean(val,node.getIfBranch());
    val=null;
  }
  if (node.getTThen() != null) {
    node.getTThen().apply(this);
  }
  if (node.getThenBranch() != null) {
    node.getThenBranch().apply(this);
    if (test) {
      ret=asBoolean(val,node.getThenBranch());
      val=null;
    }
  }
  if (node.getTElse() != null) {
    node.getTElse().apply(this);
  }
  if (node.getElseBranch() != null) {
    node.getElseBranch().apply(this);
    if (!test) {
      ret=asBoolean(val,node.getThenBranch());
      val=null;
    }
  }
  if (node.getEndif() != null) {
    node.getEndif().apply(this);
  }
  val=ret;
  outAIfExpression(node);
}


org.argouml.profile.internal.ocl.EvaluateInvariant.caseALogicalExpressionTail(ALogicalExpressionTail)
{
  Object left=val;
  val=null;
  inALogicalExpressionTail(node);
  if (node.getLogicalOperator() != null) {
    node.getLogicalOperator().apply(this);
  }
  if (node.getRelationalExpression() != null) {
    node.getRelationalExpression().apply(this);
  }
  Object op=node.getLogicalOperator();
  Object right=val;
  val=null;
  if (left != null && op != null && right != null) {
    if (op instanceof AAndLogicalOperator) {
      val=asBoolean(left,node) && asBoolean(right,node);
    }
 else     if (op instanceof AImpliesLogicalOperator) {
      val=!asBoolean(left,node) || asBoolean(right,node);
    }
 else     if (op instanceof AOrLogicalOperator) {
      val=asBoolean(left,node) || asBoolean(right,node);
    }
 else     if (op instanceof AXorLogicalOperator) {
      val=!asBoolean(left,node) ^ asBoolean(right,node);
    }
 else {
      error(node);
    }
  }
 else {
    error(node);
  }
  outALogicalExpressionTail(node);
}


org.argouml.profile.internal.ocl.EvaluateInvariant.caseARelationalExpressionTail(ARelationalExpressionTail)
{
  Object left=val;
  val=null;
  inARelationalExpressionTail(node);
  if (node.getRelationalOperator() != null) {
    node.getRelationalOperator().apply(this);
  }
  if (node.getAdditiveExpression() != null) {
    node.getAdditiveExpression().apply(this);
  }
  Object op=node.getRelationalOperator();
  Object right=val;
  val=null;
  if (left != null && op != null && right != null) {
    if (op instanceof AEqualRelationalOperator) {
      val=left.equals(right);
    }
 else     if (op instanceof AGteqRelationalOperator) {
      val=asInteger(left,node) >= asInteger(right,node);
    }
 else     if (op instanceof AGtRelationalOperator) {
      val=asInteger(left,node) > asInteger(right,node);
    }
 else     if (op instanceof ALteqRelationalOperator) {
      val=asInteger(left,node) <= asInteger(right,node);
    }
 else     if (op instanceof ALtRelationalOperator) {
      val=asInteger(left,node) < asInteger(right,node);
    }
 else     if (op instanceof ANEqualRelationalOperator) {
      val=!left.equals(right);
    }
 else {
      error(node);
    }
  }
 else {
    error(node);
  }
  outARelationalExpressionTail(node);
}


org.argouml.profile.internal.ocl.EvaluateInvariant.caseAAdditiveExpressionTail(AAdditiveExpressionTail)
{
  Object left=val;
  val=null;
  inAAdditiveExpressionTail(node);
  if (node.getAddOperator() != null) {
    node.getAddOperator().apply(this);
  }
  if (node.getMultiplicativeExpression() != null) {
    node.getMultiplicativeExpression().apply(this);
  }
  Object op=node.getAddOperator();
  Object right=val;
  val=null;
  if (left != null && op != null && right != null) {
    if (op instanceof AMinusAddOperator) {
      val=asInteger(left,node) - asInteger(right,node);
    }
 else     if (op instanceof APlusAddOperator) {
      val=asInteger(left,node) + asInteger(right,node);
    }
 else {
      error(node);
    }
  }
 else {
    error(node);
  }
  outAAdditiveExpressionTail(node);
}


org.argouml.profile.internal.ocl.EvaluateInvariant.caseAMultiplicativeExpressionTail(AMultiplicativeExpressionTail)
{
  Object left=val;
  val=null;
  inAMultiplicativeExpressionTail(node);
  if (node.getMultiplyOperator() != null) {
    node.getMultiplyOperator().apply(this);
  }
  if (node.getUnaryExpression() != null) {
    node.getUnaryExpression().apply(this);
  }
  Object op=node.getMultiplyOperator();
  Object right=val;
  val=null;
  if (left != null && op != null && right != null) {
    if (op instanceof ADivMultiplyOperator) {
      val=asInteger(left,node) / asInteger(right,node);
    }
 else     if (op instanceof AMultMultiplyOperator) {
      val=asInteger(left,node) * asInteger(right,node);
    }
 else {
      error(node);
    }
  }
 else {
    error(node);
  }
  outAMultiplicativeExpressionTail(node);
}


org.argouml.profile.internal.ocl.EvaluateInvariant.caseAUnaryUnaryExpression(AUnaryUnaryExpression)
{
  inAUnaryUnaryExpression(node);
  if (node.getUnaryOperator() != null) {
    node.getUnaryOperator().apply(this);
  }
  if (node.getPostfixExpression() != null) {
    val=null;
    node.getPostfixExpression().apply(this);
  }
  Object op=node.getUnaryOperator();
  if (op instanceof AMinusUnaryOperator) {
    val=-asInteger(val,node);
  }
 else   if (op instanceof ANotUnaryOperator) {
    val=!asBoolean(val,node);
  }
  outAUnaryUnaryExpression(node);
}


org.argouml.profile.internal.ocl.EvaluateInvariant.caseAPostfixExpressionTail(APostfixExpressionTail)
{
  inAPostfixExpressionTail(node);
  if (node.getPostfixExpressionTailBegin() != null) {
    node.getPostfixExpressionTailBegin().apply(this);
  }
  if (node.getFeatureCall() != null) {
    fwd=node.getPostfixExpressionTailBegin();
    node.getFeatureCall().apply(this);
  }
  outAPostfixExpressionTail(node);
}


org.argouml.profile.internal.ocl.EvaluateInvariant.caseAFeaturePrimaryExpression(AFeaturePrimaryExpression)
{
  Object subject=val;
  Object feature=null;
  Vector<Object> parameters=null;
  inAFeaturePrimaryExpression(node);
  if (node.getPathName() != null) {
    node.getPathName().apply(this);
    feature=node.getPathName().toString().trim();
  }
  if (node.getTimeExpression() != null) {
    node.getTimeExpression().apply(this);
  }
  if (node.getQualifiers() != null) {
    node.getQualifiers().apply(this);
  }
  if (node.getFeatureCallParameters() != null) {
    val=null;
    node.getFeatureCallParameters().apply(this);
    parameters=(Vector<Object>)val;
  }
  if (subject == null) {
    val=vt.get(feature);
  }
 else {
    val=runFeatureCall(subject,feature,fwd,parameters);
  }
  outAFeaturePrimaryExpression(node);
}


org.argouml.profile.internal.ocl.EvaluateInvariant.outAEmptyFeatureCallParameters(AEmptyFeatureCallParameters)
{
  val=new Vector<Object>();
  defaultOut(node);
}


org.argouml.profile.internal.ocl.EvaluateInvariant.caseAFeatureCallParameters(AFeatureCallParameters)
{
  inAFeatureCallParameters(node);
  if (node.getLPar() != null) {
    node.getLPar().apply(this);
  }
  boolean hasDeclarator=false;
  if (node.getDeclarator() != null) {
    node.getDeclarator().apply(this);
    hasDeclarator=true;
  }
  if (node.getActualParameterList() != null) {
    Vector<String> vars=null;
    if (hasDeclarator) {
      Vector<Object> ret=new Vector<Object>();
      vars=(Vector<String>)val;
      final PExpression exp=((AActualParameterList)node.getActualParameterList()).getExpression();
      ret.add(vars);
      ret.add(exp);
      ret.add(new LambdaEvaluator(){
        /** 
 * @see org.argouml.profile.internal.ocl.LambdaEvaluator#evaluate(java.util.HashMap,java.lang.Object)
 */
        public Object evaluate(        HashMap<String,Object> vti,        Object expi){
          Object old_val=EvaluateInvariant.this.val;
          EvaluateInvariant.this.val=null;
          ((PExpression)expi).apply(EvaluateInvariant.this);
          Object reti=EvaluateInvariant.this.val;
          EvaluateInvariant.this.val=old_val;
          return reti;
        }
      }
);
      val=ret;
    }
 else {
      node.getActualParameterList().apply(this);
    }
  }
  if (node.getRPar() != null) {
    node.getRPar().apply(this);
  }
  outAFeatureCallParameters(node);
}


org.argouml.profile.internal.ocl.EvaluateInvariant.caseAStandardDeclarator(AStandardDeclarator)
{
  inAStandardDeclarator(node);
  Vector<String> vars=new Vector<String>();
  if (node.getName() != null) {
    node.getName().apply(this);
    vars.add(node.getName().toString().trim());
  }
{
    Object temp[]=node.getDeclaratorTail().toArray();
    for (int i=0; i < temp.length; i++) {
      ((PDeclaratorTail)temp[i]).apply(this);
      vars.add(((ADeclaratorTail)temp[i]).getName().toString().trim());
    }
    val=vars;
  }
  if (node.getDeclaratorTypeDeclaration() != null) {
    node.getDeclaratorTypeDeclaration().apply(this);
  }
  if (node.getBar() != null) {
    node.getBar().apply(this);
  }
  outAStandardDeclarator(node);
}


org.argouml.profile.internal.ocl.EvaluateInvariant.outAIterateDeclarator(AIterateDeclarator)
{
  val=new Vector<String>();
  defaultOut(node);
}


org.argouml.profile.internal.ocl.EvaluateInvariant.caseALetExpression(ALetExpression)
{
  Object name=null;
  Object value=null;
  inALetExpression(node);
  if (node.getTLet() != null) {
    node.getTLet().apply(this);
  }
  if (node.getName() != null) {
    node.getName().apply(this);
    name=node.getName().toString().trim();
  }
  if (node.getLetExpressionTypeDeclaration() != null) {
    node.getLetExpressionTypeDeclaration().apply(this);
  }
  if (node.getEqual() != null) {
    node.getEqual().apply(this);
  }
  if (node.getExpression() != null) {
    node.getExpression().apply(this);
  }
  if (node.getTIn() != null) {
    node.getTIn().apply(this);
  }
  vt.put(("" + name).trim(),value);
  val=value;
  outALetExpression(node);
}


org.argouml.profile.internal.ocl.EvaluateInvariant.outAStringLiteral(AStringLiteral)
{
  val=node.getStringLit().getText();
  defaultOut(node);
}


org.argouml.profile.internal.ocl.EvaluateInvariant.outARealLiteral(ARealLiteral)
{
  val=(int)Double.parseDouble(node.getReal().getText());
  defaultOut(node);
}


org.argouml.profile.internal.ocl.EvaluateInvariant.outAIntegerLiteral(AIntegerLiteral)
{
  val=Integer.parseInt(node.getInt().getText());
  defaultOut(node);
}


org.argouml.profile.internal.ocl.EvaluateInvariant.outABooleanLiteral(ABooleanLiteral)
{
  val=Boolean.parseBoolean(node.getBool().getText());
  defaultOut(node);
}


org.argouml.profile.internal.ocl.EvaluateInvariant.outAEnumLiteral(AEnumLiteral)
{
  val=null;
  defaultOut(node);
}


org.argouml.profile.internal.ocl.EvaluateInvariant.outALiteralCollection(ALiteralCollection)
{
  val=new Vector<Object>();
  defaultOut(node);
}


org.argouml.profile.internal.ocl.EvaluateInvariant.caseAFeatureCall(AFeatureCall)
{
  Object subject=val;
  Object feature=null;
  Vector<Object> parameters=null;
  inAFeatureCall(node);
  if (node.getPathName() != null) {
    node.getPathName().apply(this);
    feature=node.getPathName().toString().trim();
  }
  if (node.getTimeExpression() != null) {
    node.getTimeExpression().apply(this);
  }
  if (node.getQualifiers() != null) {
    node.getQualifiers().apply(this);
  }
  if (node.getFeatureCallParameters() != null) {
    val=null;
    node.getFeatureCallParameters().apply(this);
    parameters=(Vector<Object>)val;
  }
 else {
    parameters=new Vector<Object>();
  }
  val=runFeatureCall(subject,feature,fwd,parameters);
  outAFeatureCall(node);
}


org.argouml.profile.internal.ocl.EvaluateInvariant.caseAActualParameterList(AActualParameterList)
{
  Vector<Object> list=new Vector<Object>();
  inAActualParameterList(node);
  if (node.getExpression() != null) {
    val=null;
    node.getExpression().apply(this);
    list.add(val);
  }
{
    Object temp[]=node.getActualParameterListTail().toArray();
    for (int i=0; i < temp.length; i++) {
      val=null;
      ((PActualParameterListTail)temp[i]).apply(this);
      list.add(val);
    }
  }
  val=list;
  outAActualParameterList(node);
}


org.argouml.profile.internal.ocl.EvaluateInvariant.asBoolean(Object,Object)
{
  if (value instanceof Boolean) {
    return (Boolean)value;
  }
 else {
    errorNotType(node,"Boolean",false);
    return false;
  }
}


org.argouml.profile.internal.ocl.EvaluateInvariant.asInteger(Object,Object)
{
  if (value instanceof Integer) {
    return (Integer)value;
  }
 else {
    errorNotType(node,"integer",0);
    return 0;
  }
}


org.argouml.profile.internal.ocl.EvaluateInvariant.runFeatureCall(Object,Object,Object,Vector<Object>)
{
  if (parameters == null) {
    parameters=new Vector<Object>();
  }
  return interp.invokeFeature(vt,subject,feature.toString().trim(),type.toString().trim(),parameters.toArray());
}


org.argouml.profile.internal.ocl.EvaluateInvariant.errorNotType(Object,String,Object)
{
  LOG.error("OCL does not evaluate to a " + type + " expression!! Exp: "+ node+ " Val: "+ val);
  val=dft;
}


org.argouml.profile.internal.ocl.EvaluateInvariant.error(Object)
{
  LOG.error("Unknown error processing OCL exp!! Exp: " + node + " Val: "+ val);
  val=null;
}


-------------------------------------
ListOfCorpusMethodsPreviousVersion size: 31
ListOfCorpusMethodsCurrentVersion size: 31
Gold set methods: 

##########################################################

File Name and Type: R	trunk_src_argouml-app_src_org_argouml_profile_internal_ocl_uml14_ModelAccessModelInterpreter.java
Reading file: TestCases/Input/ArgoUML/SVNFilesSideBySide/15248/trunk_src_argouml-app_src_org_argouml_profile_internal_ocl_uml14_ModelAccessModelInterpreter.java.vPrevious
org.argouml.profile.internal.ocl.uml14.ModelAccessModelInterpreter.invokeFeature	5	HashMap<String,Object>	Object	String	String	Object[]	
List of methods:
org.argouml.profile.internal.ocl.uml14.ModelAccessModelInterpreter.invokeFeature(HashMap<String,Object>,Object,String,String,Object[])
{
  if (subject == null) {
    subject=vt.get("self");
  }
  if (Model.getFacade().isAModelElement(subject)) {
    if (type.equals(".")) {
      if (feature.equals("name")) {
        return Model.getFacade().getName(subject);
      }
    }
  }
  if (Model.getFacade().isAClass(subject)) {
    if (type.equals(".")) {
      if (feature.equals("feature")) {
        Set<Object> ret=new HashSet<Object>();
        ret.addAll(Model.getCoreHelper().getAllAttributes(subject));
        ret.addAll(Model.getCoreHelper().getOperationsInh(subject));
        return ret;
      }
    }
  }
  return null;
}


-------------------------------------
Reading file: TestCases/Input/ArgoUML/SVNFilesSideBySide/15248/trunk_src_argouml-app_src_org_argouml_profile_internal_ocl_uml14_ModelAccessModelInterpreter.java.v15248
org.argouml.profile.internal.ocl.uml14.ModelAccessModelInterpreter.invokeFeature	5	HashMap<String,Object>	Object	String	String	Object[]	
List of methods:
org.argouml.profile.internal.ocl.uml14.ModelAccessModelInterpreter.invokeFeature(HashMap<String,Object>,Object,String,String,Object[])
{
  if (subject == null) {
    subject=vt.get("self");
  }
  if (Model.getFacade().isAModelElement(subject)) {
    if (type.equals(".")) {
      if (feature.equals("name")) {
        return Model.getFacade().getName(subject);
      }
    }
  }
  if (Model.getFacade().isAClass(subject)) {
    if (type.equals(".")) {
      if (feature.equals("feature")) {
        Set<Object> ret=new HashSet<Object>();
        ret.addAll(Model.getCoreHelper().getAllAttributes(subject));
        ret.addAll(Model.getCoreHelper().getOperationsInh(subject));
        return ret;
      }
    }
  }
  return null;
}


-------------------------------------
ListOfCorpusMethodsPreviousVersion size: 1
ListOfCorpusMethodsCurrentVersion size: 1
Gold set methods: 

##########################################################

File Name and Type: M	trunk_src_argouml-app_src_org_argouml_moduleloader_ModuleLoader2.java
Reading file: TestCases/Input/ArgoUML/SVNFilesSideBySide/15248/trunk_src_argouml-app_src_org_argouml_moduleloader_ModuleLoader2.java.vPrevious
org.argouml.moduleloader.ModuleLoader2.ModuleLoader2	0	
org.argouml.moduleloader.ModuleLoader2.getInstance	0	
org.argouml.moduleloader.ModuleLoader2.getDetailsTabs	0	
org.argouml.moduleloader.ModuleLoader2.availableModules	0	
org.argouml.moduleloader.ModuleLoader2.doLoad	1	boolean	
org.argouml.moduleloader.ModuleLoader2.isEnabled	1	String	
org.argouml.moduleloader.ModuleLoader2.allModules	0	
org.argouml.moduleloader.ModuleLoader2.isSelected	1	String	
org.argouml.moduleloader.ModuleLoader2.isSelectedInternal	1	String	
org.argouml.moduleloader.ModuleLoader2.setSelected	2	String	boolean	
org.argouml.moduleloader.ModuleLoader2.setSelectedInternal	2	String	boolean	
org.argouml.moduleloader.ModuleLoader2.getDescription	1	String	
org.argouml.moduleloader.ModuleLoader2.getDescriptionInternal	1	String	
org.argouml.moduleloader.ModuleLoader2.doInternal	1	boolean	
org.argouml.moduleloader.ModuleLoader2.isEnabledInternal	1	String	
org.argouml.moduleloader.ModuleLoader2.findModule	1	String	
org.argouml.moduleloader.ModuleLoader2.huntForModules	0	
org.argouml.moduleloader.ModuleLoader2.huntForModulesFromExtensionDir	0	
org.argouml.moduleloader.ModuleLoader2.getExtensionLocations	0	
org.argouml.moduleloader.ModuleLoader2.huntModulesFromNamedDirectory	1	String	
org.argouml.moduleloader.ModuleLoader2.processJarFile	2	ClassLoader	File	
org.argouml.moduleloader.ModuleLoader2.processEntry	2	ClassLoader	String	
org.argouml.moduleloader.ModuleLoader2.addClass	1	String	
org.argouml.moduleloader.ModuleLoader2.addClass	2	ClassLoader	String	
org.argouml.moduleloader.ModuleLoader2.addModule	1	ModuleInterface	
org.argouml.moduleloader.ModuleLoader2.JarFileFilter.accept	1	File	
org.argouml.moduleloader.ModuleStatus.isEnabled	0	
org.argouml.moduleloader.ModuleStatus.setEnabled	0	
org.argouml.moduleloader.ModuleStatus.setDisabled	0	
org.argouml.moduleloader.ModuleStatus.isSelected	0	
org.argouml.moduleloader.ModuleStatus.setSelected	0	
org.argouml.moduleloader.ModuleStatus.setUnselect	0	
org.argouml.moduleloader.ModuleStatus.setSelected	1	boolean	
List of methods:
org.argouml.moduleloader.ModuleLoader2.ModuleLoader2()
{
  moduleStatus=new HashMap<ModuleInterface,ModuleStatus>();
}


org.argouml.moduleloader.ModuleLoader2.getInstance()
{
  return INSTANCE;
}


org.argouml.moduleloader.ModuleLoader2.getDetailsTabs()
{
  List<AbstractArgoJPanel> result=new ArrayList<AbstractArgoJPanel>();
  for (  ModuleInterface module : getInstance().availableModules()) {
    ModuleStatus status=moduleStatus.get(module);
    if (status == null) {
      continue;
    }
    if (status.isEnabled()) {
      if (module instanceof DetailsTabProvider) {
        result.addAll(((DetailsTabProvider)module).getDetailsTabs());
      }
    }
  }
  return result;
}


org.argouml.moduleloader.ModuleLoader2.availableModules()
{
  return Collections.unmodifiableCollection(moduleStatus.keySet());
}


org.argouml.moduleloader.ModuleLoader2.doLoad(boolean)
{
  getInstance().doInternal(failingAllowed);
}


org.argouml.moduleloader.ModuleLoader2.isEnabled(String)
{
  return getInstance().isEnabledInternal(name);
}


org.argouml.moduleloader.ModuleLoader2.allModules()
{
  Collection<String> coll=new HashSet<String>();
  for (  ModuleInterface mf : getInstance().availableModules()) {
    coll.add(mf.getName());
  }
  return coll;
}


org.argouml.moduleloader.ModuleLoader2.isSelected(String)
{
  return getInstance().isSelectedInternal(name);
}


org.argouml.moduleloader.ModuleLoader2.isSelectedInternal(String)
{
  Map.Entry<ModuleInterface,ModuleStatus> entry=findModule(name);
  if (entry != null) {
    ModuleStatus status=entry.getValue();
    if (status == null) {
      return false;
    }
    return status.isSelected();
  }
  return false;
}


org.argouml.moduleloader.ModuleLoader2.setSelected(String,boolean)
{
  getInstance().setSelectedInternal(name,value);
}


org.argouml.moduleloader.ModuleLoader2.setSelectedInternal(String,boolean)
{
  Map.Entry<ModuleInterface,ModuleStatus> entry=findModule(name);
  if (entry != null) {
    ModuleStatus status=entry.getValue();
    status.setSelected(value);
  }
}


org.argouml.moduleloader.ModuleLoader2.getDescription(String)
{
  return getInstance().getDescriptionInternal(name);
}


org.argouml.moduleloader.ModuleLoader2.getDescriptionInternal(String)
{
  Map.Entry<ModuleInterface,ModuleStatus> entry=findModule(name);
  if (entry == null) {
    throw new IllegalArgumentException("Module does not exist.");
  }
  ModuleInterface module=entry.getKey();
  StringBuffer sb=new StringBuffer();
  String desc=module.getInfo(ModuleInterface.DESCRIPTION);
  if (desc != null) {
    sb.append(desc);
    sb.append("\n\n");
  }
  String author=module.getInfo(ModuleInterface.AUTHOR);
  if (author != null) {
    sb.append("Author: ").append(author);
    sb.append("\n");
  }
  String version=module.getInfo(ModuleInterface.VERSION);
  if (version != null) {
    sb.append("Version: ").append(version);
    sb.append("\n");
  }
  return sb.toString();
}


org.argouml.moduleloader.ModuleLoader2.doInternal(boolean)
{
  huntForModules();
  boolean someModuleSucceeded;
  do {
    someModuleSucceeded=false;
    for (    ModuleInterface module : getInstance().availableModules()) {
      ModuleStatus status=moduleStatus.get(module);
      if (status == null) {
        continue;
      }
      if (!status.isEnabled() && status.isSelected()) {
        try {
          if (module.enable()) {
            someModuleSucceeded=true;
            status.setEnabled();
          }
        }
 catch (        Throwable e) {
          LOG.info("Exception or error while trying to " + "enable module " + module.getName(),e);
        }
      }
 else       if (status.isEnabled() && !status.isSelected()) {
        try {
          if (module.disable()) {
            someModuleSucceeded=true;
            status.setDisabled();
          }
        }
 catch (        Throwable e) {
          LOG.info("Exception or error while trying to " + "disable module " + module.getName(),e);
        }
      }
    }
  }
 while (someModuleSucceeded);
  if (!failingAllowed) {
    for (    ModuleInterface module : getInstance().availableModules()) {
      ModuleStatus status=moduleStatus.get(module);
      if (status == null) {
        continue;
      }
      if (status.isEnabled() && status.isSelected()) {
        continue;
      }
      if (!status.isEnabled() && !status.isSelected()) {
        continue;
      }
      if (status.isSelected()) {
        LOG.warn("ModuleLoader was not able to enable module " + module.getName());
      }
 else {
        LOG.warn("ModuleLoader was not able to disable module " + module.getName());
      }
    }
  }
}


org.argouml.moduleloader.ModuleLoader2.isEnabledInternal(String)
{
  Map.Entry<ModuleInterface,ModuleStatus> entry=findModule(name);
  if (entry != null) {
    ModuleStatus status=entry.getValue();
    if (status == null) {
      return false;
    }
    return status.isEnabled();
  }
  return false;
}


org.argouml.moduleloader.ModuleLoader2.findModule(String)
{
  for (  Map.Entry<ModuleInterface,ModuleStatus> entry : moduleStatus.entrySet()) {
    ModuleInterface module=entry.getKey();
    if (name.equalsIgnoreCase(module.getName())) {
      return entry;
    }
  }
  return null;
}


org.argouml.moduleloader.ModuleLoader2.huntForModules()
{
  huntForModulesFromExtensionDir();
  String listOfClasses=System.getProperty("argouml.modules");
  if (listOfClasses != null) {
    StringTokenizer si=new StringTokenizer(listOfClasses,";");
    while (si.hasMoreTokens()) {
      String className=si.nextToken();
      try {
        addClass(className);
      }
 catch (      ClassNotFoundException e) {
        LOG.error("Could not load module from class " + className);
      }
    }
  }
}


org.argouml.moduleloader.ModuleLoader2.huntForModulesFromExtensionDir()
{
  String extForm=getClass().getResource(Argo.ARGOINI).toExternalForm();
  String argoRoot=extForm.substring(0,extForm.length() - Argo.ARGOINI.length());
  if (argoRoot.startsWith(JAR_PREFIX)) {
    argoRoot=argoRoot.substring(JAR_PREFIX.length());
    if (argoRoot.endsWith("!")) {
      argoRoot=argoRoot.substring(0,argoRoot.length() - 1);
    }
  }
  String argoHome=null;
  if (argoRoot != null) {
    LOG.info("argoRoot is " + argoRoot);
    if (argoRoot.startsWith(FILE_PREFIX)) {
      argoHome=new File(argoRoot.substring(FILE_PREFIX.length())).getAbsoluteFile().getParent();
    }
 else {
      argoHome=new File(argoRoot).getAbsoluteFile().getParent();
    }
    try {
      argoHome=java.net.URLDecoder.decode(argoHome,Argo.getEncoding());
    }
 catch (    UnsupportedEncodingException e) {
      LOG.warn("Encoding " + Argo.getEncoding() + " is unknown.");
    }
    LOG.info("argoHome is " + argoHome);
  }
  if (argoHome != null) {
    String extdir;
    if (argoHome.startsWith(FILE_PREFIX)) {
      extdir=argoHome.substring(FILE_PREFIX.length()) + File.separator + "ext";
    }
 else {
      extdir=argoHome + File.separator + "ext";
    }
    extensionLocations.add(extdir);
    huntModulesFromNamedDirectory(extdir);
  }
  String extdir=System.getProperty("argo.ext.dir");
  if (extdir != null) {
    extensionLocations.add(extdir);
    huntModulesFromNamedDirectory(extdir);
  }
}


org.argouml.moduleloader.ModuleLoader2.getExtensionLocations()
{
  return Collections.unmodifiableList(extensionLocations);
}


org.argouml.moduleloader.ModuleLoader2.huntModulesFromNamedDirectory(String)
{
  File extensionDir=new File(dirname);
  if (extensionDir.isDirectory()) {
    File[] files=extensionDir.listFiles(new JarFileFilter());
    for (    File file : files) {
      JarFile jarfile=null;
      try {
        jarfile=new JarFile(file);
        if (jarfile != null) {
          ClassLoader classloader=new URLClassLoader(new URL[]{file.toURI().toURL()});
          try {
            processJarFile(classloader,file);
          }
 catch (          ClassNotFoundException e) {
            LOG.error("The class is not found.",e);
            return;
          }
        }
      }
 catch (      IOException ioe) {
        LOG.debug("Cannot open Jar file " + file,ioe);
      }
    }
  }
}


org.argouml.moduleloader.ModuleLoader2.processJarFile(ClassLoader,File)
{
  LOG.info("Opening jar file " + file);
  JarFile jarfile;
  try {
    jarfile=new JarFile(file);
  }
 catch (  IOException e) {
    LOG.error("Unable to open " + file,e);
    return;
  }
  Manifest manifest;
  try {
    manifest=jarfile.getManifest();
    if (manifest == null) {
      LOG.debug(file + " does not have a manifest");
    }
  }
 catch (  IOException e) {
    LOG.error("Unable to read manifest of " + file,e);
    return;
  }
  boolean loadedClass=false;
  if (manifest == null) {
    Enumeration<JarEntry> jarEntries=jarfile.entries();
    while (jarEntries.hasMoreElements()) {
      JarEntry entry=jarEntries.nextElement();
      loadedClass=loadedClass | processEntry(classloader,entry.getName());
    }
  }
 else {
    Map<String,Attributes> entries=manifest.getEntries();
    for (    String key : entries.keySet()) {
      loadedClass=loadedClass | processEntry(classloader,key);
    }
  }
  if (loadedClass) {
    Translator.addClassLoader(classloader);
  }
 else {
    LOG.error("Failed to find any loadable ArgoUML modules in jar " + file);
  }
}


org.argouml.moduleloader.ModuleLoader2.processEntry(ClassLoader,String)
{
  if (cname.endsWith(CLASS_SUFFIX)) {
    int classNamelen=cname.length() - CLASS_SUFFIX.length();
    String className=cname.substring(0,classNamelen);
    className=className.replace('/','.');
    return addClass(classloader,className);
  }
  return false;
}


org.argouml.moduleloader.ModuleLoader2.addClass(String)
{
  getInstance().addClass(ModuleLoader2.class.getClassLoader(),classname);
}


org.argouml.moduleloader.ModuleLoader2.addClass(ClassLoader,String)
{
  LOG.info("Loading module " + classname);
  Class moduleClass;
  try {
    moduleClass=classLoader.loadClass(classname);
  }
 catch (  UnsupportedClassVersionError e) {
    LOG.error("Unsupported Java class version for " + classname);
    return false;
  }
catch (  NoClassDefFoundError e) {
    LOG.error("Unable to find required class while loading " + classname + " - may indicate an obsolete"+ " extension module or an unresolved dependency",e);
    return false;
  }
catch (  Throwable e) {
    if (e instanceof ClassNotFoundException) {
      throw (ClassNotFoundException)e;
    }
    LOG.error("Unexpected error while loading " + classname,e);
    return false;
  }
  if (!ModuleInterface.class.isAssignableFrom(moduleClass)) {
    LOG.debug("The class " + classname + " is not a module.");
    return false;
  }
  Constructor defaultConstructor;
  try {
    defaultConstructor=moduleClass.getDeclaredConstructor(new Class[]{});
  }
 catch (  SecurityException e) {
    LOG.error("The default constructor for class " + classname + " is not accessable.",e);
    return false;
  }
catch (  NoSuchMethodException e) {
    LOG.error("The default constructor for class " + classname + " is not found.",e);
    return false;
  }
catch (  NoClassDefFoundError e) {
    LOG.error("Unable to find required class while loading " + classname + " - may indicate an obsolete"+ " extension module or an unresolved dependency",e);
    return false;
  }
catch (  Throwable e) {
    LOG.error("Unexpected error while loading " + classname,e);
    return false;
  }
  if (!Modifier.isPublic(defaultConstructor.getModifiers())) {
    LOG.error("The default constructor for class " + classname + " is not public.  Not loaded.");
    return false;
  }
  Object moduleInstance;
  try {
    moduleInstance=defaultConstructor.newInstance(new Object[]{});
  }
 catch (  IllegalArgumentException e) {
    LOG.error("The constructor for class " + classname + " is called with incorrect argument.",e);
    return false;
  }
catch (  InstantiationException e) {
    LOG.error("The constructor for class " + classname + " threw an exception.",e);
    return false;
  }
catch (  IllegalAccessException e) {
    LOG.error("The constructor for class " + classname + " is not accessible.",e);
    return false;
  }
catch (  InvocationTargetException e) {
    LOG.error("The constructor for class " + classname + " cannot be called.",e);
    return false;
  }
catch (  NoClassDefFoundError e) {
    LOG.error("Unable to find required class while instantiating " + classname + " - may indicate an obsolete"+ " extension module or an unresolved dependency",e);
    return false;
  }
catch (  Throwable e) {
    LOG.error("Unexpected error while instantiating " + classname,e);
    return false;
  }
  if (!(moduleInstance instanceof ModuleInterface)) {
    LOG.error("The class " + classname + " is not a module.");
    return false;
  }
  ModuleInterface mf=(ModuleInterface)moduleInstance;
  addModule(mf);
  LOG.info("Succesfully loaded module " + classname);
  return true;
}


org.argouml.moduleloader.ModuleLoader2.addModule(ModuleInterface)
{
  for (  ModuleInterface foundMf : moduleStatus.keySet()) {
    if (foundMf.getName().equals(mf.getName())) {
      return;
    }
  }
  ModuleStatus ms=new ModuleStatus();
  ms.setSelected();
  moduleStatus.put(mf,ms);
}


org.argouml.moduleloader.ModuleLoader2.JarFileFilter.accept(File)
{
  return (pathname.canRead() && pathname.isFile() && pathname.getPath().toLowerCase().endsWith(".jar"));
}


org.argouml.moduleloader.ModuleStatus.isEnabled()
{
  return enabled;
}


org.argouml.moduleloader.ModuleStatus.setEnabled()
{
  enabled=true;
}


org.argouml.moduleloader.ModuleStatus.setDisabled()
{
  enabled=false;
}


org.argouml.moduleloader.ModuleStatus.isSelected()
{
  return selected;
}


org.argouml.moduleloader.ModuleStatus.setSelected()
{
  selected=true;
}


org.argouml.moduleloader.ModuleStatus.setUnselect()
{
  selected=false;
}


org.argouml.moduleloader.ModuleStatus.setSelected(boolean)
{
  if (value) {
    setSelected();
  }
 else {
    setUnselect();
  }
}


-------------------------------------
Reading file: TestCases/Input/ArgoUML/SVNFilesSideBySide/15248/trunk_src_argouml-app_src_org_argouml_moduleloader_ModuleLoader2.java.v15248
org.argouml.moduleloader.ModuleLoader2.ModuleLoader2	0	
org.argouml.moduleloader.ModuleLoader2.getInstance	0	
org.argouml.moduleloader.ModuleLoader2.getDetailsTabs	0	
org.argouml.moduleloader.ModuleLoader2.availableModules	0	
org.argouml.moduleloader.ModuleLoader2.doLoad	1	boolean	
org.argouml.moduleloader.ModuleLoader2.isEnabled	1	String	
org.argouml.moduleloader.ModuleLoader2.allModules	0	
org.argouml.moduleloader.ModuleLoader2.isSelected	1	String	
org.argouml.moduleloader.ModuleLoader2.isSelectedInternal	1	String	
org.argouml.moduleloader.ModuleLoader2.setSelected	2	String	boolean	
org.argouml.moduleloader.ModuleLoader2.setSelectedInternal	2	String	boolean	
org.argouml.moduleloader.ModuleLoader2.getDescription	1	String	
org.argouml.moduleloader.ModuleLoader2.getDescriptionInternal	1	String	
org.argouml.moduleloader.ModuleLoader2.doInternal	1	boolean	
org.argouml.moduleloader.ModuleLoader2.isEnabledInternal	1	String	
org.argouml.moduleloader.ModuleLoader2.findModule	1	String	
org.argouml.moduleloader.ModuleLoader2.huntForModules	0	
org.argouml.moduleloader.ModuleLoader2.huntForModulesFromExtensionDir	0	
org.argouml.moduleloader.ModuleLoader2.getExtensionLocations	0	
org.argouml.moduleloader.ModuleLoader2.huntModulesFromNamedDirectory	1	String	
org.argouml.moduleloader.ModuleLoader2.processJarFile	2	ClassLoader	File	
org.argouml.moduleloader.ModuleLoader2.loadProfilesFromJarFile	3	Manifest	File	ClassLoader	
org.argouml.moduleloader.ModuleLoader2.loadManifestDependenciesForProfile	1	Attributes	
org.argouml.moduleloader.ModuleLoader2.loadJavaCriticsForProfile	2	Attributes	ClassLoader	
org.argouml.moduleloader.ModuleLoader2.processEntry	2	ClassLoader	String	
org.argouml.moduleloader.ModuleLoader2.addClass	1	String	
org.argouml.moduleloader.ModuleLoader2.addClass	2	ClassLoader	String	
org.argouml.moduleloader.ModuleLoader2.addModule	1	ModuleInterface	
org.argouml.moduleloader.ModuleLoader2.JarFileFilter.accept	1	File	
org.argouml.moduleloader.ModuleStatus.isEnabled	0	
org.argouml.moduleloader.ModuleStatus.setEnabled	0	
org.argouml.moduleloader.ModuleStatus.setDisabled	0	
org.argouml.moduleloader.ModuleStatus.isSelected	0	
org.argouml.moduleloader.ModuleStatus.setSelected	0	
org.argouml.moduleloader.ModuleStatus.setUnselect	0	
org.argouml.moduleloader.ModuleStatus.setSelected	1	boolean	
List of methods:
org.argouml.moduleloader.ModuleLoader2.ModuleLoader2()
{
  moduleStatus=new HashMap<ModuleInterface,ModuleStatus>();
}


org.argouml.moduleloader.ModuleLoader2.getInstance()
{
  return INSTANCE;
}


org.argouml.moduleloader.ModuleLoader2.getDetailsTabs()
{
  List<AbstractArgoJPanel> result=new ArrayList<AbstractArgoJPanel>();
  for (  ModuleInterface module : getInstance().availableModules()) {
    ModuleStatus status=moduleStatus.get(module);
    if (status == null) {
      continue;
    }
    if (status.isEnabled()) {
      if (module instanceof DetailsTabProvider) {
        result.addAll(((DetailsTabProvider)module).getDetailsTabs());
      }
    }
  }
  return result;
}


org.argouml.moduleloader.ModuleLoader2.availableModules()
{
  return Collections.unmodifiableCollection(moduleStatus.keySet());
}


org.argouml.moduleloader.ModuleLoader2.doLoad(boolean)
{
  getInstance().doInternal(failingAllowed);
}


org.argouml.moduleloader.ModuleLoader2.isEnabled(String)
{
  return getInstance().isEnabledInternal(name);
}


org.argouml.moduleloader.ModuleLoader2.allModules()
{
  Collection<String> coll=new HashSet<String>();
  for (  ModuleInterface mf : getInstance().availableModules()) {
    coll.add(mf.getName());
  }
  return coll;
}


org.argouml.moduleloader.ModuleLoader2.isSelected(String)
{
  return getInstance().isSelectedInternal(name);
}


org.argouml.moduleloader.ModuleLoader2.isSelectedInternal(String)
{
  Map.Entry<ModuleInterface,ModuleStatus> entry=findModule(name);
  if (entry != null) {
    ModuleStatus status=entry.getValue();
    if (status == null) {
      return false;
    }
    return status.isSelected();
  }
  return false;
}


org.argouml.moduleloader.ModuleLoader2.setSelected(String,boolean)
{
  getInstance().setSelectedInternal(name,value);
}


org.argouml.moduleloader.ModuleLoader2.setSelectedInternal(String,boolean)
{
  Map.Entry<ModuleInterface,ModuleStatus> entry=findModule(name);
  if (entry != null) {
    ModuleStatus status=entry.getValue();
    status.setSelected(value);
  }
}


org.argouml.moduleloader.ModuleLoader2.getDescription(String)
{
  return getInstance().getDescriptionInternal(name);
}


org.argouml.moduleloader.ModuleLoader2.getDescriptionInternal(String)
{
  Map.Entry<ModuleInterface,ModuleStatus> entry=findModule(name);
  if (entry == null) {
    throw new IllegalArgumentException("Module does not exist.");
  }
  ModuleInterface module=entry.getKey();
  StringBuffer sb=new StringBuffer();
  String desc=module.getInfo(ModuleInterface.DESCRIPTION);
  if (desc != null) {
    sb.append(desc);
    sb.append("\n\n");
  }
  String author=module.getInfo(ModuleInterface.AUTHOR);
  if (author != null) {
    sb.append("Author: ").append(author);
    sb.append("\n");
  }
  String version=module.getInfo(ModuleInterface.VERSION);
  if (version != null) {
    sb.append("Version: ").append(version);
    sb.append("\n");
  }
  return sb.toString();
}


org.argouml.moduleloader.ModuleLoader2.doInternal(boolean)
{
  huntForModules();
  boolean someModuleSucceeded;
  do {
    someModuleSucceeded=false;
    for (    ModuleInterface module : getInstance().availableModules()) {
      ModuleStatus status=moduleStatus.get(module);
      if (status == null) {
        continue;
      }
      if (!status.isEnabled() && status.isSelected()) {
        try {
          if (module.enable()) {
            someModuleSucceeded=true;
            status.setEnabled();
          }
        }
 catch (        Throwable e) {
          LOG.info("Exception or error while trying to " + "enable module " + module.getName(),e);
        }
      }
 else       if (status.isEnabled() && !status.isSelected()) {
        try {
          if (module.disable()) {
            someModuleSucceeded=true;
            status.setDisabled();
          }
        }
 catch (        Throwable e) {
          LOG.info("Exception or error while trying to " + "disable module " + module.getName(),e);
        }
      }
    }
  }
 while (someModuleSucceeded);
  if (!failingAllowed) {
    for (    ModuleInterface module : getInstance().availableModules()) {
      ModuleStatus status=moduleStatus.get(module);
      if (status == null) {
        continue;
      }
      if (status.isEnabled() && status.isSelected()) {
        continue;
      }
      if (!status.isEnabled() && !status.isSelected()) {
        continue;
      }
      if (status.isSelected()) {
        LOG.warn("ModuleLoader was not able to enable module " + module.getName());
      }
 else {
        LOG.warn("ModuleLoader was not able to disable module " + module.getName());
      }
    }
  }
}


org.argouml.moduleloader.ModuleLoader2.isEnabledInternal(String)
{
  Map.Entry<ModuleInterface,ModuleStatus> entry=findModule(name);
  if (entry != null) {
    ModuleStatus status=entry.getValue();
    if (status == null) {
      return false;
    }
    return status.isEnabled();
  }
  return false;
}


org.argouml.moduleloader.ModuleLoader2.findModule(String)
{
  for (  Map.Entry<ModuleInterface,ModuleStatus> entry : moduleStatus.entrySet()) {
    ModuleInterface module=entry.getKey();
    if (name.equalsIgnoreCase(module.getName())) {
      return entry;
    }
  }
  return null;
}


org.argouml.moduleloader.ModuleLoader2.huntForModules()
{
  huntForModulesFromExtensionDir();
  String listOfClasses=System.getProperty("argouml.modules");
  if (listOfClasses != null) {
    StringTokenizer si=new StringTokenizer(listOfClasses,";");
    while (si.hasMoreTokens()) {
      String className=si.nextToken();
      try {
        addClass(className);
      }
 catch (      ClassNotFoundException e) {
        LOG.error("Could not load module from class " + className);
      }
    }
  }
}


org.argouml.moduleloader.ModuleLoader2.huntForModulesFromExtensionDir()
{
  String extForm=getClass().getResource(Argo.ARGOINI).toExternalForm();
  String argoRoot=extForm.substring(0,extForm.length() - Argo.ARGOINI.length());
  if (argoRoot.startsWith(JAR_PREFIX)) {
    argoRoot=argoRoot.substring(JAR_PREFIX.length());
    if (argoRoot.endsWith("!")) {
      argoRoot=argoRoot.substring(0,argoRoot.length() - 1);
    }
  }
  String argoHome=null;
  if (argoRoot != null) {
    LOG.info("argoRoot is " + argoRoot);
    if (argoRoot.startsWith(FILE_PREFIX)) {
      argoHome=new File(argoRoot.substring(FILE_PREFIX.length())).getAbsoluteFile().getParent();
    }
 else {
      argoHome=new File(argoRoot).getAbsoluteFile().getParent();
    }
    try {
      argoHome=java.net.URLDecoder.decode(argoHome,Argo.getEncoding());
    }
 catch (    UnsupportedEncodingException e) {
      LOG.warn("Encoding " + Argo.getEncoding() + " is unknown.");
    }
    LOG.info("argoHome is " + argoHome);
  }
  if (argoHome != null) {
    String extdir;
    if (argoHome.startsWith(FILE_PREFIX)) {
      extdir=argoHome.substring(FILE_PREFIX.length()) + File.separator + "ext";
    }
 else {
      extdir=argoHome + File.separator + "ext";
    }
    extensionLocations.add(extdir);
    huntModulesFromNamedDirectory(extdir);
  }
  String extdir=System.getProperty("argo.ext.dir");
  if (extdir != null) {
    extensionLocations.add(extdir);
    huntModulesFromNamedDirectory(extdir);
  }
}


org.argouml.moduleloader.ModuleLoader2.getExtensionLocations()
{
  return Collections.unmodifiableList(extensionLocations);
}


org.argouml.moduleloader.ModuleLoader2.huntModulesFromNamedDirectory(String)
{
  File extensionDir=new File(dirname);
  if (extensionDir.isDirectory()) {
    File[] files=extensionDir.listFiles(new JarFileFilter());
    for (    File file : files) {
      JarFile jarfile=null;
      try {
        jarfile=new JarFile(file);
        if (jarfile != null) {
          ClassLoader classloader=new URLClassLoader(new URL[]{file.toURI().toURL()});
          try {
            processJarFile(classloader,file);
          }
 catch (          ClassNotFoundException e) {
            LOG.error("The class is not found.",e);
            return;
          }
        }
      }
 catch (      IOException ioe) {
        LOG.debug("Cannot open Jar file " + file,ioe);
      }
    }
  }
}


org.argouml.moduleloader.ModuleLoader2.processJarFile(ClassLoader,File)
{
  LOG.info("Opening jar file " + file);
  JarFile jarfile;
  try {
    jarfile=new JarFile(file);
  }
 catch (  IOException e) {
    LOG.error("Unable to open " + file,e);
    return;
  }
  Manifest manifest;
  try {
    manifest=jarfile.getManifest();
    if (manifest == null) {
      LOG.debug(file + " does not have a manifest");
    }
  }
 catch (  IOException e) {
    LOG.error("Unable to read manifest of " + file,e);
    return;
  }
  LOG.info("Reading profiles...");
  try {
    loadProfilesFromJarFile(jarfile.getManifest(),file,classloader);
  }
 catch (  IOException e) {
    LOG.error("Unable to get MANIFEST from Jar of " + file,e);
  }
  boolean loadedClass=false;
  if (manifest == null) {
    Enumeration<JarEntry> jarEntries=jarfile.entries();
    while (jarEntries.hasMoreElements()) {
      JarEntry entry=jarEntries.nextElement();
      loadedClass=loadedClass | processEntry(classloader,entry.getName());
    }
  }
 else {
    Map<String,Attributes> entries=manifest.getEntries();
    for (    String key : entries.keySet()) {
      loadedClass=loadedClass | processEntry(classloader,key);
    }
  }
  if (loadedClass) {
    Translator.addClassLoader(classloader);
  }
 else {
    LOG.error("Failed to find any loadable ArgoUML modules in jar " + file);
  }
}


org.argouml.moduleloader.ModuleLoader2.loadProfilesFromJarFile(Manifest,File,ClassLoader)
{
  Map<String,Attributes> entries=manifest.getEntries();
  boolean classLoaderAlreadyAdded=false;
  for (  String entryName : entries.keySet()) {
    Attributes attr=entries.get(entryName);
    if (new Boolean(attr.getValue("Profile") + "").booleanValue()) {
      try {
        if (!classLoaderAlreadyAdded) {
          Translator.addClassLoader(classloader);
          classLoaderAlreadyAdded=true;
        }
        Set<CrUML> critics=loadJavaCriticsForProfile(attr,classloader);
        String modelPath=attr.getValue("Model");
        URL modelURL=null;
        if (modelPath != null) {
          modelURL=new URL(JAR_PREFIX + FILE_PREFIX + file.getCanonicalPath()+ "!"+ modelPath);
        }
        UserDefinedProfile udp=new UserDefinedProfile(entryName,modelURL,critics,loadManifestDependenciesForProfile(attr));
        ProfileFacade.getManager().registerProfile(udp);
        LOG.debug("Registered Profile: " + udp.getDisplayName() + "...");
      }
 catch (      ProfileException e) {
        LOG.error("Exception",e);
      }
catch (      IOException e) {
        LOG.error("Exception",e);
      }
    }
  }
}


org.argouml.moduleloader.ModuleLoader2.loadManifestDependenciesForProfile(Attributes)
{
  Set<Profile> ret=new HashSet<Profile>();
  String value=attr.getValue("Depends-on");
  if (value != null) {
    StringTokenizer st=new StringTokenizer(value,",");
    while (st.hasMoreElements()) {
      String entry=st.nextToken().trim();
      Profile p=ProfileFacade.getManager().lookForRegisteredProfile(entry);
      if (p != null) {
        ret.add(p);
      }
 else {
        LOG.debug("Found unknown profile in dependency list! " + entry);
      }
    }
  }
  return ret;
}


org.argouml.moduleloader.ModuleLoader2.loadJavaCriticsForProfile(Attributes,ClassLoader)
{
  Set<CrUML> ret=new HashSet<CrUML>();
  String value=attr.getValue("Java-Critics");
  if (value != null) {
    StringTokenizer st=new StringTokenizer(value,",");
    while (st.hasMoreElements()) {
      String entry=st.nextToken().trim();
      try {
        Class cl=classloader.loadClass(entry);
        CrUML critic=(CrUML)cl.newInstance();
        ret.add(critic);
      }
 catch (      ClassNotFoundException e) {
        LOG.error("Error loading class: " + entry,e);
      }
catch (      InstantiationException e) {
        LOG.error("Error instantianting class: " + entry,e);
      }
catch (      IllegalAccessException e) {
        LOG.error("Exception",e);
      }
    }
  }
  return ret;
}


org.argouml.moduleloader.ModuleLoader2.processEntry(ClassLoader,String)
{
  if (cname.endsWith(CLASS_SUFFIX)) {
    int classNamelen=cname.length() - CLASS_SUFFIX.length();
    String className=cname.substring(0,classNamelen);
    className=className.replace('/','.');
    return addClass(classloader,className);
  }
  return false;
}


org.argouml.moduleloader.ModuleLoader2.addClass(String)
{
  getInstance().addClass(ModuleLoader2.class.getClassLoader(),classname);
}


org.argouml.moduleloader.ModuleLoader2.addClass(ClassLoader,String)
{
  LOG.info("Loading module " + classname);
  Class moduleClass;
  try {
    moduleClass=classLoader.loadClass(classname);
  }
 catch (  UnsupportedClassVersionError e) {
    LOG.error("Unsupported Java class version for " + classname);
    return false;
  }
catch (  NoClassDefFoundError e) {
    LOG.error("Unable to find required class while loading " + classname + " - may indicate an obsolete"+ " extension module or an unresolved dependency",e);
    return false;
  }
catch (  Throwable e) {
    if (e instanceof ClassNotFoundException) {
      throw (ClassNotFoundException)e;
    }
    LOG.error("Unexpected error while loading " + classname,e);
    return false;
  }
  if (!ModuleInterface.class.isAssignableFrom(moduleClass)) {
    LOG.debug("The class " + classname + " is not a module.");
    return false;
  }
  Constructor defaultConstructor;
  try {
    defaultConstructor=moduleClass.getDeclaredConstructor(new Class[]{});
  }
 catch (  SecurityException e) {
    LOG.error("The default constructor for class " + classname + " is not accessable.",e);
    return false;
  }
catch (  NoSuchMethodException e) {
    LOG.error("The default constructor for class " + classname + " is not found.",e);
    return false;
  }
catch (  NoClassDefFoundError e) {
    LOG.error("Unable to find required class while loading " + classname + " - may indicate an obsolete"+ " extension module or an unresolved dependency",e);
    return false;
  }
catch (  Throwable e) {
    LOG.error("Unexpected error while loading " + classname,e);
    return false;
  }
  if (!Modifier.isPublic(defaultConstructor.getModifiers())) {
    LOG.error("The default constructor for class " + classname + " is not public.  Not loaded.");
    return false;
  }
  Object moduleInstance;
  try {
    moduleInstance=defaultConstructor.newInstance(new Object[]{});
  }
 catch (  IllegalArgumentException e) {
    LOG.error("The constructor for class " + classname + " is called with incorrect argument.",e);
    return false;
  }
catch (  InstantiationException e) {
    LOG.error("The constructor for class " + classname + " threw an exception.",e);
    return false;
  }
catch (  IllegalAccessException e) {
    LOG.error("The constructor for class " + classname + " is not accessible.",e);
    return false;
  }
catch (  InvocationTargetException e) {
    LOG.error("The constructor for class " + classname + " cannot be called.",e);
    return false;
  }
catch (  NoClassDefFoundError e) {
    LOG.error("Unable to find required class while instantiating " + classname + " - may indicate an obsolete"+ " extension module or an unresolved dependency",e);
    return false;
  }
catch (  Throwable e) {
    LOG.error("Unexpected error while instantiating " + classname,e);
    return false;
  }
  if (!(moduleInstance instanceof ModuleInterface)) {
    LOG.error("The class " + classname + " is not a module.");
    return false;
  }
  ModuleInterface mf=(ModuleInterface)moduleInstance;
  addModule(mf);
  LOG.info("Succesfully loaded module " + classname);
  return true;
}


org.argouml.moduleloader.ModuleLoader2.addModule(ModuleInterface)
{
  for (  ModuleInterface foundMf : moduleStatus.keySet()) {
    if (foundMf.getName().equals(mf.getName())) {
      return;
    }
  }
  ModuleStatus ms=new ModuleStatus();
  ms.setSelected();
  moduleStatus.put(mf,ms);
}


org.argouml.moduleloader.ModuleLoader2.JarFileFilter.accept(File)
{
  return (pathname.canRead() && pathname.isFile() && pathname.getPath().toLowerCase().endsWith(".jar"));
}


org.argouml.moduleloader.ModuleStatus.isEnabled()
{
  return enabled;
}


org.argouml.moduleloader.ModuleStatus.setEnabled()
{
  enabled=true;
}


org.argouml.moduleloader.ModuleStatus.setDisabled()
{
  enabled=false;
}


org.argouml.moduleloader.ModuleStatus.isSelected()
{
  return selected;
}


org.argouml.moduleloader.ModuleStatus.setSelected()
{
  selected=true;
}


org.argouml.moduleloader.ModuleStatus.setUnselect()
{
  selected=false;
}


org.argouml.moduleloader.ModuleStatus.setSelected(boolean)
{
  if (value) {
    setSelected();
  }
 else {
    setUnselect();
  }
}


-------------------------------------
ListOfCorpusMethodsPreviousVersion size: 33
ListOfCorpusMethodsCurrentVersion size: 36
Gold set methods: 
org.argouml.moduleloader.ModuleLoader2.processJarFile(ClassLoader,File)
org.argouml.moduleloader.ModuleLoader2.loadProfilesFromJarFile(Manifest,File,ClassLoader)
org.argouml.moduleloader.ModuleLoader2.loadManifestDependenciesForProfile(Attributes)
org.argouml.moduleloader.ModuleLoader2.loadJavaCriticsForProfile(Attributes,ClassLoader)

##########################################################

File Name and Type: R	trunk_src_argouml-app_src_org_argouml_profile_internal_ocl_uml14_HashBag.java
Reading file: TestCases/Input/ArgoUML/SVNFilesSideBySide/15248/trunk_src_argouml-app_src_org_argouml_profile_internal_ocl_uml14_HashBag.java.vPrevious
org.argouml.profile.internal.ocl.uml14.HashBag.HashBag	1	Collection	
org.argouml.profile.internal.ocl.uml14.HashBag.count	1	Object	
org.argouml.profile.internal.ocl.uml14.HashBag.add	1	E	
org.argouml.profile.internal.ocl.uml14.HashBag.addAll	1	Collection	
org.argouml.profile.internal.ocl.uml14.HashBag.clear	0	
org.argouml.profile.internal.ocl.uml14.HashBag.contains	1	Object	
org.argouml.profile.internal.ocl.uml14.HashBag.containsAll	1	Collection	
org.argouml.profile.internal.ocl.uml14.HashBag.isEmpty	0	
org.argouml.profile.internal.ocl.uml14.HashBag.iterator	0	
org.argouml.profile.internal.ocl.uml14.HashBag.remove	1	Object	
org.argouml.profile.internal.ocl.uml14.HashBag.removeAll	1	Collection	
org.argouml.profile.internal.ocl.uml14.HashBag.retainAll	1	Collection	
org.argouml.profile.internal.ocl.uml14.HashBag.size	0	
org.argouml.profile.internal.ocl.uml14.HashBag.toArray	0	
org.argouml.profile.internal.ocl.uml14.HashBag.toArray	1	T[]	
List of methods:
org.argouml.profile.internal.ocl.uml14.HashBag.HashBag(Collection)
{
  addAll(col);
}


org.argouml.profile.internal.ocl.uml14.HashBag.count(Object)
{
  Integer c=map.get(element);
  return c == null ? 0 : c;
}


org.argouml.profile.internal.ocl.uml14.HashBag.add(E)
{
  if (map.get(e) == null) {
    map.put(e,0);
  }
 else {
    map.put(e,map.get(e) + 1);
  }
  return true;
}


org.argouml.profile.internal.ocl.uml14.HashBag.addAll(Collection)
{
  for (  Object object : c) {
    add((E)object);
  }
  return true;
}


org.argouml.profile.internal.ocl.uml14.HashBag.clear()
{
  map.clear();
}


org.argouml.profile.internal.ocl.uml14.HashBag.contains(Object)
{
  return count(o) > 0;
}


org.argouml.profile.internal.ocl.uml14.HashBag.containsAll(Collection)
{
  for (  Object object : c) {
    if (!contains(object))     return false;
  }
  return true;
}


org.argouml.profile.internal.ocl.uml14.HashBag.isEmpty()
{
  return size() == 0;
}


org.argouml.profile.internal.ocl.uml14.HashBag.iterator()
{
  return map.keySet().iterator();
}


org.argouml.profile.internal.ocl.uml14.HashBag.remove(Object)
{
  boolean c=contains(o);
  map.put((E)o,null);
  return c;
}


org.argouml.profile.internal.ocl.uml14.HashBag.removeAll(Collection)
{
  boolean changed=false;
  for (  Object object : c) {
    changed|=remove(object);
  }
  return changed;
}


org.argouml.profile.internal.ocl.uml14.HashBag.retainAll(Collection)
{
  throw new UnsupportedOperationException();
}


org.argouml.profile.internal.ocl.uml14.HashBag.size()
{
  int sum=0;
  Iterator<E> it=iterator();
  while (it.hasNext()) {
    E next=it.next();
    sum+=count(next);
  }
  return sum;
}


org.argouml.profile.internal.ocl.uml14.HashBag.toArray()
{
  return map.keySet().toArray();
}


org.argouml.profile.internal.ocl.uml14.HashBag.toArray(T[])
{
  return map.keySet().toArray(a);
}


-------------------------------------
Reading file: TestCases/Input/ArgoUML/SVNFilesSideBySide/15248/trunk_src_argouml-app_src_org_argouml_profile_internal_ocl_uml14_HashBag.java.v15248
org.argouml.profile.internal.ocl.uml14.HashBag.HashBag	1	Collection	
org.argouml.profile.internal.ocl.uml14.HashBag.count	1	Object	
org.argouml.profile.internal.ocl.uml14.HashBag.add	1	E	
org.argouml.profile.internal.ocl.uml14.HashBag.addAll	1	Collection	
org.argouml.profile.internal.ocl.uml14.HashBag.clear	0	
org.argouml.profile.internal.ocl.uml14.HashBag.contains	1	Object	
org.argouml.profile.internal.ocl.uml14.HashBag.containsAll	1	Collection	
org.argouml.profile.internal.ocl.uml14.HashBag.isEmpty	0	
org.argouml.profile.internal.ocl.uml14.HashBag.iterator	0	
org.argouml.profile.internal.ocl.uml14.HashBag.remove	1	Object	
org.argouml.profile.internal.ocl.uml14.HashBag.removeAll	1	Collection	
org.argouml.profile.internal.ocl.uml14.HashBag.retainAll	1	Collection	
org.argouml.profile.internal.ocl.uml14.HashBag.size	0	
org.argouml.profile.internal.ocl.uml14.HashBag.toArray	0	
org.argouml.profile.internal.ocl.uml14.HashBag.toArray	1	T[]	
List of methods:
org.argouml.profile.internal.ocl.uml14.HashBag.HashBag(Collection)
{
  addAll(col);
}


org.argouml.profile.internal.ocl.uml14.HashBag.count(Object)
{
  Integer c=map.get(element);
  return c == null ? 0 : c;
}


org.argouml.profile.internal.ocl.uml14.HashBag.add(E)
{
  if (map.get(e) == null) {
    map.put(e,0);
  }
 else {
    map.put(e,map.get(e) + 1);
  }
  return true;
}


org.argouml.profile.internal.ocl.uml14.HashBag.addAll(Collection)
{
  for (  Object object : c) {
    add((E)object);
  }
  return true;
}


org.argouml.profile.internal.ocl.uml14.HashBag.clear()
{
  map.clear();
}


org.argouml.profile.internal.ocl.uml14.HashBag.contains(Object)
{
  return count(o) > 0;
}


org.argouml.profile.internal.ocl.uml14.HashBag.containsAll(Collection)
{
  for (  Object object : c) {
    if (!contains(object))     return false;
  }
  return true;
}


org.argouml.profile.internal.ocl.uml14.HashBag.isEmpty()
{
  return size() == 0;
}


org.argouml.profile.internal.ocl.uml14.HashBag.iterator()
{
  return map.keySet().iterator();
}


org.argouml.profile.internal.ocl.uml14.HashBag.remove(Object)
{
  boolean c=contains(o);
  map.put((E)o,null);
  return c;
}


org.argouml.profile.internal.ocl.uml14.HashBag.removeAll(Collection)
{
  boolean changed=false;
  for (  Object object : c) {
    changed|=remove(object);
  }
  return changed;
}


org.argouml.profile.internal.ocl.uml14.HashBag.retainAll(Collection)
{
  throw new UnsupportedOperationException();
}


org.argouml.profile.internal.ocl.uml14.HashBag.size()
{
  int sum=0;
  Iterator<E> it=iterator();
  while (it.hasNext()) {
    E next=it.next();
    sum+=count(next);
  }
  return sum;
}


org.argouml.profile.internal.ocl.uml14.HashBag.toArray()
{
  return map.keySet().toArray();
}


org.argouml.profile.internal.ocl.uml14.HashBag.toArray(T[])
{
  return map.keySet().toArray(a);
}


-------------------------------------
ListOfCorpusMethodsPreviousVersion size: 15
ListOfCorpusMethodsCurrentVersion size: 15
Gold set methods: 

##########################################################

File Name and Type: M	trunk_src_argouml-app_src_org_argouml_uml_ui_TabProps.java
Reading file: TestCases/Input/ArgoUML/SVNFilesSideBySide/15248/trunk_src_argouml-app_src_org_argouml_uml_ui_TabProps.java.vPrevious
org.argouml.uml.ui.TabProps.TabProps	0	
org.argouml.uml.ui.TabProps.TabProps	2	String	String	
org.argouml.uml.ui.TabProps.setOrientation	1	Orientation	
org.argouml.uml.ui.TabProps.addPanel	2	Class	PropPanel	
org.argouml.uml.ui.TabProps.setTarget	1	Object	
org.argouml.uml.ui.TabProps.refresh	0	
org.argouml.uml.ui.TabProps.findPanelFor	1	Object	
org.argouml.uml.ui.TabProps.createPropPanel	1	Object	
org.argouml.uml.ui.TabProps.getClassBaseName	0	
org.argouml.uml.ui.TabProps.getTarget	0	
org.argouml.uml.ui.TabProps.shouldBeEnabled	1	Object	
org.argouml.uml.ui.TabProps.targetAdded	1	TargetEvent	
org.argouml.uml.ui.TabProps.targetRemoved	1	TargetEvent	
org.argouml.uml.ui.TabProps.targetSet	1	TargetEvent	
org.argouml.uml.ui.TabProps.addTargetListener	1	TargetListener	
org.argouml.uml.ui.TabProps.removeTargetListener	1	TargetListener	
org.argouml.uml.ui.TabProps.fireTargetSet	1	TargetEvent	
org.argouml.uml.ui.TabProps.fireTargetAdded	1	TargetEvent	
org.argouml.uml.ui.TabProps.fireTargetRemoved	1	TargetEvent	
List of methods:
org.argouml.uml.ui.TabProps.TabProps()
{
  this("tab.properties","ui.PropPanel");
}


org.argouml.uml.ui.TabProps.TabProps(String,String)
{
  super(tabName);
  setIcon(new UpArrowIcon());
  TargetManager.getInstance().addTargetListener(this);
  setOrientation(Horizontal.getInstance());
  panelClassBaseName=panelClassBase;
  setLayout(new BorderLayout());
}


org.argouml.uml.ui.TabProps.setOrientation(Orientation)
{
  super.setOrientation(orientation);
  Enumeration pps=panels.elements();
  while (pps.hasMoreElements()) {
    Object o=pps.nextElement();
    if (o instanceof Orientable) {
      Orientable orientable=(Orientable)o;
      orientable.setOrientation(orientation);
    }
  }
}


org.argouml.uml.ui.TabProps.addPanel(Class,PropPanel)
{
  panels.put(clazz,panel);
}


org.argouml.uml.ui.TabProps.setTarget(Object)
{
  LOG.info("setTarget: there are " + TargetManager.getInstance().getTargets().size() + " targets");
  target=(target instanceof Fig) ? ((Fig)target).getOwner() : target;
  if (!(target == null || Model.getFacade().isAUMLElement(target) || target instanceof ArgoDiagram)) {
    return;
  }
  if (lastPanel != null) {
    remove(lastPanel);
    if (lastPanel instanceof TargetListener) {
      removeTargetListener((TargetListener)lastPanel);
    }
  }
  this.target=target;
  if (target == null) {
    add(blankPanel,BorderLayout.CENTER);
    validate();
    repaint();
    lastPanel=blankPanel;
  }
 else {
    TabModelTarget newPanel=null;
    newPanel=findPanelFor(target);
    if (newPanel != null) {
      addTargetListener(newPanel);
    }
    if (newPanel instanceof JPanel) {
      add((JPanel)newPanel,BorderLayout.CENTER);
      lastPanel=(JPanel)newPanel;
    }
 else {
      add(blankPanel,BorderLayout.CENTER);
      validate();
      repaint();
      lastPanel=blankPanel;
    }
  }
}


org.argouml.uml.ui.TabProps.refresh()
{
  setTarget(TargetManager.getInstance().getTarget());
}


org.argouml.uml.ui.TabProps.findPanelFor(Object)
{
  TabModelTarget panel=panels.get(trgt.getClass());
  if (panel != null) {
    if (LOG.isDebugEnabled()) {
      LOG.debug("Getting prop panel for: " + trgt.getClass().getName() + ", "+ "found (in cache?) "+ panel);
    }
    return panel;
  }
  panel=createPropPanel(trgt);
  if (panel != null) {
    LOG.debug("Factory created " + panel.getClass().getName() + " for "+ trgt.getClass().getName());
    panels.put(trgt.getClass(),panel);
    if (panel instanceof PropPanel) {
      ((PropPanel)panel).buildToolbar();
    }
    return panel;
  }
  LOG.error("Failed to create a prop panel for : " + trgt);
  return null;
}


org.argouml.uml.ui.TabProps.createPropPanel(Object)
{
  TabModelTarget propPanel=null;
  for (  PropPanelFactory factory : PropPanelFactoryManager.getFactories()) {
    propPanel=factory.createPropPanel(targetObject);
    if (propPanel != null)     return propPanel;
  }
  if (targetObject instanceof FigText) {
    propPanel=new PropPanelString();
  }
  if (propPanel instanceof Orientable) {
    ((Orientable)propPanel).setOrientation(getOrientation());
  }
  if (propPanel instanceof PropPanel) {
    ((PropPanel)propPanel).setOrientation(getOrientation());
    ((PropPanel)propPanel).buildToolbar();
  }
  return propPanel;
}


org.argouml.uml.ui.TabProps.getClassBaseName()
{
  return panelClassBaseName;
}


org.argouml.uml.ui.TabProps.getTarget()
{
  return target;
}


org.argouml.uml.ui.TabProps.shouldBeEnabled(Object)
{
  if (target instanceof Fig) {
    target=((Fig)target).getOwner();
  }
  return ((target instanceof Diagram || Model.getFacade().isAUMLElement(target)) && findPanelFor(target) != null);
}


org.argouml.uml.ui.TabProps.targetAdded(TargetEvent)
{
  setTarget(TargetManager.getInstance().getSingleTarget());
  fireTargetAdded(targetEvent);
  if (listenerList.getListenerCount() > 0) {
    validate();
    repaint();
  }
}


org.argouml.uml.ui.TabProps.targetRemoved(TargetEvent)
{
  setTarget(TargetManager.getInstance().getSingleTarget());
  fireTargetRemoved(targetEvent);
  validate();
  repaint();
}


org.argouml.uml.ui.TabProps.targetSet(TargetEvent)
{
  setTarget(TargetManager.getInstance().getSingleTarget());
  fireTargetSet(targetEvent);
  validate();
  repaint();
}


org.argouml.uml.ui.TabProps.addTargetListener(TargetListener)
{
  listenerList.add(TargetListener.class,listener);
}


org.argouml.uml.ui.TabProps.removeTargetListener(TargetListener)
{
  listenerList.remove(TargetListener.class,listener);
}


org.argouml.uml.ui.TabProps.fireTargetSet(TargetEvent)
{
  Object[] listeners=listenerList.getListenerList();
  for (int i=listeners.length - 2; i >= 0; i-=2) {
    if (listeners[i] == TargetListener.class) {
      ((TargetListener)listeners[i + 1]).targetSet(targetEvent);
    }
  }
}


org.argouml.uml.ui.TabProps.fireTargetAdded(TargetEvent)
{
  Object[] listeners=listenerList.getListenerList();
  for (int i=listeners.length - 2; i >= 0; i-=2) {
    if (listeners[i] == TargetListener.class) {
      ((TargetListener)listeners[i + 1]).targetAdded(targetEvent);
    }
  }
}


org.argouml.uml.ui.TabProps.fireTargetRemoved(TargetEvent)
{
  Object[] listeners=listenerList.getListenerList();
  for (int i=listeners.length - 2; i >= 0; i-=2) {
    if (listeners[i] == TargetListener.class) {
      ((TargetListener)listeners[i + 1]).targetRemoved(targetEvent);
    }
  }
}


-------------------------------------
Reading file: TestCases/Input/ArgoUML/SVNFilesSideBySide/15248/trunk_src_argouml-app_src_org_argouml_uml_ui_TabProps.java.v15248
org.argouml.uml.ui.TabProps.TabProps	0	
org.argouml.uml.ui.TabProps.TabProps	2	String	String	
org.argouml.uml.ui.TabProps.setOrientation	1	Orientation	
org.argouml.uml.ui.TabProps.addPanel	2	Class	PropPanel	
org.argouml.uml.ui.TabProps.setTarget	1	Object	
org.argouml.uml.ui.TabProps.refresh	0	
org.argouml.uml.ui.TabProps.findPanelFor	1	Object	
org.argouml.uml.ui.TabProps.createPropPanel	1	Object	
org.argouml.uml.ui.TabProps.getClassBaseName	0	
org.argouml.uml.ui.TabProps.getTarget	0	
org.argouml.uml.ui.TabProps.shouldBeEnabled	1	Object	
org.argouml.uml.ui.TabProps.targetAdded	1	TargetEvent	
org.argouml.uml.ui.TabProps.targetRemoved	1	TargetEvent	
org.argouml.uml.ui.TabProps.targetSet	1	TargetEvent	
org.argouml.uml.ui.TabProps.addTargetListener	1	TargetListener	
org.argouml.uml.ui.TabProps.removeTargetListener	1	TargetListener	
org.argouml.uml.ui.TabProps.fireTargetSet	1	TargetEvent	
org.argouml.uml.ui.TabProps.fireTargetAdded	1	TargetEvent	
org.argouml.uml.ui.TabProps.fireTargetRemoved	1	TargetEvent	
List of methods:
org.argouml.uml.ui.TabProps.TabProps()
{
  this("tab.properties","ui.PropPanel");
}


org.argouml.uml.ui.TabProps.TabProps(String,String)
{
  super(tabName);
  setIcon(new UpArrowIcon());
  TargetManager.getInstance().addTargetListener(this);
  setOrientation(Horizontal.getInstance());
  panelClassBaseName=panelClassBase;
  setLayout(new BorderLayout());
}


org.argouml.uml.ui.TabProps.setOrientation(Orientation)
{
  super.setOrientation(orientation);
  Enumeration pps=panels.elements();
  while (pps.hasMoreElements()) {
    Object o=pps.nextElement();
    if (o instanceof Orientable) {
      Orientable orientable=(Orientable)o;
      orientable.setOrientation(orientation);
    }
  }
}


org.argouml.uml.ui.TabProps.addPanel(Class,PropPanel)
{
  panels.put(clazz,panel);
}


org.argouml.uml.ui.TabProps.setTarget(Object)
{
  LOG.info("setTarget: there are " + TargetManager.getInstance().getTargets().size() + " targets");
  target=(target instanceof Fig) ? ((Fig)target).getOwner() : target;
  if (!(target == null || Model.getFacade().isAUMLElement(target) || target instanceof ArgoDiagram || target instanceof Critic)) {
    return;
  }
  if (lastPanel != null) {
    remove(lastPanel);
    if (lastPanel instanceof TargetListener) {
      removeTargetListener((TargetListener)lastPanel);
    }
  }
  this.target=target;
  if (target == null) {
    add(blankPanel,BorderLayout.CENTER);
    validate();
    repaint();
    lastPanel=blankPanel;
  }
 else {
    TabModelTarget newPanel=null;
    newPanel=findPanelFor(target);
    if (newPanel != null) {
      addTargetListener(newPanel);
    }
    if (newPanel instanceof JPanel) {
      add((JPanel)newPanel,BorderLayout.CENTER);
      lastPanel=(JPanel)newPanel;
    }
 else {
      add(blankPanel,BorderLayout.CENTER);
      validate();
      repaint();
      lastPanel=blankPanel;
    }
  }
}


org.argouml.uml.ui.TabProps.refresh()
{
  setTarget(TargetManager.getInstance().getTarget());
}


org.argouml.uml.ui.TabProps.findPanelFor(Object)
{
  TabModelTarget panel=panels.get(trgt.getClass());
  if (panel != null) {
    if (LOG.isDebugEnabled()) {
      LOG.debug("Getting prop panel for: " + trgt.getClass().getName() + ", "+ "found (in cache?) "+ panel);
    }
    return panel;
  }
  panel=createPropPanel(trgt);
  if (panel != null) {
    LOG.debug("Factory created " + panel.getClass().getName() + " for "+ trgt.getClass().getName());
    panels.put(trgt.getClass(),panel);
    if (panel instanceof PropPanel) {
      ((PropPanel)panel).buildToolbar();
    }
    return panel;
  }
  LOG.error("Failed to create a prop panel for : " + trgt);
  return null;
}


org.argouml.uml.ui.TabProps.createPropPanel(Object)
{
  TabModelTarget propPanel=null;
  for (  PropPanelFactory factory : PropPanelFactoryManager.getFactories()) {
    propPanel=factory.createPropPanel(targetObject);
    if (propPanel != null)     return propPanel;
  }
  if (targetObject instanceof FigText) {
    propPanel=new PropPanelString();
  }
  if (propPanel instanceof Orientable) {
    ((Orientable)propPanel).setOrientation(getOrientation());
  }
  if (propPanel instanceof PropPanel) {
    ((PropPanel)propPanel).setOrientation(getOrientation());
    ((PropPanel)propPanel).buildToolbar();
  }
  return propPanel;
}


org.argouml.uml.ui.TabProps.getClassBaseName()
{
  return panelClassBaseName;
}


org.argouml.uml.ui.TabProps.getTarget()
{
  return target;
}


org.argouml.uml.ui.TabProps.shouldBeEnabled(Object)
{
  if (target instanceof Fig) {
    target=((Fig)target).getOwner();
  }
  return ((target instanceof Diagram || Model.getFacade().isAUMLElement(target)) || target instanceof Critic && findPanelFor(target) != null);
}


org.argouml.uml.ui.TabProps.targetAdded(TargetEvent)
{
  setTarget(TargetManager.getInstance().getSingleTarget());
  fireTargetAdded(targetEvent);
  if (listenerList.getListenerCount() > 0) {
    validate();
    repaint();
  }
}


org.argouml.uml.ui.TabProps.targetRemoved(TargetEvent)
{
  setTarget(TargetManager.getInstance().getSingleTarget());
  fireTargetRemoved(targetEvent);
  validate();
  repaint();
}


org.argouml.uml.ui.TabProps.targetSet(TargetEvent)
{
  setTarget(TargetManager.getInstance().getSingleTarget());
  fireTargetSet(targetEvent);
  validate();
  repaint();
}


org.argouml.uml.ui.TabProps.addTargetListener(TargetListener)
{
  listenerList.add(TargetListener.class,listener);
}


org.argouml.uml.ui.TabProps.removeTargetListener(TargetListener)
{
  listenerList.remove(TargetListener.class,listener);
}


org.argouml.uml.ui.TabProps.fireTargetSet(TargetEvent)
{
  Object[] listeners=listenerList.getListenerList();
  for (int i=listeners.length - 2; i >= 0; i-=2) {
    if (listeners[i] == TargetListener.class) {
      ((TargetListener)listeners[i + 1]).targetSet(targetEvent);
    }
  }
}


org.argouml.uml.ui.TabProps.fireTargetAdded(TargetEvent)
{
  Object[] listeners=listenerList.getListenerList();
  for (int i=listeners.length - 2; i >= 0; i-=2) {
    if (listeners[i] == TargetListener.class) {
      ((TargetListener)listeners[i + 1]).targetAdded(targetEvent);
    }
  }
}


org.argouml.uml.ui.TabProps.fireTargetRemoved(TargetEvent)
{
  Object[] listeners=listenerList.getListenerList();
  for (int i=listeners.length - 2; i >= 0; i-=2) {
    if (listeners[i] == TargetListener.class) {
      ((TargetListener)listeners[i + 1]).targetRemoved(targetEvent);
    }
  }
}


-------------------------------------
ListOfCorpusMethodsPreviousVersion size: 19
ListOfCorpusMethodsCurrentVersion size: 19
Gold set methods: 
org.argouml.uml.ui.TabProps.setTarget(Object)
org.argouml.uml.ui.TabProps.shouldBeEnabled(Object)

##########################################################

File Name and Type: M	trunk_src_argouml-app_src_org_argouml_uml_cognitive_critics_CrAttrNameConflict.java
Reading file: TestCases/Input/ArgoUML/SVNFilesSideBySide/15248/trunk_src_argouml-app_src_org_argouml_uml_cognitive_critics_CrAttrNameConflict.java.vPrevious
org.argouml.uml.cognitive.critics.CrAttrNameConflict.CrAttrNameConflict	0	
org.argouml.uml.cognitive.critics.CrAttrNameConflict.predicate2	2	Object	Designer	
org.argouml.uml.cognitive.critics.CrAttrNameConflict.getClarifier	0	
List of methods:
org.argouml.uml.cognitive.critics.CrAttrNameConflict.CrAttrNameConflict()
{
  setupHeadAndDesc();
  addSupportedDecision(UMLDecision.INHERITANCE);
  addSupportedDecision(UMLDecision.STORAGE);
  addSupportedDecision(UMLDecision.NAMING);
  setKnowledgeTypes(Critic.KT_SYNTAX);
  addTrigger("structuralFeature");
  addTrigger("feature_name");
}


org.argouml.uml.cognitive.critics.CrAttrNameConflict.predicate2(Object,Designer)
{
  if (!(Model.getFacade().isAClassifier(dm))) {
    return NO_PROBLEM;
  }
  Collection<String> namesSeen=new ArrayList<String>();
  Iterator attrs=Model.getFacade().getAttributes(dm).iterator();
  while (attrs.hasNext()) {
    String name=Model.getFacade().getName(attrs.next());
    if (name == null || name.length() == 0) {
      continue;
    }
    if (namesSeen.contains(name)) {
      return PROBLEM_FOUND;
    }
    namesSeen.add(name);
  }
  return NO_PROBLEM;
}


org.argouml.uml.cognitive.critics.CrAttrNameConflict.getClarifier()
{
  return ClAttributeCompartment.getTheInstance();
}


-------------------------------------
Reading file: TestCases/Input/ArgoUML/SVNFilesSideBySide/15248/trunk_src_argouml-app_src_org_argouml_uml_cognitive_critics_CrAttrNameConflict.java.v15248
org.argouml.uml.cognitive.critics.CrAttrNameConflict.CrAttrNameConflict	0	
org.argouml.uml.cognitive.critics.CrAttrNameConflict.predicate2	2	Object	Designer	
org.argouml.uml.cognitive.critics.CrAttrNameConflict.getClarifier	0	
org.argouml.uml.cognitive.critics.CrAttrNameConflict.getCriticizedMetatypes	0	
List of methods:
org.argouml.uml.cognitive.critics.CrAttrNameConflict.CrAttrNameConflict()
{
  setupHeadAndDesc();
  addSupportedDecision(UMLDecision.INHERITANCE);
  addSupportedDecision(UMLDecision.STORAGE);
  addSupportedDecision(UMLDecision.NAMING);
  setKnowledgeTypes(Critic.KT_SYNTAX);
  addTrigger("structuralFeature");
  addTrigger("feature_name");
}


org.argouml.uml.cognitive.critics.CrAttrNameConflict.predicate2(Object,Designer)
{
  if (!(Model.getFacade().isAClassifier(dm))) {
    return NO_PROBLEM;
  }
  Collection<String> namesSeen=new ArrayList<String>();
  Iterator attrs=Model.getFacade().getAttributes(dm).iterator();
  while (attrs.hasNext()) {
    String name=Model.getFacade().getName(attrs.next());
    if (name == null || name.length() == 0) {
      continue;
    }
    if (namesSeen.contains(name)) {
      return PROBLEM_FOUND;
    }
    namesSeen.add(name);
  }
  return NO_PROBLEM;
}


org.argouml.uml.cognitive.critics.CrAttrNameConflict.getClarifier()
{
  return ClAttributeCompartment.getTheInstance();
}


org.argouml.uml.cognitive.critics.CrAttrNameConflict.getCriticizedMetatypes()
{
  Set<Object> ret=new HashSet<Object>();
  ret.add(Model.getMetaTypes().getClassifier());
  return ret;
}


-------------------------------------
ListOfCorpusMethodsPreviousVersion size: 3
ListOfCorpusMethodsCurrentVersion size: 4
Gold set methods: 
org.argouml.uml.cognitive.critics.CrAttrNameConflict.getCriticizedMetatypes()

##########################################################

File Name and Type: M	trunk_src_argouml-app_src_org_argouml_ui_explorer_rules_GoProfileToModel.java
Reading file: TestCases/Input/ArgoUML/SVNFilesSideBySide/15248/trunk_src_argouml-app_src_org_argouml_ui_explorer_rules_GoProfileToModel.java.vPrevious
org.argouml.ui.explorer.rules.GoProfileToModel.getRuleName	0	
org.argouml.ui.explorer.rules.GoProfileToModel.getChildren	1	Object	
org.argouml.ui.explorer.rules.GoProfileToModel.getDependencies	1	Object	
List of methods:
org.argouml.ui.explorer.rules.GoProfileToModel.getRuleName()
{
  return Translator.localize("misc.profile.model");
}


org.argouml.ui.explorer.rules.GoProfileToModel.getChildren(Object)
{
  if (parent instanceof Profile) {
    try {
      return ((Profile)parent).getProfilePackages();
    }
 catch (    ProfileException e) {
      return Collections.EMPTY_SET;
    }
  }
  return Collections.EMPTY_SET;
}


org.argouml.ui.explorer.rules.GoProfileToModel.getDependencies(Object)
{
  return Collections.EMPTY_SET;
}


-------------------------------------
Reading file: TestCases/Input/ArgoUML/SVNFilesSideBySide/15248/trunk_src_argouml-app_src_org_argouml_ui_explorer_rules_GoProfileToModel.java.v15248
org.argouml.ui.explorer.rules.GoProfileToModel.getRuleName	0	
org.argouml.ui.explorer.rules.GoProfileToModel.getChildren	1	Object	
org.argouml.ui.explorer.rules.GoProfileToModel.getDependencies	1	Object	
List of methods:
org.argouml.ui.explorer.rules.GoProfileToModel.getRuleName()
{
  return Translator.localize("misc.profile.model");
}


org.argouml.ui.explorer.rules.GoProfileToModel.getChildren(Object)
{
  if (parent instanceof Profile) {
    try {
      Collection col=((Profile)parent).getProfilePackages();
      return col;
    }
 catch (    ProfileException e) {
      return Collections.EMPTY_SET;
    }
  }
  return Collections.EMPTY_SET;
}


org.argouml.ui.explorer.rules.GoProfileToModel.getDependencies(Object)
{
  return Collections.EMPTY_SET;
}


-------------------------------------
ListOfCorpusMethodsPreviousVersion size: 3
ListOfCorpusMethodsCurrentVersion size: 3
Gold set methods: 
org.argouml.ui.explorer.rules.GoProfileToModel.getChildren(Object)

##########################################################

File Name and Type: A	trunk_src_argouml-app_src_org_argouml_ui_explorer_GoProfileToCritics.java
Reading file: DummyJavaFileForComparisonForAddedClasses.java
Reading file: TestCases/Input/ArgoUML/SVNFilesSideBySide/15248/trunk_src_argouml-app_src_org_argouml_ui_explorer_GoProfileToCritics.java.v15248
org.argouml.ui.explorer.GoProfileToCritics.getRuleName	0	
org.argouml.ui.explorer.GoProfileToCritics.getChildren	1	Object	
org.argouml.ui.explorer.GoProfileToCritics.getDependencies	1	Object	
List of methods:
org.argouml.ui.explorer.GoProfileToCritics.getRuleName()
{
  return Translator.localize("misc.profile.critic");
}


org.argouml.ui.explorer.GoProfileToCritics.getChildren(Object)
{
  if (parent instanceof Profile) {
    return ((Profile)parent).getCritics();
  }
  return Collections.EMPTY_SET;
}


org.argouml.ui.explorer.GoProfileToCritics.getDependencies(Object)
{
  return Collections.EMPTY_SET;
}


-------------------------------------
ListOfCorpusMethodsPreviousVersion size: 0
ListOfCorpusMethodsCurrentVersion size: 3
Gold set methods: 
org.argouml.ui.explorer.GoProfileToCritics.getRuleName()
org.argouml.ui.explorer.GoProfileToCritics.getChildren(Object)
org.argouml.ui.explorer.GoProfileToCritics.getDependencies(Object)

##########################################################

File Name and Type: R	trunk_src_argouml-app_src_org_argouml_profile_internal_ocl_ModelInterpreter.java
Reading file: TestCases/Input/ArgoUML/SVNFilesSideBySide/15248/trunk_src_argouml-app_src_org_argouml_profile_internal_ocl_ModelInterpreter.java.vPrevious
List of methods:
-------------------------------------
Reading file: TestCases/Input/ArgoUML/SVNFilesSideBySide/15248/trunk_src_argouml-app_src_org_argouml_profile_internal_ocl_ModelInterpreter.java.v15248
List of methods:
-------------------------------------
ListOfCorpusMethodsPreviousVersion size: 0
ListOfCorpusMethodsCurrentVersion size: 0
Gold set methods: 

##########################################################

File Name and Type: R	trunk_src_argouml-app_src_org_argouml_profile_internal_ocl_CompositeModelInterpreter.java
Reading file: TestCases/Input/ArgoUML/SVNFilesSideBySide/15248/trunk_src_argouml-app_src_org_argouml_profile_internal_ocl_CompositeModelInterpreter.java.vPrevious
org.argouml.profile.internal.ocl.CompositeModelInterpreter.addModelInterpreter	1	ModelInterpreter	
org.argouml.profile.internal.ocl.CompositeModelInterpreter.invokeFeature	5	HashMap<String,Object>	Object	String	String	Object[]	
List of methods:
org.argouml.profile.internal.ocl.CompositeModelInterpreter.addModelInterpreter(ModelInterpreter)
{
  set.add(mi);
}


org.argouml.profile.internal.ocl.CompositeModelInterpreter.invokeFeature(HashMap<String,Object>,Object,String,String,Object[])
{
  for (  ModelInterpreter mi : set) {
    Object ret=mi.invokeFeature(vt,subject,feature,type,parameters);
    if (ret != null) {
      return ret;
    }
  }
  return null;
}


-------------------------------------
Reading file: TestCases/Input/ArgoUML/SVNFilesSideBySide/15248/trunk_src_argouml-app_src_org_argouml_profile_internal_ocl_CompositeModelInterpreter.java.v15248
org.argouml.profile.internal.ocl.CompositeModelInterpreter.addModelInterpreter	1	ModelInterpreter	
org.argouml.profile.internal.ocl.CompositeModelInterpreter.invokeFeature	5	HashMap<String,Object>	Object	String	String	Object[]	
List of methods:
org.argouml.profile.internal.ocl.CompositeModelInterpreter.addModelInterpreter(ModelInterpreter)
{
  set.add(mi);
}


org.argouml.profile.internal.ocl.CompositeModelInterpreter.invokeFeature(HashMap<String,Object>,Object,String,String,Object[])
{
  for (  ModelInterpreter mi : set) {
    Object ret=mi.invokeFeature(vt,subject,feature,type,parameters);
    if (ret != null) {
      return ret;
    }
  }
  return null;
}


-------------------------------------
ListOfCorpusMethodsPreviousVersion size: 2
ListOfCorpusMethodsCurrentVersion size: 2
Gold set methods: 

##########################################################

