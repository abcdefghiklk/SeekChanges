<?xml version="1.0" encoding="UTF-8" standalone="no"?><bugrepository><bug fixdate="2011-09-20 08:41:02" id="3125" opendate="2011-09-20 08:24:34"><buginformation><summary>[FELIX-3125] [Framework] Use single file per bundle in bundle cache by default - ASF JIRA</summary><description>FELIX-2654 modified the bundle cache so it would use a single file per bundle to store bundle-related state (e.g., location, persisted state, etc.). The main reason was to reduce the amount of I/O performed during framework startup when you have lots of already cached bundles. This feature was disabled by default, since it didn't seem proper to introduce it in a micro release when it would result in bundle caches not being backward compatible with previous micro releases of 3.0.x. WIth the coming framework 4.0 release, we should switch this to be the default. Which means that new bundle caches created on 4.0 will not work with older releases. However, bundle caches created with older releases will be seamlessly converted by 4.0. Older caches will be converted non-destructively, so it is possible to go back, but if changes are made while running 4.0 on an older cache, then it is possible that they will get out of sync and will potentially no longer be backward compatible. For the foreseeable future, we can keep the felix.cache.singlebundlefile property which allows you to revert to the old behavior if you so choose. At some point in the future, though, it would be desirable to eliminate this property too and only support the new cache format.</description></buginformation><fixedFiles><file>framework.src.main.java.org.apache.felix.framework.cache.BundleArchive.java</file><file>framework.src.main.java.org.apache.felix.framework.cache.BundleCache.java</file></fixedFiles></bug><bug fixdate="2011-08-29 04:12:36" id="3094" opendate="2011-08-29 04:11:11"><buginformation><summary>[FELIX-3094] [Main] Launcher should attempt to restart framework if the system bundle was updated - ASF JIRA</summary><description>The launcher starts the framework then calls Framework.waitForStop(), which returns a FrameworkEvent with a type value to indicate why the framework was stopped. If the system bundle was updated/refreshed, then according to the spec the framework should be restarted. Although technically, this should probably restart the JVM process, we can support a weak restart by simply having the launcher restart the framework any time waitForStop() exits with FrameworkEvent.STOPPED_UPDATE.</description></buginformation><fixedFiles><file>main.src.main.java.org.apache.felix.main.Main.java</file></fixedFiles></bug><bug fixdate="2011-09-20 08:14:51" id="3071" opendate="2011-08-08 04:28:19"><buginformation><summary>[FELIX-3071] [Framework] It should be possible to limit number of open JAR files - ASF JIRA</summary><description>Currently, the framework opens a ZipFile for each bundle JAR file and one for each embedded JAR file on a bundle's class path. Needless to say, if you have lots of bundles in your system, this can lead to lots of open files for the framework process. It should be possible to modify the framework to obey some limit on the number of open ZipFiles. A general approach would be to have a configurable limit and whenever the framework wanted to open another, if the limit was exceeded it would have to close a not recently used ZipFile. Theoretically, this shouldn't be too much of an issue for classes in particular, because once they are loaded they are cached in memory and it isn't necessary to go back to the disk.</description></buginformation><fixedFiles><file>framework.src.main.java.org.apache.felix.framework.cache.DirectoryRevision.java</file><file>framework.src.main.java.org.apache.felix.framework.cache.JarRevision.java</file><file>framework.src.main.java.org.apache.felix.framework.cache.DirectoryContent.java</file><file>framework.src.main.java.org.apache.felix.framework.cache.BundleArchive.java</file><file>framework.src.test.java.org.apache.felix.framework.util.WeakZipFileTest.java</file><file>framework.src.main.java.org.apache.felix.framework.util.WeakZipFileFactory.java</file><file>framework.src.main.java.org.apache.felix.framework.util.SecureAction.java</file><file>framework.src.main.java.org.apache.felix.framework.util.ZipFileX.java</file><file>framework.src.main.java.org.apache.felix.framework.cache.BundleCache.java</file><file>framework.src.main.java.org.apache.felix.framework.util.Mutex.java</file><file>framework.src.main.java.org.apache.felix.framework.cache.JarContent.java</file></fixedFiles></bug><bug fixdate="2011-08-26 10:11:02" id="3000" opendate="2011-06-16 07:49:57"><buginformation><summary>[FELIX-3000] Move sending service registered event out of bundle lock - ASF JIRA</summary><description>We have a strange situation on a Framework 3.0.7 based system here which is not reproducible on all platforms. We can track down a system freeze/deadlock to three threads all contending for bundle locks and the global lock. See attached FELIX-3000-stacktrace.txt for the stack trace. Looking at the Framework source, particularly acquireBundleLock and acquireGlobalLock I cannot see where this "deadlock" can occur. The only hint I have is a note in the Felix.registerService: &gt; // TODO: CONCURRENCY - Reconsider firing event here, outside of the &gt; // bundle lock. I wonder whether this situation can be fixed with moving the service registration event ? Looking at the code it seems to have not been changed. Thus I report this against 3.0.7 where we saw this and 3.2.2 being the latest release.</description></buginformation><fixedFiles><file>src.main.java.org.apache.felix.framework.Felix.java</file><file>src.main.java.org.apache.felix.framework.ServiceRegistry.java</file><file>framework.src.main.java.org.apache.felix.framework.Felix.java</file><file>framework.src.main.java.org.apache.felix.framework.ServiceRegistry.java</file></fixedFiles></bug><bug fixdate="2011-06-15 05:12:10" id="2998" opendate="2011-06-15 05:10:05"><buginformation><summary>[FELIX-2998] [Framework] OSGi R4.3 changed filter handling of exceptions when calling equals()/compare() to return false - ASF JIRA</summary><description>Previously, the spec wasn't consistent/clear on how to handle exceptions thrown by equals()/compare() when evaluating filters. Now this situation is defined as returning false from the filter, which is consistent with other similar cases in filter processing.</description></buginformation><fixedFiles><file>framework.src.main.java.org.apache.felix.framework.capabilityset.CapabilitySet.java</file><file>framework.src.main.java.org.apache.felix.framework.capabilityset.SimpleFilter.java</file></fixedFiles></bug><bug fixdate="2011-09-20 08:42:52" id="2950" opendate="2011-05-13 03:49:27"><buginformation><summary>[FELIX-2950] [Framework] Adopt OSGi R4.3 API as framework internal API - ASF JIRA</summary><description>The R4.3 specification introduces more detailed API modeling bundle revisions and wiring. Rather than just facading our existing abstractions for these concepts, we should modify the framework implementation to adopt them wholesale (i.e., replace our existing abstractions with the spec'ed abstractions). Although the standard abstractions do not map one-to-one with our existing abstractions, they are reasonably close and the benefit of having an implementation that is consistent with the standard API probably outweighs the cost of changing, since very few people actually depend on our internal API. This issue will only be used for this internal refactoring process and generally will not be used as the issue for implementing new R4.3 functionality. We'll try to introduce separate issues for new any new functionality to make the change log more meaningful.</description></buginformation><fixedFiles><file>framework.src.main.java.org.apache.felix.framework.wiring.BundleWireImpl.java</file><file>framework.src.main.java.org.apache.felix.framework.cache.DirectoryContent.java</file><file>framework.src.main.java.org.apache.felix.framework.resolver.ResolveException.java</file><file>framework.src.main.java.org.osgi.framework.hooks.weaving.WeavingHook.java</file><file>framework.src.main.java.org.apache.felix.framework.BundleContextImpl.java</file><file>framework.src.main.java.org.osgi.framework.InvalidSyntaxException.java</file><file>framework.src.main.java.org.apache.felix.framework.cache.DirectoryRevision.java</file><file>framework.src.main.java.org.osgi.service.url.URLConstants.java</file><file>framework.src.main.java.org.osgi.framework.PackagePermission.java</file><file>framework.src.main.java.org.apache.felix.framework.resolver.HostModule.java</file><file>framework.src.main.java.org.apache.felix.framework.resolver.ResolverImpl.java</file><file>framework.src.main.java.org.osgi.service.packageadmin.PackageAdmin.java</file><file>framework.src.main.java.org.osgi.framework.hooks.bundle.FindHook.java</file><file>framework.src.main.java.org.apache.felix.framework.ServiceRegistry.java</file><file>framework.src.main.java.org.apache.felix.framework.RequiredBundleImpl.java</file><file>framework.src.main.java.org.osgi.framework.hooks.bundle.EventHook.java</file><file>framework.src.main.java.org.osgi.framework.BundleReference.java</file><file>framework.src.main.java.org.osgi.framework.hooks.service.FindHook.java</file><file>framework.src.main.java.org.apache.felix.framework.wiring.BundleCapabilityImpl.java</file><file>framework.src.main.java.org.osgi.framework.Filter.java</file><file>framework.src.main.java.org.apache.felix.framework.util.manifestparser.CapabilityImpl.java</file><file>framework.src.main.java.org.apache.felix.framework.StatefulResolver.java</file><file>framework.src.main.java.org.apache.felix.framework.EntryFilterEnumeration.java</file><file>framework.src.main.java.org.osgi.framework.BundleListener.java</file><file>framework.src.main.java.org.osgi.framework.Configurable.java</file><file>framework.src.main.java.org.apache.felix.framework.cache.Content.java</file><file>framework.src.main.java.org.osgi.framework.hooks.resolver.ResolverHookFactory.java</file><file>framework.src.main.java.org.apache.felix.framework.capabilityset.Requirement.java</file><file>framework.src.main.java.org.apache.felix.framework.resolver.Module.java</file><file>framework.src.main.java.org.osgi.framework.ServicePermission.java</file><file>framework.src.main.java.org.osgi.framework.hooks.service.EventHook.java</file><file>framework.src.main.java.org.osgi.util.tracker.BundleTracker.java</file><file>framework.src.main.java.org.osgi.framework.hooks.weaving.WovenClass.java</file><file>framework.src.main.java.org.osgi.framework.BundleException.java</file><file>framework.src.main.java.org.apache.felix.framework.capabilityset.CapabilitySet.java</file><file>framework.src.main.java.org.apache.felix.framework.capabilityset.Attribute.java</file><file>framework.src.main.java.org.apache.felix.framework.resolver.Candidates.java</file><file>framework.src.main.java.org.apache.felix.framework.BundleRevisionDependencies.java</file><file>framework.src.main.java.org.apache.felix.framework.util.manifestparser.ManifestParser.java</file><file>framework.src.main.java.org.osgi.service.url.URLStreamHandlerSetter.java</file><file>framework.src.main.java.org.apache.felix.framework.wiring.BundleRequirementImpl.java</file><file>framework.src.main.java.org.apache.felix.framework.BundleProtectionDomain.java</file><file>framework.src.main.java.org.osgi.framework.Version.java</file><file>framework.src.main.java.org.apache.felix.framework.cache.ContentDirectoryContent.java</file><file>framework.src.main.java.org.apache.felix.framework.capabilityset.SimpleFilter.java</file><file>framework.src.main.java.org.apache.felix.framework.Felix.java</file><file>framework.src.main.java.org.apache.felix.framework.resolver.ResolverWireImpl.java</file><file>framework.src.main.java.org.osgi.framework.wiring.BundleRequirement.java</file><file>framework.src.main.java.org.osgi.util.tracker.ServiceTrackerCustomizer.java</file><file>framework.src.main.java.org.osgi.framework.AdminPermission.java</file><file>framework.src.main.java.org.osgi.framework.ServiceEvent.java</file><file>framework.src.main.java.org.apache.felix.framework.BundleRevisionImpl.java</file><file>framework.src.main.java.org.osgi.service.packageadmin.ExportedPackage.java</file><file>framework.src.main.java.org.osgi.util.tracker.AbstractTracked.java</file><file>framework.src.main.java.org.apache.felix.framework.URLHandlersBundleURLConnection.java</file><file>framework.src.main.java.org.apache.felix.framework.wiring.FelixBundleWire.java</file><file>framework.src.main.java.org.apache.felix.framework.util.manifestparser.ParsedHeaderClause.java</file><file>framework.src.main.java.org.osgi.framework.FrameworkUtil.java</file><file>framework.src.main.java.org.osgi.framework.BundlePermission.java</file><file>framework.src.main.java.org.osgi.framework.hooks.service.EventListenerHook.java</file><file>framework.src.main.java.org.osgi.service.packageadmin.RequiredBundle.java</file><file>framework.src.main.java.org.osgi.framework.AdaptPermission.java</file><file>framework.src.main.java.org.apache.felix.framework.ServiceRegistrationImpl.java</file><file>framework.src.main.java.org.osgi.framework.startlevel.BundleStartLevel.java</file><file>framework.src.main.java.org.osgi.service.startlevel.StartLevel.java</file><file>framework.src.main.java.org.osgi.framework.launch.FrameworkFactory.java</file><file>framework.src.main.java.org.osgi.framework.ServiceReference.java</file><file>framework.src.main.java.org.osgi.framework.AllServiceListener.java</file><file>framework.src.main.java.org.apache.felix.framework.capabilityset.Capability.java</file><file>framework.src.main.java.org.osgi.framework.wiring.BundleWire.java</file><file>framework.src.main.java.org.apache.felix.framework.cache.JarContent.java</file><file>framework.src.main.java.org.osgi.framework.wiring.FrameworkWiring.java</file><file>framework.src.main.java.org.apache.felix.framework.util.manifestparser.RequirementImpl.java</file><file>framework.src.main.java.org.apache.felix.framework.cache.JarRevision.java</file><file>framework.src.main.java.org.osgi.framework.startlevel.FrameworkStartLevel.java</file><file>framework.src.main.java.org.osgi.framework.BundleEvent.java</file><file>framework.src.main.java.org.apache.felix.framework.resolver.CandidateComparator.java</file><file>framework.src.main.java.org.apache.felix.framework.resolver.ResourceNotFoundException.java</file><file>framework.src.main.java.org.osgi.util.tracker.ServiceTracker.java</file><file>framework.src.main.java.org.apache.felix.framework.BundleImpl.java</file><file>framework.src.main.java.org.osgi.framework.FrameworkListener.java</file><file>framework.src.main.java.org.osgi.framework.wiring.BundleRevisions.java</file><file>framework.src.main.java.org.apache.felix.framework.resolver.Resolver.java</file><file>framework.src.main.java.org.apache.felix.framework.util.Util.java</file><file>framework.src.main.java.org.apache.felix.framework.wiring.FelixBundleWireImpl.java</file><file>framework.src.main.java.org.osgi.framework.FrameworkEvent.java</file><file>framework.src.main.java.org.osgi.service.url.URLStreamHandlerService.java</file><file>framework.src.main.java.org.osgi.framework.Constants.java</file><file>framework.src.main.java.org.apache.felix.framework.resolver.ResolverWire.java</file><file>framework.src.main.java.org.apache.felix.framework.resolver.HostedRequirement.java</file><file>framework.src.main.java.org.apache.felix.framework.util.ShrinkableCollection.java</file><file>framework.src.main.java.org.apache.felix.framework.ExportedPackageImpl.java</file><file>framework.src.main.java.org.osgi.framework.ServiceFactory.java</file><file>framework.src.main.java.org.apache.felix.framework.capabilityset.Directive.java</file><file>framework.src.main.java.org.osgi.framework.launch.Framework.java</file><file>framework.src.main.java.org.apache.felix.framework.cache.BundleCache.java</file><file>framework.src.main.java.org.osgi.framework.ServiceListener.java</file><file>framework.src.main.java.org.apache.felix.framework.cache.BundleRevision.java</file><file>framework.src.main.java.org.osgi.framework.ServiceRegistration.java</file><file>framework.src.main.java.org.osgi.framework.wiring.BundleRevision.java</file><file>framework.src.main.java.org.apache.felix.framework.resolver.Content.java</file><file>framework.src.main.java.org.apache.felix.framework.BundleWiringImpl.java</file><file>framework.src.main.java.org.apache.felix.framework.resolver.WireImpl.java</file><file>framework.src.main.java.org.osgi.framework.hooks.weaving.WeavingException.java</file><file>framework.src.main.java.org.apache.felix.framework.resolver.HostBundleRevision.java</file><file>framework.src.main.java.org.osgi.framework.SignerProperty.java</file><file>framework.src.main.java.org.apache.felix.framework.ModuleImpl.java</file><file>framework.src.main.java.org.osgi.service.url.AbstractURLStreamHandlerService.java</file><file>framework.src.main.java.org.apache.felix.framework.ExtensionManager.java</file><file>framework.src.main.java.org.osgi.framework.hooks.service.ListenerHook.java</file><file>framework.src.main.java.org.osgi.framework.BundleContext.java</file><file>framework.src.main.java.org.apache.felix.framework.resolver.WireModuleImpl.java</file><file>framework.src.main.java.org.osgi.framework.wiring.BundleWiring.java</file><file>framework.src.main.java.org.apache.felix.framework.PackageAdminImpl.java</file><file>framework.src.main.java.org.apache.felix.framework.cache.BundleArchiveRevision.java</file><file>framework.src.main.java.org.apache.felix.framework.FilterImpl.java</file><file>framework.src.main.java.org.apache.felix.framework.resolver.Wire.java</file><file>framework.src.main.java.org.osgi.framework.wiring.BundleCapability.java</file><file>framework.src.main.java.org.apache.felix.framework.resolver.HostedCapability.java</file><file>framework.src.main.java.org.osgi.framework.ServiceException.java</file><file>framework.src.main.java.org.osgi.framework.SynchronousBundleListener.java</file><file>framework.src.main.java.org.apache.felix.framework.cache.BundleArchive.java</file><file>framework.src.main.java.org.osgi.framework.Bundle.java</file><file>framework.src.main.java.org.osgi.framework.hooks.resolver.ResolverHook.java</file><file>framework.src.main.java.org.osgi.util.tracker.BundleTrackerCustomizer.java</file><file>framework.src.main.java.org.apache.felix.framework.ResolverStateImpl.java</file><file>framework.src.main.java.org.osgi.framework.CapabilityPermission.java</file><file>framework.src.main.java.org.osgi.framework.BundleActivator.java</file><file>framework.src.main.java.org.apache.felix.framework.util.FelixConstants.java</file></fixedFiles></bug><bug fixdate="2011-08-15 03:14:42" id="2467" opendate="2010-07-08 02:26:56"><buginformation><summary>[FELIX-2467] The framework extensions should be returned when invoking the method PackageAdmin#getFragments with the system bundle - ASF JIRA</summary><description>The framework extensions should be returned when invoking the method PackageAdmin#getFragments with the system bundle. Today, null is returned even if extensions are activated.</description></buginformation><fixedFiles><file>framework.src.main.java.org.apache.felix.framework.ExtensionManager.java</file><file>framework.src.main.java.org.apache.felix.framework.Felix.java</file><file>framework.src.main.java.org.apache.felix.framework.BundleRevisionDependencies.java</file></fixedFiles></bug></bugrepository>