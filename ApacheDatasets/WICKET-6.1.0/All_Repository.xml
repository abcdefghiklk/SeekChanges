<?xml version="1.0" encoding="UTF-8" standalone="no"?><bugrepository><bug fixdate="2012-09-25 08:35:37" id="4780" opendate="2012-09-24 02:42:22"><buginformation><summary>[WICKET-4780] Using both MountedMapper and CryptoMapper causes warning - ASF JIRA</summary><description>Having both MountedMapper and CryptoMapper causes: WARN - WebPageRenderer - The Buffered response should be handled by BufferedResponseRequestHandler &#13;
	public void init() {&#13;
		setRootRequestMapper(new CryptoMapper(getRootRequestMapper(), this));&#13;
		mountPage("/home", HomePage.class);&#13;
		super.init();&#13;
	}&#13;
 &#13;
	public HomePage(final PageParameters parameters) {&#13;
		super(parameters);&#13;
&#13;
		add(new Label("version", getApplication().getFrameworkSettings().getVersion()));&#13;
&#13;
		add(new Form&lt;Void&gt;("form"));&#13;
	}&#13;
 &#13;
--HomePage.html&#13;
...&#13;
&lt;form wicket:id="form"&gt;&lt;/form&gt;&#13;
...</description></buginformation><fixedFiles><file>gelog.wicket-git.wicket-core.src.main.java.org.apache.wicket.core.request.mapper.CryptoMapper.java</file></fixedFiles></bug><bug fixdate="2012-09-21 09:05:19" id="4775" opendate="2012-09-20 01:26:09"><buginformation><summary>[WICKET-4775] PageParameters#mergeWith may loose values of the 'other' PP - ASF JIRA</summary><description>The code at org.apache.wicket.request.mapper.parameter.PageParameters#mergeWith() looks like: for (NamedPair curNamed : other.getAllNamed()) set(curNamed.getKey(), curNamed.getValue()); may loose some values if 'other' has a named parameter with several values.With the current code only the last name/value pair is preserved.</description></buginformation><fixedFiles><file>gelog.wicket-git.wicket-request.src.main.java.org.apache.wicket.request.mapper.parameter.PageParameters.java</file><file>gelog.wicket-git.wicket-request.src.test.java.org.apache.wicket.request.mapper.parameter.PageParametersTest.java</file></fixedFiles></bug><bug fixdate="2012-09-22 07:01:33" id="4773" opendate="2012-09-20 10:24:41"><buginformation><summary>[WICKET-4773] ComponentFeedbackPanel broken under Wicket 6.0.0 when RenderStrategy.REDIRECT_TO_RENDER - ASF JIRA</summary><description>Test case created on github, see https://github.com/danhaywood/wicket-4773 browse to http://localhost:8080/wicket-examples/forminput and follow the instructions.</description></buginformation><fixedFiles><file>gelog.wicket-git.wicket-core.src.main.java.org.apache.wicket.feedback.FeedbackMessage.java</file></fixedFiles></bug><bug fixdate="2012-09-21 09:11:09" id="4766" opendate="2012-09-18 09:32:04"><buginformation><summary>[WICKET-4766] multiple &lt;style&gt; tags in header are rendered incorrectly - ASF JIRA</summary><description>I created a small quickstart. The BasePage has some multiple &lt;style&gt; tags. Only he first one is rendered correctly, all following render the tag body only, the surrounding &lt;style&gt;&lt;/style&gt; is missing.</description></buginformation><fixedFiles><file>gelog.wicket-git.wicket-core.src.main.java.org.apache.wicket.markup.html.internal.HtmlHeaderContainer.java</file></fixedFiles></bug><bug fixdate="2012-09-17 09:45:37" id="4763" opendate="2012-09-14 04:58:19"><buginformation><summary>[WICKET-4763] Page's stateless hint is initially set to 'false' - ASF JIRA</summary><description>If RenderPerformanceListener is active then sessions will be created even for stateless pages. This happens because RPL is an IComponentInstantiationListener which adds a Behavior to every component. That causes a call to addStateChange() which in turns calls AbstractPageManager#touchPage. At this point #isPageStateless always returns false and so a session is bound. The problem is that all this happens very early in the creation of a Component when it's not fully initialized yet. If RPL implemented IComponentInitializationListener instead this problem wouldn't occur. I can't really tell if it's a bug or not that adding a Behavior in an IComponentInstantiationListener makes pages stateful... Maybe that's just generally not a good idea.</description></buginformation><fixedFiles><file>gelog.wicket-git.wicket-core.src.main.java.org.apache.wicket.Component.java</file><file>gelog.wicket-git.wicket-core.src.main.java.org.apache.wicket.Page.java</file><file>gelog.wicket-git.wicket-core.src.test.java.org.apache.wicket.ComponentTest.java</file></fixedFiles></bug><bug fixdate="2012-09-24 08:49:06" id="4761" opendate="2012-09-14 10:22:31"><buginformation><summary>[WICKET-4761] ModalWindow.closeCurrent Javascript error - ASF JIRA</summary><description>Hi, I have a window with a page on it that can upload a file. After uploading the file I call methode ModalWindow.closeCurrent for closing the window. But it doesn't close in internet explorer 9, in the ajax-debug window I get the following error: ERROR: Wicket.Ajax.Call.processEvaluation: Exception evaluating javascript: SyntaxError: Expected ';' So I debugged in ModalWindow and when I change the javascript in ModalWindow getCloseJavacriptInternal line 418: var close = function() {...} ; with that last ';' then it works fine. Thanks Ann</description></buginformation><fixedFiles><file>gelog.wicket-git.wicket-extensions.src.main.java.org.apache.wicket.extensions.ajax.markup.html.modal.ModalWindow.java</file></fixedFiles></bug><bug fixdate="2012-09-17 09:50:37" id="4760" opendate="2012-09-14 09:40:32"><buginformation><summary>[WICKET-4760] JavaScriptStripper fails with single line comments - ASF JIRA</summary><description>The valid input x++ // x++ gets transformed to x++ x++ which is syntactically invalid. This breaks the unminified version of bootstrap 2.1.1. The problem doesn't occur with multiline comments because the linebreaks are preserved there.</description></buginformation><fixedFiles><file>gelog.wicket-git.wicket-core.src.main.java.org.apache.wicket.util.string.JavaScriptStripper.java</file><file>gelog.wicket-git.wicket-core.src.test.java.org.apache.wicket.util.string.JavaScriptStripperTest.java</file></fixedFiles></bug><bug fixdate="2012-09-25 08:11:18" id="4758" opendate="2012-09-12 10:30:58"><buginformation><summary>[WICKET-4758] DOM ids change of the input fields of FilterToolbar - ASF JIRA</summary><description>The fix in WICKET-3916 is not effective: https://fisheye6.atlassian.com/changelog/wicket?cs=1148229 https://github.com/apache/wicket/blob/master/wicket-core/src/main/java/org/apache/wicket/Component.java#L2506 As one can see in Component.internalRenderComponent(), the method Component.onComponentTag(), where the markup id is written to the tag, is called before the behavior had a chance to call setOutputMarkupId(true). (The Behavior.onComponentTag() is called in Component.renderComponentTag() a few lines down. The behavior has to call setOutputMarkupId() earlier, like in onConfigure()</description></buginformation><fixedFiles><file>gelog.wicket-git.wicket-extensions.src.main.java.org.apache.wicket.extensions.markup.html.repeater.data.table.filter.FilterForm.java</file><file>gelog.wicket-git.wicket-extensions.src.main.java.org.apache.wicket.extensions.markup.html.repeater.data.table.filter.FilterToolbar.java</file></fixedFiles></bug><bug fixdate="2012-09-11 06:44:59" id="4757" opendate="2012-09-11 06:41:57"><buginformation><summary>[WICKET-4757] FormComponents remain invalid forever if there is no feedback panel - ASF JIRA</summary><description>if there is no feedback panel the error messages are not removed in ondetach and form component re-validation is skipped so the form component, once marked as invalid, will remain invalid forever or at least until its error messages are rendered. the error messages should be dropped and the form component should be re-validated on every form submit.</description></buginformation><fixedFiles><file>gelog.wicket-git.wicket-core.src.main.java.org.apache.wicket.markup.html.form.Form.java</file><file>gelog.wicket-git.wicket-core.src.test.java.org.apache.wicket.markup.html.form.FormValidationTest.java</file></fixedFiles></bug><bug fixdate="2012-09-20 04:19:36" id="4755" opendate="2012-09-09 07:59:43"><buginformation><summary>[WICKET-4755] "'NEW VALUE' is not a valid Serializable" error during ajax form submission - ASF JIRA</summary><description>I attached a quickstart with a test in TestHomePage#formSubmitsSuccessfully. The test throws "'NEW VALUE' is not a valid Serializable" error when "NEW VALUE" string in "value" textField is submitted as a part of myForm ajax submission. The problem is that a call to Objects#convertValue(nonNullNonArrayValue, Object.class) will always return null if nonNullNonArrayValue is a value that is not null and not an array! Shouldn't it always return the first parameter when the second parameter is Object.class? Sven on Wicket forum suggested to fix this as by adding another if-statement in Objects#convertValue() if (toType.isInstance(value)) { result = toType.cast(value); } See the following forum thread for more information http://apache-wicket.1842946.n4.nabble.com/Issues-with-default-type-conversion-in-1-5-td4651857.html</description></buginformation><fixedFiles><file>gelog.wicket-git.wicket-core.src.main.java.org.apache.wicket.ConverterLocator.java</file><file>gelog.wicket-git.wicket-core.src.test.java.org.apache.wicket.ConverterLocatorTest.java</file><file>gelog.wicket-git.wicket-util.src.main.java.org.apache.wicket.util.lang.Objects.java</file></fixedFiles></bug><bug fixdate="2012-09-07 01:45:17" id="4753" opendate="2012-09-07 01:43:02"><buginformation><summary>[WICKET-4753] Resource bundles are not resolved on PriorityHeaderItems - ASF JIRA</summary><description>If a bundle X provides resource A, and resource A is rendered as priority header item, the resource A is rendered, not bundle X.</description></buginformation><fixedFiles><file>gelog.wicket-git.wicket-core.src.main.java.org.apache.wicket.markup.head.ResourceAggregator.java</file><file>gelog.wicket-git.wicket-core.src.test.java.org.apache.wicket.resource.aggregator.ResourceAggregatorTest.java</file></fixedFiles></bug><bug fixdate="2012-09-06 03:35:26" id="4751" opendate="2012-09-06 01:58:34"><buginformation><summary>[WICKET-4751] UploadProgressBar regression - ASF JIRA</summary><description>The upload progress bar doesn't show anymore with 6.0.0: http://www.wicket-library.com/wicket-examples-6.0.x/upload/single The same example works with 1.5.8: http://www.wicket-library.com/wicket-examples/upload/single</description></buginformation><fixedFiles><file>gelog.wicket-git.wicket-extensions.src.main.java.org.apache.wicket.extensions.ajax.markup.html.form.upload.UploadProgressBar.java</file></fixedFiles></bug><bug fixdate="2012-09-05 11:11:39" id="4750" opendate="2012-09-05 11:00:43"><buginformation><summary>[WICKET-4750] AbstractDefaultAjaxBehavior.getCallbackFunction should not add the event attribute - ASF JIRA</summary><description>If getCallbackFunction is used on an EventAjaxBehavior, it will add an 'e' parameter to the ajax attributes, which causes the callback function returned by this method to register an event handler rather than performing the ajax call immediately. The event names should be ignored.</description></buginformation><fixedFiles><file>gelog.wicket-git.wicket-core.src.main.java.org.apache.wicket.ajax.AbstractDefaultAjaxBehavior.java</file></fixedFiles></bug><bug fixdate="2012-09-05 06:34:26" id="4749" opendate="2012-09-04 01:47:27"><buginformation><summary>[WICKET-4749] TabbedPanel - IModel&lt;?&gt; initModel() - ASF JIRA</summary><description>TabbedPanel added on panel which have CompoundPropertyPanel get Exception. Problem is in TabbedPanel method IModel&lt;?&gt; initModel(). @Override protected IModel&lt;?&gt; initModel() { IModel&lt;?&gt; model = super.initModel(); if (model == null) { model = new Model&lt;Integer&gt;(-1); } return model; } I think problem is the line with IModel&lt;?&gt; model = super.initModel(); When the tabbed panel is trying to get a model but found null then the model is trying to create. Call the initModel () and the calling super.initModel () executes initialization model ancestors. Which is the problem. Method for initModel () in the Component starts to look at his parents and returns CompoundPropertyModel from the panel where TabbedPanel added. And then isnt created new Model&lt;Integer&gt;(-1) which tabbed panel really need. When I override method initModel() from TabbedPanel again and delete line with super.initModel(), everything works fine.</description></buginformation><fixedFiles><file>gelog.wicket-git.wicket-extensions.src.main.java.org.apache.wicket.extensions.markup.html.tabs.TabbedPanel.java</file></fixedFiles></bug><bug fixdate="2012-09-03 02:58:46" id="4743" opendate="2012-09-03 02:36:59"><buginformation><summary>[WICKET-4743] SerializingObjectSizeOfStrategy do not use framework serializer - ASF JIRA</summary><description>Currently default implementation of SerializingObjectSizeOfStrategy do not use FrameworkSettings, thus it causes a ObjectNotSerializableException if serializer have custom behaviours.</description></buginformation><fixedFiles><file>gelog.wicket-git.wicket-core.src.main.java.org.apache.wicket.util.lang.WicketObjects.java</file></fixedFiles></bug><bug fixdate="2012-08-30 05:49:18" id="4738" opendate="2012-08-30 04:08:00"><buginformation><summary>[WICKET-4738] DownloadLink doesn't wrap the String model used for file name nor does it detach - ASF JIRA</summary><description>Component DownloadLink doesn't call method wrap of class Component on parameter fileNameModel. This causes models like StringResourceModel to not resolve resource bundles correctly. See the discussion here: http://stackoverflow.com/questions/12196533/how-to-use-wicket-stringresourcemodel-in-downloadlink The patch seems quite trivial. Detachment is also missing.</description></buginformation><fixedFiles><file>a.wicket-core.src.main.java.org.apache.wicket.markup.html.link.DownloadLink.java</file><file>gelog.wicket-git.wicket-core.src.main.java.org.apache.wicket.markup.html.link.DownloadLink.java</file><file>gelog.wicket-git.wicket-core.src.test.java.org.apache.wicket.markup.html.link.DownloadLinkTest.java</file></fixedFiles></bug><bug fixdate="2012-08-30 06:55:47" id="4737" opendate="2012-08-30 10:37:22"><buginformation><summary>[WICKET-4737] IllegalStateException on WicketFilter.init() after calling setFilterPath() - ASF JIRA</summary><description>WICKET-4626 broke the ability to pre-set the filter path using setFilterPath(). The patch introduced by WICKET-4626 calls setFilterPath() from within WicketFilter.init(), and setFilterPath() throws IllegalStateException if it is called more than once.</description></buginformation><fixedFiles><file>a.wicket-core.src.main.java.org.apache.wicket.protocol.http.WicketFilter.java</file><file>gelog.wicket-git.wicket-core.src.main.java.org.apache.wicket.protocol.http.WicketFilter.java</file></fixedFiles></bug><bug fixdate="2012-08-29 08:37:06" id="4735" opendate="2012-08-28 08:10:58"><buginformation><summary>[WICKET-4735] KittenCaptchaPanel is broken - ASF JIRA</summary><description>The code from the KittenCaptchaPanel example works fine with wicket versions 1.5.8 and 6.0.0-beta1, but fails to highlight kittens with versions 6.0.0-beta2 and 6.0.0-beta3.</description></buginformation><fixedFiles><file>gelog.wicket-git.wicket-extensions.src.main.java.org.apache.wicket.extensions.captcha.kittens.KittenCaptchaPanel.java</file></fixedFiles></bug><bug fixdate="2012-08-28 08:56:32" id="4734" opendate="2012-08-28 12:43:48"><buginformation><summary>[WICKET-4734] Button value is double escaped - ASF JIRA</summary><description>When the model property of a Button contains html entities (e.g. single quotes), these characters are double escaped: in Button.onComponentTag (getDefaultModelObjectAsString) and in ComponentTag.writeOutput</description></buginformation><fixedFiles><file>a.wicket-core.src.main.java.org.apache.wicket.markup.html.form.Button.java</file><file>a.wicket-core.src.test.java.org.apache.wicket.pageStore.AsynchronousDataStoreTest.java</file><file>gelog.wicket-git.wicket-core.src.main.java.org.apache.wicket.markup.html.form.Button.java</file><file>gelog.wicket-git.wicket-core.src.test.java.org.apache.wicket.markup.html.form.ButtonTest.java</file><file>gelog.wicket-git.wicket-extensions.src.main.java.org.apache.wicket.extensions.wizard.WizardButton.java</file></fixedFiles></bug><bug fixdate="2012-08-29 12:03:30" id="4732" opendate="2012-08-27 09:04:45"><buginformation><summary>[WICKET-4732] CssPackageResource doesn't work if the extension isn't css - ASF JIRA</summary><description>CssPackageResource#processResponse is never called if the extension isn't css. It works for .css because PackageResourceReference#getResource checks if the extension is css and then creates a CssPackageResource. For anything else than .css/.js a PackageResource is created. Actually the overridden processResponse method in CssPackageResource (instead of PackageResource) should get called, but ResourceReferenceRegistry#createDefaultResourceReference installs a plain PackageResource which gets called later.</description></buginformation><fixedFiles><file>gelog.wicket-git.wicket-core.src.main.java.org.apache.wicket.request.mapper.BasicResourceReferenceMapper.java</file><file>gelog.wicket-git.wicket-core.src.test.java.org.apache.wicket.request.resource.LessResourceReferenceTest.java</file></fixedFiles></bug><bug fixdate="2012-09-04 07:39:00" id="4729" opendate="2012-08-24 07:57:09"><buginformation><summary>[WICKET-4729] atmosphere example will stop working if opening the same url in a different tab in the same browser - ASF JIRA</summary><description>If the url of a running atmosphere example is copied and then opened in a different tab while the old one left open in the same browser, i.e. there are two atmosphere examples of the same url opened at the same time in a browser, one of them will stop working. I found the cause of this problem is that trackingPages in EventBus is using a BiMap. If there are different tracking-ids mapping to the same PageKey, one of the map entry will be removed. The simple solution would be replacing the BiMap with HashMap, but I think there might be reasons why BiMap is used here.</description></buginformation><fixedFiles><file>gelog.wicket-git.wicket-experimental.wicket-atmosphere.src.main.java.org.apache.wicket.atmosphere.AtmosphereBehavior.java</file><file>gelog.wicket-git.wicket-experimental.wicket-atmosphere.src.main.java.org.apache.wicket.atmosphere.EventBus.java</file></fixedFiles></bug><bug fixdate="2012-08-28 04:19:04" id="4645" opendate="2012-07-09 01:00:53"><buginformation><summary>[WICKET-4645] encodeURL broken on Tomcat 7.0.28 - ASF JIRA</summary><description>During page transition wicket used to encode an '../../tisch' which results in an exception: Caused by: java.lang.IllegalArgumentException at org.apache.catalina.connector.Response.normalize(Response.java:1799) The transition (within an ajax call) : http://localhost:8080/wicket/bookmarkable/de.test.pool.manage.ManagePool?11 http://localhost:8080/tisch IMHO the double parent ".." is correct There exists already an bugzilla issue created but rejected as invalid https://issues.apache.org/bugzilla/show_bug.cgi?id=53469. If the wicket code works as expected there must be an error in the tomcat. Maybe the wicket development team has closer access to the tomcat developers</description></buginformation><fixedFiles><file>gelog.wicket-git.wicket-core.src.main.java.org.apache.wicket.protocol.http.servlet.ServletWebResponse.java</file><file>gelog.wicket-git.wicket-core.src.main.java.org.apache.wicket.util.string.UrlUtils.java</file><file>gelog.wicket-git.wicket-core.src.test.java.org.apache.wicket.request.cycle.RequestCycleUrlForTest.java</file><file>gelog.wicket-git.wicket-core.src.test.java.org.apache.wicket.request.cycle.UrlRendererTest.java</file><file>gelog.wicket-git.wicket-core.src.test.java.org.apache.wicket.util.string.UrlUtilsTest.java</file><file>gelog.wicket-git.wicket-request.src.main.java.org.apache.wicket.request.Url.java</file><file>gelog.wicket-git.wicket-request.src.main.java.org.apache.wicket.request.UrlRenderer.java</file><file>gelog.wicket-git.wicket-request.src.main.java.org.apache.wicket.request.UrlUtils.java</file><file>gelog.wicket-git.wicket-request.src.test.java.org.apache.wicket.request.UrlUtilsTest.java</file></fixedFiles></bug><bug fixdate="2012-09-04 10:52:10" id="4748" opendate="2012-09-04 09:22:07"><buginformation><summary>[WICKET-4748] Improve WicketTester to be able to find AjaxBehaviors on second/third/... event name - ASF JIRA</summary><description>Since Wicket 6.0 it is possible to pass several event names to any AbstractDefaultAjaxBehavior via AjaxRequestAttributes#setEventNames(String...) or by using jQuery's specific compound event name (e.g. AjaxEventBehavior("eventOne eventTwo")). WicketTesterHelper#findAjaxEventBehavior() currently can only work with AjaxEventBehavior and its specializations and only with full event name, i.e. the test should use "eventOne eventTwo".</description></buginformation><fixedFiles><file>gelog.wicket-git.wicket-core.src.main.java.org.apache.wicket.util.tester.WicketTesterHelper.java</file></fixedFiles></bug><bug fixdate="2012-09-03 06:36:20" id="4745" opendate="2012-09-03 04:20:50"><buginformation><summary>[WICKET-4745] Allow to set initial state of DebugBar to expanded / collapsed - ASF JIRA</summary><description>The current implementation of DebugBar initially loads in expanded state and can be collapsed by clicking on it. If possible I would like to be able to set the initial state of the DebugBar from code. Right now I'm using @Override public void renderHead(final IHeaderResponse response) { super.renderHead(response); response.renderOnLoadJavaScript("wicketDebugBarCollapse();"); } as a workaround.</description></buginformation><fixedFiles><file>gelog.wicket-git.wicket-devutils.src.main.java.org.apache.wicket.devutils.debugbar.DebugBar.java</file></fixedFiles></bug><bug fixdate="2012-09-03 12:45:59" id="4736" opendate="2012-08-29 11:35:37"><buginformation><summary>[WICKET-4736] JavaScriptFilteredIntoFooterHeaderResponse should reverse filter logic - ASF JIRA</summary><description>JavaScriptFilteredIntoFooterHeaderResponse creates two buckets. One for CSS and one for JS. The current logic is that everything that isn't CSS must be JS and so gets put at the bottom of the page. This breaks if CssAcceptingHeaderResponseFilter mistakingly identifies something as non-CSS (eg a CSS file with another extension). Also everything else that isn't CSS gets put into the footer bucket (which should contain only JS). It would be better if it only puts things in the footer bucket if it can determine that it's JS and sort everything else into the header bucket.</description></buginformation><fixedFiles><file>gelog.wicket-git.wicket-core.src.main.java.org.apache.wicket.markup.head.filter.JavaScriptFilteredIntoFooterHeaderResponse.java</file></fixedFiles></bug><bug fixdate="2012-09-03 11:02:53" id="4731" opendate="2012-08-26 08:33:23"><buginformation><summary>[WICKET-4731] TimeField not able to work with a java.sql.Time - ASF JIRA</summary><description>When using the TimeField with a model whose object is a java.sql.Time, I get an error similar to the following when submitting the form: Last cause: Cannot parse '1/1/70' using format java.text.SimpleDateFormat@b4dc7db3 Here's how the TimeField is constructed: TimeField tf = new TimeField(id, new Model&lt;java.sql.Time&gt;() { public java.sql.Time getObject() { // return java.sql.Time } }); This error is occurring because SqlTimeConverter is trying to convert the string representation of the java.util.Date obtained from the TimeField. TimeField doesn't support anything other than java.util.Date. It would be useful if TimeField could work with subclasses of java.util.Date such as java.sql.Time. In order to achieve this, I would like to propose: Changing setConvertedInput(new Date(date.getMillis())); in DateTimeField.convertInput() to setConvertedInput(newDateInstance(date.getMillis())); Create an overridable newDateInstance(long) method. Users of TimeField can override this method to create a java.sql.Time instance instead of a java.util.Date. The form component conversion process will then work when the model object is a java.sql.Time.</description></buginformation><fixedFiles><file>gelog.wicket-git.wicket-datetime.src.main.java.org.apache.wicket.extensions.yui.calendar.DateTimeField.java</file><file>gelog.wicket-git.wicket-datetime.src.main.java.org.apache.wicket.extensions.yui.calendar.TimeField.java</file></fixedFiles></bug><bug fixdate="2012-09-04 11:03:39" id="4730" opendate="2012-08-24 12:25:16"><buginformation><summary>[WICKET-4730] Filter component does not clear filter fields - ASF JIRA</summary><description>The GoAndClearFilter.onClearSubmit() does not clear filter fields because the originalState member has the current values of the filter. I think it should create a new instance of the originalState class instead of clone the model. To verify use the phonebook sample (https://github.com/wicketstuff/core/tree/master/jdk-1.6-parent/phonebook). The clear only works if "go" was not pressed after enter some values in the filter, but if you press go and then want to clear the filter it keeps the values. Attached is a patch that makes the phonebook sample work. It might also be useful if the originalState attribute were made protected or accessible via protected method to allow users to overwrite the onClearSubmit() method and access the originalState attribute.</description></buginformation><fixedFiles><file>gelog.wicket-git.wicket-extensions.src.main.java.org.apache.wicket.extensions.markup.html.repeater.data.table.filter.GoAndClearFilter.java</file></fixedFiles></bug><bug fixdate="2012-09-11 06:46:13" id="3969" opendate="2011-08-17 05:44:25"><buginformation><summary>[WICKET-3969] Add CDI integration - ASF JIRA</summary><description>Introduce integration with CDI containers which should include injection of components with CDI dependencies conversation scope propagation across pages</description></buginformation><fixedFiles><file>gelog.wicket-git.wicket-examples.src.main.java.org.apache.wicket.examples.weld.ApplicationCounter.java</file><file>gelog.wicket-git.wicket-examples.src.main.java.org.apache.wicket.examples.weld.ConversationCounter.java</file><file>gelog.wicket-git.wicket-examples.src.main.java.org.apache.wicket.examples.weld.ConversationPage1.java</file><file>gelog.wicket-git.wicket-examples.src.main.java.org.apache.wicket.examples.weld.ConversationPage2.java</file><file>gelog.wicket-git.wicket-examples.src.main.java.org.apache.wicket.examples.weld.Counter.java</file><file>gelog.wicket-git.wicket-examples.src.main.java.org.apache.wicket.examples.weld.InjectionPage.java</file><file>gelog.wicket-git.wicket-examples.src.main.java.org.apache.wicket.examples.weld.WeldApplication.java</file><file>gelog.wicket-git.wicket-weld.src.main.java.org.apache.wicket.cdi.CdiContainer.java</file><file>gelog.wicket-git.wicket-weld.src.main.java.org.apache.wicket.cdi.CdiInjector.java</file><file>gelog.wicket-git.wicket-weld.src.main.java.org.apache.wicket.cdi.ConversationPropagation.java</file><file>gelog.wicket-git.wicket-weld.src.main.java.org.apache.wicket.cdi.ConversationPropagator.java</file><file>gelog.wicket-git.wicket-weld.src.main.java.org.apache.wicket.cdi.NonContextual.java</file><file>gelog.wicket-git.wicket-weld.src.main.java.org.apache.wicket.cdi.weld.WeldConfiguration.java</file><file>gelog.wicket-git.wicket-weld.src.main.java.org.apache.wicket.cdi.weld.WeldContainer.java</file><file>gelog.wicket-git.wicket-weld.src.test.java.org.apache.wicket.util.license.ApacheLicenceHeaderTest.java</file><file>wicket-examples.src.main.java.org.apache.wicket.examples.weld.ApplicationCounter.java</file><file>wicket-examples.src.main.java.org.apache.wicket.examples.weld.ConversationCounter.java</file><file>wicket-examples.src.main.java.org.apache.wicket.examples.weld.ConversationPage1.java</file><file>wicket-examples.src.main.java.org.apache.wicket.examples.weld.ConversationPage2.java</file><file>wicket-examples.src.main.java.org.apache.wicket.examples.weld.Counter.java</file><file>wicket-examples.src.main.java.org.apache.wicket.examples.weld.InjectionPage.java</file><file>wicket-examples.src.main.java.org.apache.wicket.examples.weld.WeldApplication.java</file><file>wicket-weld.src.main.java.org.apache.wicket.cdi.CdiContainer.java</file><file>wicket-weld.src.main.java.org.apache.wicket.cdi.CdiInjector.java</file><file>wicket-weld.src.main.java.org.apache.wicket.cdi.ConversationPropagation.java</file><file>wicket-weld.src.main.java.org.apache.wicket.cdi.ConversationPropagator.java</file><file>wicket-weld.src.main.java.org.apache.wicket.cdi.NonContextual.java</file><file>wicket-weld.src.main.java.org.apache.wicket.cdi.weld.WeldConfiguration.java</file><file>wicket-weld.src.main.java.org.apache.wicket.cdi.weld.WeldContainer.java</file><file>wicket-weld.src.test.java.org.apache.wicket.util.license.ApacheLicenceHeaderTest.java</file></fixedFiles></bug></bugrepository>