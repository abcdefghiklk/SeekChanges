<?xml version="1.0" encoding="UTF-8" standalone="no"?><bugrepository><bug fixdate="2011-07-19 12:48:18" id="2159" opendate="2011-07-13 12:41:01"><buginformation><summary>[PIG-2159] New logical plan uses incorrect class for SUM causing for ClassCastException - ASF JIRA</summary><description>The below is my script; &#13;
A = load 'input1' using PigStorage(',')  as (f1:int,f2:int,f3:int,f4:long,f5:double);&#13;
B = load 'input2' using PigStorage(',')  as (f1:int,f2:int,f3:int,f4:long,f5:double);&#13;
C = load 'input_Main' using PigStorage(',')  as (f1:int,f2:int,f3:int);&#13;
U = UNION ONSCHEMA A,B;&#13;
J = join C by (f1,f2,f3) LEFT OUTER, U by (f1,f2,f3);&#13;
Porj = foreach J generate C::f1 as f1 ,C::f2 as f2,C::f3 as f3,U::f4 as f4,U::f5 as f5;&#13;
G = GROUP Porj by (f1,f2,f3,f5);&#13;
Final = foreach G generate SUM(Porj.f4) as total;&#13;
dump Final;&#13;
 The script fails at while computing the sum with class cast exception. Caused by: java.lang.ClassCastException: java.lang.Long cannot be cast to java.lang.Double at org.apache.pig.builtin.DoubleSum$Initial.exec(DoubleSum.java:82) ... 19 more This is clearly a bug in the logical plan created in 0.9. The sum operation should have processed using org.apache.pig.builtin.LongSum, but instead 0.9 logical plan have used org.apache.pig.builtin.DoubleSum which is meant for sum of doubles. And hence the ClassCastException. The same script works fine with Pig 0.8.</description></buginformation><fixedFiles><file>test.org.apache.pig.parser.TestUnionOnSchemaSetter.java</file><file>src.org.apache.pig.newplan.logical.relational.LOUnion.java</file><file>test.org.apache.pig.test.TestEvalPipeline2.java</file></fixedFiles></bug><bug fixdate="2011-07-20 11:58:19" id="2146" opendate="2011-06-28 12:56:32"><buginformation><summary>[PIG-2146] POStore.getSchema() returns null because of which PigOutputCommitter is not storing schema while cleanup - ASF JIRA</summary><description>The below is my script; &#13;
register piggybank.jar;&#13;
a = load 'myinput' using PigStorage(',') as (f1:chararray,f2:chararray,f3:chararray);&#13;
b = distinct a;&#13;
c = limit b 2;&#13;
store c into 'pss001' using org.apache.pig.piggybank.storage.PigStorageSchema();&#13;
 Input ------- a,1,aa b,2,bb c,3,cc For this script , PigStorageSchema is not generating .pig_headers and .pig_schema files. While debugging I could see that storeSchema(..) method itself is not invoked.The schema object for the store is returned as null (POStore.getSchema()) because of which PigOutputCommitter is not invoking the storSchema. The same schema object is valid when I run it in local mode. This issue is happening for Pig 0.9 also.</description></buginformation><fixedFiles><file>src.org.apache.pig.backend.hadoop.executionengine.mapReduceLayer.MRCompiler.java</file><file>test.org.apache.pig.test.TestLimitSchemaStore.java</file><file>test.org.apache.pig.test.TestMRCompiler.java</file></fixedFiles></bug><bug fixdate="2011-06-29 01:32:02" id="2144" opendate="2011-06-27 03:23:46"><buginformation><summary>[PIG-2144] ClassCastException when using IsEmpty(DIFF()) - ASF JIRA</summary><description>I have following input &lt;name&gt;:&lt;nickname&gt;, for which I want to find records where name is different from nickname. input/name_nickname.txt &#13;
Bharat:Bharat&#13;
Amita:Amita&#13;
Mitesh:Mitesh&#13;
Reenu:Anshu&#13;
Shikha:Shikhu&#13;
Shilpa:Shilpi&#13;
 I have following script to find records where name is different from nickname. isEmpty_diff.pig &#13;
&#13;
A = LOAD 'input/name_nickname.txt' using PigStorage(':');&#13;
&#13;
B = FILTER A BY NOT IsEmpty(DIFF($0, $1));&#13;
&#13;
DUMP B;&#13;
 The above pig script works with older pig versions (e.g. 0.8.0 (r1043805)) and gives following output output of isEmpty_diff.pig &#13;
(Reenu,Anshu)&#13;
(Shikha,Shikhu)&#13;
(Shilpa,Shilpi)&#13;
 However, the above pig script (isEmpty_diff.pig) fails on Pig 0.9 (e.g. 0.9.0.xx (r1127671)) and newer version of Pig 0.8 (e.g. version 0.8.0.xx (r1102885)) , with ClassCastException ClassCastException &#13;
java.lang.ClassCastException: org.apache.pig.data.DefaultDataBag cannot be cast to java.lang.Boolean&#13;
        at org.apache.pig.backend.hadoop.executionengine.physicalLayer.expressionOperators.PONot.getNext(PONot.java:75)&#13;
        at org.apache.pig.backend.hadoop.executionengine.physicalLayer.PhysicalOperator.getNext(PhysicalOperator.java:318)&#13;
        at org.apache.pig.backend.hadoop.executionengine.physicalLayer.expressionOperators.POUserFunc.processInput(POUserFunc.java:159)&#13;
        at org.apache.pig.backend.hadoop.executionengine.physicalLayer.expressionOperators.POUserFunc.getNext(POUserFunc.java:184)&#13;
        at org.apache.pig.backend.hadoop.executionengine.physicalLayer.expressionOperators.POUserFunc.getNext(POUserFunc.java:269)&#13;
        at org.apache.pig.backend.hadoop.executionengine.physicalLayer.expressionOperators.PONot.getNext(PONot.java:71)&#13;
        at org.apache.pig.backend.hadoop.executionengine.physicalLayer.relationalOperators.POFilter.getNext(POFilter.java:148)&#13;
        at org.apache.pig.backend.hadoop.executionengine.mapReduceLayer.PigMapBase.runPipeline(PigMapBase.java:261)&#13;
        at org.apache.pig.backend.hadoop.executionengine.mapReduceLayer.PigMapBase.map(PigMapBase.java:256)&#13;
        at org.apache.pig.backend.hadoop.executionengine.mapReduceLayer.PigMapBase.map(PigMapBase.java:58)&#13;
        at org.apache.hadoop.mapreduce.Mapper.run(Mapper.java:144)&#13;
        at org.apache.hadoop.mapred.MapTask.runNewMapper(MapTask.java:676)&#13;
        at org.apache.hadoop.mapred.MapTask.run(MapTask.java:336)&#13;
        at org.apache.hadoop.mapred.LocalJobRunner$Job.run(LocalJobRunner.java:210)&#13;
 As a workaround, I used the following pig script. &#13;
A = LOAD 'input/name_nickname.txt' using PigStorage(':');&#13;
&#13;
--B = FILTER A BY NOT IsEmpty(DIFF($0, $1));&#13;
B1 = FOREACH A GENERATE $0, $1, DIFF($0, $1);&#13;
B2 = FILTER B1 BY NOT IsEmpty($2);&#13;
B = FOREACH B2 GENERATE $0, $1;&#13;
&#13;
DUMP B;</description></buginformation><fixedFiles><file>src.org.apache.pig.PigServer.java</file><file>test.org.apache.pig.test.TestFilterSimplification.java</file><file>src.org.apache.pig.newplan.logical.rules.NotConversionVisitor.java</file></fixedFiles></bug><bug fixdate="2011-06-23 12:35:21" id="2140" opendate="2011-06-22 09:06:41"><buginformation><summary>[PIG-2140] Usage printed from Main.java gives wrong option for disabling LogicalExpressionSimplifier - ASF JIRA</summary><description>The correct command line option for disabling LogicalExpressionSimplifier is "-t FilterLogicExpressionSimplifier" , not "-t LogicalExpressionSimplifier".</description></buginformation><fixedFiles><file>src.org.apache.pig.Main.java</file></fixedFiles></bug><bug fixdate="2011-06-25 01:07:14" id="2139" opendate="2011-06-22 08:58:52"><buginformation><summary>[PIG-2139] LogicalExpressionSimplifier optimizer rule should check if udf is deterministic while checking if they are equal - ASF JIRA</summary><description>LogicalExpressionSimplifier simplifies filter expressions. In the process, it compares udfs to see if they are 'equal' (ie expected to produce same results). But it does not check if the udfs are annotated as @Nondeterministic. If such an annotation exists, then the udfs should not be considered equal. UserFuncition.isEqual() is being used to compare the udfs.</description></buginformation><fixedFiles><file>src.org.apache.pig.newplan.logical.rules.OptimizerUtils.java</file><file>src.org.apache.pig.newplan.logical.relational.LogicalPlan.java</file><file>test.org.apache.pig.test.TestFilterSimplification.java</file><file>src.org.apache.pig.newplan.logical.expression.UserFuncExpression.java</file></fixedFiles></bug><bug fixdate="2011-06-24 03:39:20" id="2137" opendate="2011-06-22 04:33:41"><buginformation><summary>[PIG-2137] SAMPLE should not be pushed above DISTINCT - ASF JIRA</summary><description>I have an input file that contains 50,000 distinct integers. Each integer is repeated twice, for a total of 100,000 lines. Script 1, using GROUP BY to get distinct entries in the data, works: &#13;
&#13;
grunt&gt; f = load 'tmp/dupnumbers.txt';              &#13;
grunt&gt; d = foreach (group f by $0) generate group; &#13;
grunt&gt; s = sample d 0.01;                          &#13;
grunt&gt; n = foreach (group s all) generate COUNT(s);&#13;
grunt&gt; dump n;&#13;
(493)&#13;
 Script 2, using DISTINCT for the same purpose, allows sampling to be done before DISTINCT: &#13;
grunt&gt; f = load 'tmp/dupnumbers.txt';              &#13;
grunt&gt; d = distinct f;&#13;
grunt&gt; s = sample d 0.01;                          &#13;
grunt&gt; n = foreach (group s all) generate COUNT(s);&#13;
(980)</description></buginformation><fixedFiles><file>test.org.apache.pig.test.TestNewPlanFilterRule.java</file><file>src.org.apache.pig.newplan.logical.rules.PushUpFilter.java</file></fixedFiles></bug><bug fixdate="2011-06-01 11:10:02" id="2106" opendate="2011-06-01 10:56:37"><buginformation><summary>[PIG-2106] Fix Zebra unit test TestBasicUnion.testNeg3, TestBasicUnion.testNeg4 - ASF JIRA</summary><description>Two zebra unit tests are broken after PIG-2084. We need to fix them.</description></buginformation><fixedFiles><file>contrib.zebra.src.test.org.apache.hadoop.zebra.pig.TestBasicUnion.java</file></fixedFiles></bug><bug fixdate="2011-05-24 01:12:18" id="2089" opendate="2011-05-23 09:06:07"><buginformation><summary>[PIG-2089] Javadoc for ResourceFieldSchema.getSchema() is wrong - ASF JIRA</summary><description>Javadoc says: "Only fields of type tuple should have a schema". Actually bag, map(starting from 0.9) also can have schema.</description></buginformation><fixedFiles><file>src.org.apache.pig.ResourceSchema.java</file></fixedFiles></bug><bug fixdate="2011-05-23 09:19:33" id="2088" opendate="2011-05-23 07:32:50"><buginformation><summary>[PIG-2088] Return alias validation failed when there is single line comment in the macro - ASF JIRA</summary><description>The following script &#13;
define test() returns b { &#13;
   a = load 'data' as (name, age, gpa);&#13;
-- message &#13;
   $b = filter a by (int)age &gt; 40; &#13;
};&#13;
&#13;
beta = test();&#13;
store beta into 'output';&#13;
 results in a validation failure: &#13;
ERROR 1200 "Macro test missing return alias b"</description></buginformation><fixedFiles><file>test.org.apache.pig.test.TestMacroExpansion.java</file><file>src.org.apache.pig.parser.PigMacro.java</file></fixedFiles></bug><bug fixdate="2011-05-23 09:37:31" id="2084" opendate="2011-05-20 06:44:01"><buginformation><summary>[PIG-2084] pig is running validation for a statement at a time batch mode, instead of running it for whole script - ASF JIRA</summary><description>In PIG-2059, a change was made to run validation for each statement instead of running it once for the whole script. This slows down the validation phase, and it ends up taking tens of seconds.</description></buginformation><fixedFiles><file>test.org.apache.pig.test.TestLogicalPlanBuilder.java</file><file>src.org.apache.pig.PigServer.java</file><file>test.org.apache.pig.parser.TestErrorHandling.java</file><file>test.org.apache.pig.test.TestPigServer.java</file><file>src.org.apache.pig.tools.grunt.GruntParser.java</file><file>test.org.apache.pig.test.TestBuiltin.java</file><file>test.org.apache.pig.test.TestDataBagAccess.java</file><file>test.org.apache.pig.test.TestNewPlanLogToPhyTranslationVisitor.java</file><file>src.org.apache.pig.tools.grunt.Grunt.java</file><file>test.org.apache.pig.test.TestGrunt.java</file></fixedFiles></bug><bug fixdate="2011-05-25 08:53:02" id="2083" opendate="2011-05-20 06:22:45"><buginformation><summary>[PIG-2083] bincond ERROR 1025: Invalid field projection when null is used - ASF JIRA</summary><description>This is a regression for 9. a = load '1.txt' as (a0, a1); b = foreach a generate (a0==0?null:2); explain b; ERROR 1025: Invalid field projection. Projected field [null] does not exist in schema</description></buginformation><fixedFiles><file>test.org.apache.pig.test.TestMacroExpansion.java</file><file>test.org.apache.pig.parser.TestQueryParser.java</file></fixedFiles></bug><bug fixdate="2011-05-20 08:24:34" id="2081" opendate="2011-05-19 07:58:19"><buginformation><summary>[PIG-2081] Dryrun gives wrong line numbers in error message for scripts containing macro. - ASF JIRA</summary><description>For following script (test.pig) &#13;
1 DEFINE my_macro (X,key) returns Y&#13;
  2         {&#13;
  3         tmp1 = foreach  $X generate TOKENIZE((chararray)$key) as tokens;&#13;
  4         tmp2 = foreach tmp1 generate flatten(tokens);&#13;
  5         tmp3 = order tmp2 by $0;&#13;
  6         $Y = distinct tmp3;&#13;
  7         }&#13;
  8 &#13;
  9 A = load 'sometext' using TextLoader() as (row) ;&#13;
 10 E = my_macro(A,row);&#13;
 11 &#13;
 12 A1 = load 'sometext2' using TextLoader() as (row1);&#13;
 13 E1 = my_macro(A1,row1);&#13;
 14 &#13;
 15 A3 = load 'sometext3' using TextLoader() as (row3);&#13;
 16 E3 = my_macro(A3,$0);&#13;
 17 &#13;
 18 F = cogroup E by $0, E1 by $0,E3 by $0;&#13;
 19 dump F;&#13;
 pig test.pig gives correct line number in error message: &#13;
ERROR org.apache.pig.tools.grunt.Grunt - ERROR 1200: &lt;file test.pig, line 16, column 17&gt;  mismatched input '$0' expecting set null&#13;
 while pig -r test.pig gives incorrect line number in error message: &#13;
ERROR org.apache.pig.Main - ERROR 1200: &lt;file test.pig.substituted, line 1, column 17&gt;  mismatched input '$0' expecting set null</description></buginformation><fixedFiles><file>test.org.apache.pig.test.TestMacroExpansion.java</file></fixedFiles></bug><bug fixdate="2011-05-19 10:28:27" id="2078" opendate="2011-05-18 06:29:40"><buginformation><summary>[PIG-2078] POProject.getNext(DataBag) does not handle null - ASF JIRA</summary><description>The following script fail with "-t MergeForEach" &#13;
a = load '1.txt' as (a0:bag{}, a1:int);&#13;
b = foreach a generate a0;&#13;
dump b;&#13;
 1.txt: {(1)} 2 3 Error stack: java.lang.NullPointerException at org.apache.pig.backend.hadoop.executionengine.physicalLayer.expressionOperators.POProject.consumeInputBag(POProject.java:310) at org.apache.pig.backend.hadoop.executionengine.physicalLayer.expressionOperators.POProject.getNext(POProject.java:251) at org.apache.pig.backend.hadoop.executionengine.physicalLayer.PhysicalOperator.getNext(PhysicalOperator.java:316) at org.apache.pig.backend.hadoop.executionengine.physicalLayer.relationalOperators.POForEach.processPlan(POForEach.java:332) at org.apache.pig.backend.hadoop.executionengine.physicalLayer.relationalOperators.POForEach.getNext(POForEach.java:284) at org.apache.pig.backend.hadoop.executionengine.mapReduceLayer.PigMapBase.runPipeline(PigMapBase.java:261) at org.apache.pig.backend.hadoop.executionengine.mapReduceLayer.PigMapBase.map(PigMapBase.java:256) at org.apache.pig.backend.hadoop.executionengine.mapReduceLayer.PigMapBase.map(PigMapBase.java:1) at org.apache.hadoop.mapreduce.Mapper.run(Mapper.java:144) at org.apache.hadoop.mapred.MapTask.runNewMapper(MapTask.java:621) at org.apache.hadoop.mapred.MapTask.run(MapTask.java:305) at org.apache.hadoop.mapred.LocalJobRunner$Job.run(LocalJobRunner.java:177)</description></buginformation><fixedFiles><file>src.org.apache.pig.backend.hadoop.executionengine.physicalLayer.expressionOperators.POProject.java</file><file>test.org.apache.pig.test.TestEvalPipeline2.java</file></fixedFiles></bug><bug fixdate="2011-05-16 05:13:55" id="2076" opendate="2011-05-14 12:53:17"><buginformation><summary>[PIG-2076] update documentation, help command with correct default value of pig.cachedbag.memusage - ASF JIRA</summary><description>The default value of pig.cachedbag.memusage was changed to 0.2 in pig 0.8, as part of changes in PIG-1447 . But the help command and documentation shows older default value of 0.1 .</description></buginformation><fixedFiles><file>src.org.apache.pig.Main.java</file></fixedFiles></bug><bug fixdate="2011-05-16 04:59:39" id="2072" opendate="2011-05-13 08:05:02"><buginformation><summary>[PIG-2072] NPE when udf has project-star argument and input schema is null - ASF JIRA</summary><description>grunt&gt; l = load 'x' ;                 &#13;
grunt&gt; f = foreach l generate CONCAT(*);&#13;
2011-05-13 12:04:48,355 [main] ERROR org.apache.pig.tools.grunt.Grunt - ERROR 2999: Unexpected internal error. null</description></buginformation><fixedFiles><file>src.org.apache.pig.newplan.logical.visitor.TypeCheckingExpVisitor.java</file><file>test.org.apache.pig.test.TestProjectStarRangeInUdf.java</file></fixedFiles></bug><bug fixdate="2011-05-16 07:44:53" id="2071" opendate="2011-05-13 07:06:18"><buginformation><summary>[PIG-2071] casting numeric type to chararray during schema merge for union is inconsistent with other schema merge cases - ASF JIRA</summary><description>In PIG-1536, if a column in output of union has a source column one input of type charraray and in other it is of a numeric type, the column of numeric type will be cast to chararray. But in all other cases, chararray and numeric types are considered incompatible, and as a result such implicit casting is not done. To be consistent with other cases, union also should consider chararray and numeric types to be incompatible.</description></buginformation><fixedFiles><file>test.org.apache.pig.test.TestUnionOnSchema.java</file><file>test.org.apache.pig.parser.TestUnionOnSchemaSetter.java</file><file>src.org.apache.pig.newplan.logical.relational.LogicalSchema.java</file><file>test.org.apache.pig.test.TestSchema.java</file></fixedFiles></bug><bug fixdate="2011-05-16 07:57:11" id="2070" opendate="2011-05-13 07:04:48"><buginformation><summary>[PIG-2070] "Unknown" appears in error message for an error case - ASF JIRA</summary><description>For the following query: a = load '1.txt' as (a0:int, a1:int); b = load '2.txt' as (a0:int, a1:chararray); c = cogroup a by (a0,a1), b by (a0,a1); Pig gives the following message, which includes "unknown" word. 2011-05-13 11:01:18,682 [main] ERROR org.apache.pig.tools.grunt.Grunt - ERROR 1051: &lt;line 3, column 4&gt; Cannot cast to Unknown The error message should be more meaningful.</description></buginformation><fixedFiles><file>test.org.apache.pig.test.TestTypeCheckingValidatorNewLP.java</file><file>test.org.apache.pig.test.TestLogicalPlanBuilder.java</file><file>src.org.apache.pig.newplan.logical.visitor.TypeCheckingRelVisitor.java</file></fixedFiles></bug><bug fixdate="2011-05-16 06:15:08" id="2069" opendate="2011-05-13 03:19:30"><buginformation><summary>[PIG-2069] LoadFunc jar does not ship to backend in MultiQuery case - ASF JIRA</summary><description>Pig is able to automatically figure out the jar containing the LoadFunc and ship them to backend. However, the following script didn't: &#13;
A = load '1.txt' using SomeLoadFunc();&#13;
B = filter A by $0==0;&#13;
C = filter A by $1==1;&#13;
D = join B by $0, C by $0;&#13;
dump D;&#13;
 The reason is this query is a multiquery (A is reused and thus create an implicit split). When we merge multiquery into one job, we didn't merge udfs list properly.</description></buginformation><fixedFiles><file>src.org.apache.pig.backend.hadoop.executionengine.mapReduceLayer.MultiQueryOptimizer.java</file></fixedFiles></bug><bug fixdate="2011-05-13 09:38:43" id="2067" opendate="2011-05-12 11:31:21"><buginformation><summary>[PIG-2067] FilterLogicExpressionSimplifier removed some branches in some cases - ASF JIRA</summary><description>The following script produce wrong result: &#13;
A = load 'a.dat' as (cookie);&#13;
B = load 'b.dat' as (cookie);&#13;
C = cogroup A by cookie, B by cookie;&#13;
E = filter C by COUNT(B)&gt;0 AND COUNT(A)&gt;0;&#13;
explain E;&#13;
 a.dat: 1 1 2 2 3 3 4 4 5 5 6 6 7 7 b.dat: 3 3 4 4 5 5 6 6 7 7 8 8 Expected output: (3, {(3)},{(3)} ) (4, {(4)},{(4)} ) (5, {(5)},{(5)} ) (6, {(6)},{(6)} ) (7, {(7)},{(7)} ) We get: (3, {(3)},{(3)} ) (4, {(4)},{(4)} ) (5, {(5)},{(5)} ) (6, {(6)},{(6)} ) (7, {(7)},{(7)} ) (8,{}, {(8)} )</description></buginformation><fixedFiles><file>test.org.apache.pig.test.TestFilterSimplification.java</file><file>src.org.apache.pig.newplan.logical.expression.UserFuncExpression.java</file></fixedFiles></bug><bug fixdate="2011-05-13 07:13:31" id="2062" opendate="2011-05-12 06:38:54"><buginformation><summary>[PIG-2062] Script silently ended - ASF JIRA</summary><description>The following script ended silently without execution. &#13;
a = load '1.txt' as (a0, a1);&#13;
b = load '2.txt' as (b0, b1);&#13;
all = join a by a0, b by b0;&#13;
store all into '1111';&#13;
 If change the alias "all", it will run. We need to throw exception saying "all" is a keyword.</description></buginformation><fixedFiles><file>test.org.apache.pig.test.TestCombiner.java</file><file>test.org.apache.pig.test.TestExampleGenerator.java</file><file>test.org.apache.pig.test.TestLogicalPlanBuilder.java</file><file>test.org.apache.pig.parser.TestLogicalPlanGenerator.java</file></fixedFiles></bug><bug fixdate="2011-05-13 07:58:48" id="2059" opendate="2011-05-11 01:06:19"><buginformation><summary>[PIG-2059] PIG doesn't validate incomplete query in batch mode even if -c option is given - ASF JIRA</summary><description>Given the following in a file to Pig, pig doesn't report any error, even if -c option is given: A = load 'x' as (u, v); B = foreach A generate $3; It's questionable whether to validate the query in batch mode as it doesn't contain any store/dump statement. However, if -c option is given, validation should be nevertheless performed.</description></buginformation><fixedFiles><file>test.org.apache.pig.test.TestUnionOnSchema.java</file><file>src.org.apache.pig.PigServer.java</file><file>test.org.apache.pig.test.TestLogicalPlanBuilder.java</file><file>test.org.apache.pig.test.TestStreaming.java</file><file>test.org.apache.pig.test.TestMacroExpansion.java</file><file>test.org.apache.pig.test.TestPigServer.java</file><file>test.org.apache.pig.test.TestBuiltin.java</file><file>test.org.apache.pig.test.TestNewPlanLogToPhyTranslationVisitor.java</file><file>test.org.apache.pig.parser.TestQueryParser.java</file><file>test.org.apache.pig.test.TestGrunt.java</file></fixedFiles></bug><bug fixdate="2011-05-11 05:54:53" id="2058" opendate="2011-05-10 11:10:41"><buginformation><summary>[PIG-2058] Macro missing returns clause doesn't give a good error message - ASF JIRA</summary><description>For the following query: define test( out1,out2 ) { A = load 'x' as (u:int, v:int); $B = filter A by u &lt; 3 and v &lt; 20; } Pig gives the following error message: Syntax error,unexpected symbol at or near '{' Previously, it gives: mismatched input '{' expecting RETURNS The previous message is more meaningful.</description></buginformation><fixedFiles><file>test.org.apache.pig.test.TestMacroExpansion.java</file></fixedFiles></bug><bug fixdate="2011-05-12 07:12:41" id="2056" opendate="2011-05-10 08:06:44"><buginformation><summary>[PIG-2056] Jython error messages should show script name - ASF JIRA</summary><description>Instead of messages like &#13;
Traceback (most recent call last):&#13;
  File "&lt;iostream&gt;", line 12, in &lt;module&gt;&#13;
 It should display the script file name: &#13;
Traceback (most recent call last):&#13;
  File "test.py", line 12, in &lt;module&gt;</description></buginformation><fixedFiles><file>src.org.apache.pig.scripting.BoundScript.java</file><file>src.org.apache.pig.scripting.jython.JythonScriptEngine.java</file><file>test.org.apache.pig.test.TestScriptLanguage.java</file></fixedFiles></bug><bug fixdate="2011-05-10 08:18:05" id="2052" opendate="2011-05-09 07:12:34"><buginformation><summary>[PIG-2052] Ship guava.jar to backend - ASF JIRA</summary><description>We need to ship guava.jar to backend. GenericInvoker is using it.</description></buginformation><fixedFiles><file>src.org.apache.pig.impl.util.JarManager.java</file></fixedFiles></bug><bug fixdate="2011-05-06 11:52:40" id="2049" opendate="2011-05-06 08:04:29"><buginformation><summary>[PIG-2049] Pig should display TokenMgrError message consistently across all parsers - ASF JIRA</summary><description>For example, for org.apache.pig.tools.pigscript.parser.TokenMgrError, Pig logs &#13;
ERROR 1000: Error during parsing. Lexical error at line 5, column 0.&#13;
 But for org.apache.pig.tools.parameters.TokenMgrError, Pig logs &#13;
ERROR 2998: Unhandled internal error. Lexical error at line 10, column 0.&#13;
 Both should have error code 1000.</description></buginformation><fixedFiles><file>src.org.apache.pig.impl.util.LogUtils.java</file></fixedFiles></bug><bug fixdate="2011-05-07 12:56:50" id="2043" opendate="2011-05-05 07:07:14"><buginformation><summary>[PIG-2043] Ship antlr-runtime.jar to backend - ASF JIRA</summary><description>Following the discussion in PIG-2040, we want to make getSchemaFromString work in the backend, so we need to ship antlr-runtime.jar.</description></buginformation><fixedFiles><file>src.org.apache.pig.impl.util.JarManager.java</file></fixedFiles></bug><bug fixdate="2011-05-05 09:11:16" id="2041" opendate="2011-05-05 02:38:04"><buginformation><summary>[PIG-2041] Minicluster should make each run independent - ASF JIRA</summary><description>Minicluster will reuse ~/pigtest/conf/hadoop-site.xml. If something wrong in hadoop-site.xml, next test will also be affected. This leads to some mysterious test failures.</description></buginformation><fixedFiles><file>test.org.apache.pig.test.MiniCluster.java</file></fixedFiles></bug><bug fixdate="2011-05-05 09:09:31" id="2040" opendate="2011-05-04 10:47:28"><buginformation><summary>[PIG-2040] Move classloader from QueryParserDriver to PigContext - ASF JIRA</summary><description>After PIG-1775, mapreduce mode fail. The reason is we move classloader from LogicalPlanBuilder to QueryParserDriver, which will need antlr.jar, however, we don't ship antlr.jar to backend. It is better to move classloader to PigContext.</description></buginformation><fixedFiles><file>src.org.apache.pig.parser.QueryParserDriver.java</file><file>src.org.apache.pig.impl.PigContext.java</file><file>src.org.apache.pig.Main.java</file><file>src.org.apache.pig.backend.hadoop.executionengine.mapReduceLayer.MapReduceLauncher.java</file></fixedFiles></bug><bug fixdate="2011-05-10 09:21:49" id="2039" opendate="2011-05-04 08:38:38"><buginformation><summary>[PIG-2039] IndexOutOfBounException for a case - ASF JIRA</summary><description>The following query gives an exception: a = load '1.txt' as (a0:int, a1:int, a2:int); b = group a by a0; c = foreach b { c1 = limit a 10; c2 = distinct c1.a1; c3 = distinct c1.a2; generate c2, c3;} ; store c into 'output'; 2011-05-04 12:36:01,720 [main] ERROR org.apache.pig.tools.grunt.Grunt - ERROR 2999: Unexpected internal error. Index: 0, Size: 0 Stack trace: java.lang.IndexOutOfBoundsException: Index: 0, Size: 0 at java.util.ArrayList.RangeCheck(ArrayList.java:547) at java.util.ArrayList.get(ArrayList.java:322) at org.apache.pig.newplan.logical.expression.ProjectExpression.getFieldSchema(ProjectExpression.java:279) at org.apache.pig.newplan.logical.relational.LOGenerate.getSchema(LOGenerate.java:88) at org.apache.pig.newplan.logical.visitor.SchemaAliasVisitor.validate(SchemaAliasVisitor.java:60) at org.apache.pig.newplan.logical.visitor.SchemaAliasVisitor.visit(SchemaAliasVisitor.java:104) at org.apache.pig.newplan.logical.relational.LOGenerate.accept(LOGenerate.java:240) at org.apache.pig.newplan.DependencyOrderWalker.walk(DependencyOrderWalker.java:75) at org.apache.pig.newplan.PlanVisitor.visit(PlanVisitor.java:50) at org.apache.pig.newplan.logical.visitor.SchemaAliasVisitor.visit(SchemaAliasVisitor.java:99) at org.apache.pig.newplan.logical.relational.LOForEach.accept(LOForEach.java:73) at org.apache.pig.newplan.DependencyOrderWalker.walk(DependencyOrderWalker.java:75) at org.apache.pig.newplan.PlanVisitor.visit(PlanVisitor.java:50) at org.apache.pig.PigServer$Graph.compile(PigServer.java:1664) at org.apache.pig.PigServer$Graph.validateQuery(PigServer.java:1615) at org.apache.pig.PigServer$Graph.registerQuery(PigServer.java:1586) at org.apache.pig.PigServer.registerQuery(PigServer.java:580) at org.apache.pig.tools.grunt.GruntParser.processPig(GruntParser.java:930) at org.apache.pig.tools.pigscript.parser.PigScriptParser.parse(PigScriptParser.java:386) at org.apache.pig.tools.grunt.GruntParser.parseStopOnError(GruntParser.java:176) at org.apache.pig.tools.grunt.GruntParser.parseStopOnError(GruntParser.java:152) at org.apache.pig.tools.grunt.Grunt.run(Grunt.java:76) at org.apache.pig.Main.run(Main.java:488) at org.apache.pig.Main.main(Main.java:109)</description></buginformation><fixedFiles><file>test.org.apache.pig.test.TestLogicalPlanBuilder.java</file><file>src.org.apache.pig.newplan.logical.relational.LOForEach.java</file></fixedFiles></bug><bug fixdate="2011-05-10 01:10:07" id="2038" opendate="2011-05-04 08:30:36"><buginformation><summary>[PIG-2038] Pig fails to parse empty tuple/map/bag constant - ASF JIRA</summary><description>Pig fails to parse the following query: a = foreach (load 'b') generate (); store a into 'output'; Error msg: Failed to parse: null Similar problem occurs for empty bag/map constant.</description></buginformation><fixedFiles><file>test.org.apache.pig.test.TestLogicalPlanBuilder.java</file><file>test.org.apache.pig.test.TestMultiQuery.java</file></fixedFiles></bug><bug fixdate="2011-05-11 01:34:08" id="2035" opendate="2011-05-04 06:33:31"><buginformation><summary>[PIG-2035] Macro expansion doesn't handle multiple expansions of same macro inside another macro - ASF JIRA</summary><description>Here is the use case: &#13;
define test ( in, out, x ) returns c { &#13;
    a = load '$in' as (name, age, gpa);&#13;
    b = group a by gpa;&#13;
    $c = foreach b generate group, COUNT(a.$x);&#13;
    store $c into '$out';&#13;
};&#13;
&#13;
define test2( in, out ) returns x { &#13;
    $x = test( '$in', '$out', 'name' );&#13;
    $x = test( '$in', '$out.1', 'age' );&#13;
    $x = test( '$in', '$out.2', 'gpa' );&#13;
};&#13;
&#13;
x = test2('studenttab10k', 'myoutput');</description></buginformation><fixedFiles><file>test.org.apache.pig.test.TestMacroExpansion.java</file><file>src.org.apache.pig.parser.PigMacro.java</file></fixedFiles></bug><bug fixdate="2011-05-07 01:14:31" id="2033" opendate="2011-05-04 12:08:48"><buginformation><summary>[PIG-2033] Pig returns sucess for the failed Pig script - ASF JIRA</summary><description>Pig returns success when a Pig script fails but the count of failed MR jobs is zero.</description></buginformation><fixedFiles><file>src.org.apache.pig.backend.hadoop.executionengine.mapReduceLayer.MapReduceLauncher.java</file></fixedFiles></bug><bug fixdate="2011-05-10 09:47:29" id="2030" opendate="2011-05-03 02:25:06"><buginformation><summary>[PIG-2030] Merged join/cogroup does not automatically ship loader - ASF JIRA</summary><description>The following script fail due to TableLoader class not found (If the jar is in classpath): &#13;
a = load '/user/pig/tests/data/zebra/singlefile/studentsortedtab10k' using org.apache.hadoop.zebra.pig.TableLoader('', 'sorted');&#13;
b = load '/user/pig/tests/data/zebra/singlefile/votersortedtab10k' using org.apache.hadoop.zebra.pig.TableLoader('', 'sorted');&#13;
g = cogroup a by $0, b by $0 using 'merge';&#13;
store g into '/user/pig/out/jianyong.1304374720/ZebraMapCogrp_1.out';&#13;
 If we use register, the error goes away. However, Pig always ship jars containing LoadFunc automatically. It should be the same for merged cogroup/join.</description></buginformation><fixedFiles><file>src.org.apache.pig.backend.hadoop.executionengine.mapReduceLayer.MRCompiler.java</file><file>test.org.apache.pig.test.TestMRCompiler.java</file></fixedFiles></bug><bug fixdate="2011-05-20 08:24:59" id="2029" opendate="2011-05-03 01:26:10"><buginformation><summary>[PIG-2029] Inconsistency in Pig Stats reports - ASF JIRA</summary><description>I have a Pig script which reports varying Stats for the same M/R job (same inputs). Sometimes the PigStats reports all the stats (such as Maps,Reduces,MaxMapTime,MinMapTime,AvgMapTime,MaxReduceTime, MinReduceTime and AvgReduceTime) for the M/R job as 0. Sometimes it reports it correctly. Enclosed are the stderr logs for 2 runs, you can notice that for Run 1 job_201103091134_556600 from Run 1; has 0 against all the columns whereas in Run 2, Hadoop job job_201104272229_75693 has some valid values. The actual Job Tracker link shows that they are non empty. This points to a bug in the interaction of the PigStats module with the Jobtracker. Run 1: Job Stats (time in seconds): JobId Maps Reduces MaxMapTime MinMapTIme AvgMapTime MaxReduceTime MinReduceTime AvgReduceTime Alias Feature Outputs job_201103091134_556458 160 100 552 191 368 1257 371 392 IN,SP10P,SP11P,SP12P,SP13P,SP16P,SP17P,SP18P,SP20P,SP21P,SP22P,SP23P,SP24P,SP26P,SP27P,SP28P,SP29P,SP30P,SP31P,SP32P,SP33P,SP34P,SP4P,SP6P,SP7P,SP8P,SP9P DISTINCT,MULTI_QUERY job_201103091134_556600 0 0 0 0 0 0 0 0 UNION5 MULTI_QUERY,MAP_ONLY /user/viraj/dir,, job_201103091134_556601 7 100 17 8 14 200 15 27 CNJOIN25,GNJOIN25,sampleNJOIN25 GROUP_BY,COMBINER job_201103091134_556602 0 0 0 0 0 0 0 0 CNJOIN3,GNJOIN3,sampleNJOIN3 GROUP_BY,COMBINER job_201103091134_556603 0 0 0 0 0 0 0 0 CNJOIN15,GNJOIN15,sampleNJOIN15 GROUP_BY,COMBINER job_201103091134_556604 2 100 13 7 10 34 13 31 CNJOIN19,GNJOIN19,sampleNJOIN19 GROUP_BY,COMBINER job_201103091134_556644 0 0 0 0 0 0 0 0 ONJOIN15 SAMPLER job_201103091134_556645 0 0 0 0 0 0 0 0 ONJOIN25 SAMPLER job_201103091134_556646 0 0 0 0 0 0 0 0 ONJOIN3 SAMPLER job_201103091134_556654 0 0 0 0 0 0 0 0 ONJOIN19 SAMPLER job_201103091134_556662 0 0 0 0 0 0 0 0 ONJOIN19 ORDER_BY,COMBINER .. Run 2: Job Stats (time in seconds): JobId Maps Reduces MaxMapTime MinMapTIme AvgMapTime MaxReduceTime MinReduceTime AvgReduceTime Alias Feature Outputs job_201104272229_75503 159 100 484 192 353 396 308 321 IN,SP10P,SP11P,SP12P,SP13P,SP16P,SP17P,SP18P,SP20P,SP21P,SP22P,SP23P,SP24P,SP26P,SP27P,SP28P,SP29P,SP30P,SP31P,SP32P,SP33P,SP34P,SP4P,SP6P,SP7P,SP8P,SP9P DISTINCT,MULTI_QUERY job_201104272229_75693 18 0 31 14 24 0 0 UNION5 MULTI_QUERY,MAP_ONLY /user/viraj/dir, job_201104272229_75694 7 100 34 13 22 46 20 25 CNJOIN25,GNJOIN25,sampleNJOIN25 GROUP_BY,COMBINER job_201104272229_75695 125 100 19 11 15 32 18 26 CNJOIN3,GNJOIN3,sampleNJOIN3 GROUP_BY,COMBINER job_201104272229_75698 1 100 12 12 12 13 9 11 CNJOIN15,GNJOIN15,sampleNJOIN15 GROUP_BY,COMBINER job_201104272229_75702 2 100 21 5 13 35 22 26 CNJOIN19,GNJOIN19,sampleNJOIN19 GROUP_BY,COMBINER job_201104272229_75724 1 1 4 4 4 11 11 11 ONJOIN15 SAMPLER job_201104272229_75725 0 0 0 0 0 0 0 ONJOIN25 SAMPLER job_201104272229_75726 6 1 8 6 8 24 24 24 ONJOIN3 SAMPLER job_201104272229_75729 0 0 0 0 0 0 0 ONJOIN19 SAMPLER job_201104272229_75752 1 100 5 5 5 12 9 11 ONJOIN19 ORDER_BY,COMBINER .. Viraj</description></buginformation><fixedFiles><file>src.org.apache.pig.tools.pigstats.PigStatsUtil.java</file><file>src.org.apache.pig.tools.pigstats.JobStats.java</file></fixedFiles></bug><bug fixdate="2011-05-04 01:12:27" id="2028" opendate="2011-05-02 11:37:12"><buginformation><summary>[PIG-2028] Speed up multiquery unit tests - ASF JIRA</summary><description>Switch TestMultiQueryBasic and TestMultiQuery to use LOCAL mode. The results on my laptop: Using Mini Cluster: TestMultiQueryBasic: 17 min 17 sec TestMultiQuery: 23 min 2 sec Using LOCAL mode: TestMultiQueryBasic: 4 min 17 sec TestMultiQuery: 5 min 51 sec</description></buginformation><fixedFiles><file>test.org.apache.pig.test.TestMultiQuery.java</file><file>test.org.apache.pig.test.TestMultiQueryBasic.java</file><file>test.org.apache.pig.test.Util.java</file></fixedFiles></bug><bug fixdate="2011-04-30 01:13:46" id="2018" opendate="2011-04-28 12:30:01"><buginformation><summary>[PIG-2018] NPE for co-group with group-by column having complex schema and different load functions for each input - ASF JIRA</summary><description>l1 = load 'x' using PigStorage(':') as (a : (i : int),b,c);&#13;
l2 = load 'x' as (a,b,c);&#13;
cg = cogroup l1 by a, l2 by a;&#13;
explain cg;&#13;
&#13;
Gives -&#13;
ERROR 1067: Unable to explain alias cg&#13;
&#13;
org.apache.pig.impl.logicalLayer.FrontendException: ERROR 1067: Unable to explain alias cg&#13;
        at org.apache.pig.PigServer.explain(PigServer.java:1075)&#13;
        at org.apache.pig.tools.grunt.GruntParser.explainCurrentBatch(GruntParser.java:381)&#13;
        at org.apache.pig.tools.grunt.GruntParser.processExplain(GruntParser.java:313)&#13;
        at org.apache.pig.tools.grunt.GruntParser.processExplain(GruntParser.java:276)&#13;
        at org.apache.pig.tools.pigscript.parser.PigScriptParser.Explain(PigScriptParser.java:665)&#13;
        at org.apache.pig.tools.pigscript.parser.PigScriptParser.parse(PigScriptParser.java:325)&#13;
        at org.apache.pig.tools.grunt.GruntParser.parseStopOnError(GruntParser.java:176)&#13;
        at org.apache.pig.tools.grunt.GruntParser.parseStopOnError(GruntParser.java:152)&#13;
        at org.apache.pig.tools.grunt.Grunt.exec(Grunt.java:90)&#13;
        at org.apache.pig.Main.run(Main.java:554)&#13;
        at org.apache.pig.Main.main(Main.java:109)&#13;
Caused by: java.lang.NullPointerException&#13;
        at org.apache.pig.newplan.logical.visitor.LineageFindRelVisitor.mapMatchLoadFuncToUid(LineageFindRelVisitor.java:528)&#13;
        at org.apache.pig.newplan.logical.visitor.LineageFindRelVisitor.visit(LineageFindRelVisitor.java:287)&#13;
        at org.apache.pig.newplan.logical.relational.LOCogroup.accept(LOCogroup.java:235)&#13;
        at org.apache.pig.newplan.DependencyOrderWalker.walk(DependencyOrderWalker.java:75)&#13;
        at org.apache.pig.newplan.PlanVisitor.visit(PlanVisitor.java:50)&#13;
        at org.apache.pig.newplan.logical.visitor.CastLineageSetter.&lt;init&gt;(CastLineageSetter.java:57)&#13;
        at org.apache.pig.PigServer$Graph.compile(PigServer.java:1683)&#13;
        at org.apache.pig.PigServer$Graph.compile(PigServer.java:1659)&#13;
        at org.apache.pig.PigServer$Graph.access$200(PigServer.java:1389)&#13;
        at org.apache.pig.PigServer.buildStorePlan(PigServer.java:1277)&#13;
        at org.apache.pig.PigServer.explain(PigServer.java:1038)&#13;
        ... 10 more</description></buginformation><fixedFiles><file>test.org.apache.pig.test.TestTypeCheckingValidatorNewLP.java</file><file>src.org.apache.pig.newplan.logical.visitor.LineageFindRelVisitor.java</file></fixedFiles></bug><bug fixdate="2011-05-03 02:42:18" id="2016" opendate="2011-04-26 09:56:34"><buginformation><summary>[PIG-2016] -dot option does not work with explain and new logical plan - ASF JIRA</summary><description>If you specify -dot in explain, it is supposed to produce a file with the graphs in .dot format. While the physical plan and map reduce plan are correctly output in .dot format, the new logical plan is still output in text format.</description></buginformation><fixedFiles><file>src.org.apache.pig.newplan.logical.DotLOPrinter.java</file><file>src.org.apache.pig.newplan.logical.relational.LogicalPlan.java</file><file>test.org.apache.pig.test.TestEvalPipelineLocal.java</file><file>src.org.apache.pig.newplan.PlanDumper.java</file><file>src.org.apache.pig.newplan.DotPlanDumper.java</file></fixedFiles></bug><bug fixdate="2011-04-30 12:05:51" id="2015" opendate="2011-04-26 09:53:55"><buginformation><summary>[PIG-2015] Explain writes out logical plan twice - ASF JIRA</summary><description>Running explain on a script writes out the logical plan twice, the physical plan once, and the map reduce plan once.</description></buginformation><fixedFiles><file>src.org.apache.pig.PigServer.java</file></fixedFiles></bug><bug fixdate="2011-05-12 11:01:28" id="2014" opendate="2011-04-26 03:35:38"><buginformation><summary>[PIG-2014] SAMPLE shouldn't be pushed up - ASF JIRA</summary><description>Consider the following code: &#13;
tfidf_all = LOAD '$TFIDF' AS (doc_id:chararray, token:chararray, weight:double);&#13;
grouped   = GROUP tfidf_all BY doc_id;&#13;
vectors   = FOREACH grouped GENERATE group AS doc_id, tfidf_all.(token, weight) AS vector;&#13;
DUMP vectors;&#13;
 This, of course, runs just fine. In a real example, tfidf_all contains 1,428,280 records. The reduce output records should be exactly the number of documents, which turn out to be 18,863 in this case. All well and good. The strangeness comes when you add a SAMPLE command: &#13;
sampled = SAMPLE vectors 0.0012;&#13;
DUMP sampled;&#13;
 Running this results in 1,513 reduce output records. The reduce output records be much much closer to 22 or 23 records (eg. 0.0012*18863). Evidently, Pig rewrites SAMPLE into filter, and then pushes that filter in front of the group. It shouldn't push that filter since the UDF is non-deterministic. Quick fix: If you add "-t PushUpFilter" to your command line when invoking pig this won't happen.</description></buginformation><fixedFiles><file>src.org.apache.pig.newplan.logical.rules.OptimizerUtils.java</file><file>src.org.apache.pig.builtin.RANDOM.java</file><file>src.org.apache.pig.newplan.logical.rules.PushDownForEachFlatten.java</file><file>test.org.apache.pig.test.TestNewPlanFilterRule.java</file><file>src.org.apache.pig.newplan.logical.rules.FilterAboveForeach.java</file><file>src.org.apache.pig.newplan.logical.optimizer.UidResetter.java</file><file>test.org.apache.pig.test.TestNewPlanFilterAboveForeach.java</file><file>test.org.apache.pig.test.TestNewPlanPushDownForeachFlatten.java</file><file>src.org.apache.pig.newplan.logical.optimizer.SchemaResetter.java</file><file>src.org.apache.pig.builtin.Nondeterministic.java</file><file>src.org.apache.pig.newplan.logical.rules.PushUpFilter.java</file></fixedFiles></bug><bug fixdate="2011-05-09 11:52:16" id="2012" opendate="2011-04-23 03:35:56"><buginformation><summary>[PIG-2012] Comments at the begining of the file throws off line numbers in errors - ASF JIRA</summary><description>The preprocessor does not appear to be handling leading comments properly when calculating line numbers for error messages. In the attached script, the error is reported to be on line 7. It is actually on line 10.</description></buginformation><fixedFiles><file>src.org.apache.pig.parser.PigParserNode.java</file><file>src.org.apache.pig.PigServer.java</file><file>src.org.apache.pig.parser.QueryParserUtils.java</file><file>src.org.apache.pig.parser.QueryParserDriver.java</file><file>src.org.apache.pig.parser.SourceLocation.java</file><file>test.org.apache.pig.test.TestMacroExpansion.java</file><file>src.org.apache.pig.parser.PigMacro.java</file><file>src.org.apache.pig.parser.PigParserNodeAdaptor.java</file></fixedFiles></bug><bug fixdate="2011-04-22 07:06:48" id="2007" opendate="2011-04-21 11:04:25"><buginformation><summary>[PIG-2007] Parsing error when map key referred directly from udf in nested foreach - ASF JIRA</summary><description>The below script when executed with version 0.9 fails with parsing error. &#13;
 ERROR org.apache.pig.tools.grunt.Grunt - ERROR 1000: Error during parsing. &lt;line 2, column 15&gt; mismatched input '{' expecting GENERATE&#13;
 Script1 &#13;
register myudf.jar;&#13;
A = load 'test.txt' using PigStorage() as (a:int,b:chararray);&#13;
B1 = foreach A {&#13;
        C = test.TOMAP('key1',$1)#'key1';&#13;
        generate C as C;&#13;
}&#13;
 The above happens when, in a nested foreach i refer to a map key directly from a udf result The same would work if one executes without the nested foreach. &#13;
register myudf.jar;&#13;
A = load 'test.txt' using PigStorage() as (a:int,b:chararray);&#13;
B1 = foreach A generate test.TOMAP('key1',$1)#'key1';&#13;
dump B1;&#13;
 Script1 works well with 0.8.</description></buginformation><fixedFiles><file>test.org.apache.pig.parser.TestLogicalPlanGenerator.java</file></fixedFiles></bug><bug fixdate="2011-04-26 07:13:41" id="2006" opendate="2011-04-21 01:22:07"><buginformation><summary>[PIG-2006] Regression: NPE when Pig processes an empty script file - ASF JIRA</summary><description>If a pig script file is empty and supplied as input for Pig (using -f option), an NPE is thrown. Stacktrace: java.lang.NullPointerException at java.util.regex.Matcher.getTextLength(Matcher.java:1140) at java.util.regex.Matcher.reset(Matcher.java:291) at java.util.regex.Matcher.&lt;init&gt;(Matcher.java:211) at java.util.regex.Pattern.matcher(Pattern.java:888) at org.apache.pig.scripting.ScriptEngine$SupportedScriptLang.accepts(ScriptEngine.java:89) at org.apache.pig.scripting.ScriptEngine.getSupportedScriptLang(ScriptEngine.java:163) at org.apache.pig.Main.determineScriptType(Main.java:892) at org.apache.pig.Main.run(Main.java:378) at org.apache.pig.Main.main(Main.java:108) This seems related Jython support in 0.9.</description></buginformation><fixedFiles><file>test.org.apache.pig.test.TestPigRunner.java</file><file>src.org.apache.pig.scripting.ScriptEngine.java</file></fixedFiles></bug></bugrepository>